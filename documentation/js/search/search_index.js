var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiException.html",[0,0.042,1,1.694]],["body/classes/ApiException.html",[0,0.04,1,2.215,2,1.227,3,0.204,4,0.204,5,0.137,6,2.511,7,1.856,8,4.018,9,0.355,10,1.856,11,2.668,12,5.8,13,5.8,14,5.653,15,0.968,16,5.195,17,5.195,18,5.195,19,1.573,20,3.002,21,1.673,22,3.385,23,5.195,24,3.366,25,4.119,26,0.852,27,4.178,28,0.639,29,0.031,30,0.397,31,0.545,32,0.397,33,1.454,34,3.002,35,3.002,36,3.002,37,1.023,38,3.002,39,3.002,40,0.334,41,0.889,42,0.397,43,0.204,44,3.002,45,4.178,46,4.178,47,4.178,48,0.779,49,0.02,50,0.02]],["title/modules/AppModule.html",[51,0.804,52,2.071]],["body/modules/AppModule.html",[0,0.04,3,0.204,4,0.204,5,0.137,29,0.032,40,0.491,41,0.889,42,0.397,43,0.204,48,0.487,49,0.02,50,0.02,51,1.209,52,4.074,53,1.13,54,1.13,55,1.334,56,1.334,57,1.13,58,1.856,59,1.334,60,2.511,61,2.511,62,3.3,63,2.895,64,3.3,65,3.3,66,2.997,67,1.856,68,1.334,69,1.334,70,3.002,71,2.438,72,3.113,73,3.002,74,3.5,75,2.187,76,1.945,77,1.454,78,4.178,79,3.002,80,4.178,81,3.002,82,3.002,83,3.002,84,3.002,85,3.002,86,2.511,87,3.002,88,3.002,89,3.002,90,3.002,91,3.002,92,3.043,93,3.002,94,1.945,95,2.511,96,3.002,97,3.002,98,3.002,99,1.752,100,3.002]],["title/controllers/AuthController.html",[101,1.548,102,2.071]],["body/controllers/AuthController.html",[0,0.043,3,0.22,4,0.22,5,0.147,9,0.383,15,1.019,26,0.734,28,1.063,29,0.031,30,0.661,32,0.661,37,1.063,40,0.448,42,0.428,43,0.22,48,0.81,49,0.021,50,0.021,101,2.13,102,2.85,103,1.567,104,2.705,105,4.398,106,2.363,107,3.678,108,4.398,109,3.235,110,2.649,111,3.235,112,3.235,113,3.748,114,3.235,115,3.235,116,3.235,117,2.13,118,3.235,119,3.235,120,3.235,121,2.357,122,2.357,123,2.705,124,2.705,125,1.888,126,2.42,127,2.357,128,1.888,129,2.357,130,2.705,131,2.567,132,2.096,133,2.096,134,3.235,135,1.715,136,4.398,137,3.235,138,3.235,139,3.235,140,3.235,141,3.235,142,3.235,143,3.235,144,3.235,145,3.235,146,3.235]],["title/modules/AuthModule.html",[51,0.804,62,1.865]],["body/modules/AuthModule.html",[0,0.039,3,0.201,4,0.201,5,0.135,29,0.032,40,0.49,42,0.392,43,0.201,48,0.48,49,0.02,50,0.02,51,1.201,53,1.115,54,1.115,55,1.316,56,1.316,57,1.115,58,2.119,59,1.316,62,3.611,66,2.985,67,1.839,68,1.316,69,1.316,71,2.416,74,3.476,75,2.158,86,2.478,94,1.92,95,2.478,99,1.729,102,3.091,103,2.005,125,1.729,126,2.727,127,2.158,128,2.416,129,2.158,130,2.478,147,2.478,148,2.963,149,2.478,150,3.286,151,3.286,152,2.963,153,4.139,154,2.963,155,2.963,156,2.963,157,2.478,158,2.963,159,4.139,160,2.478,161,2.963,162,1.115,163,2.478,164,2.963,165,2.963,166,2.963,167,2.963,168,2.963,169,2.963,170,2.478,171,2.963]],["title/injectables/AuthService.html",[126,1.548,172,0.68]],["body/injectables/AuthService.html",[0,0.04,3,0.206,4,0.206,5,0.138,9,0.359,11,1.87,15,0.975,19,1.585,21,1.679,26,0.71,28,1.028,29,0.031,30,0.639,31,0.507,32,0.639,37,0.896,40,0.417,42,0.401,43,0.206,48,0.783,49,0.02,50,0.02,106,2.317,107,3.52,113,1.966,117,1.47,123,2.538,126,2.038,157,2.538,162,1.819,172,0.896,173,1.24,174,2.538,175,4.209,176,3.035,177,2.767,178,5.817,179,3.035,180,4.209,181,4.209,182,3.802,183,3.035,184,4.365,185,4.209,186,5.219,187,3.035,188,2.727,189,2.038,190,3.035,191,1.47,192,1.966,193,3.035,194,3.035,195,2.211,196,4.209,197,3.035,198,2.538,199,3.035,200,3.035,201,3.035,202,3.035,203,3.035]],["title/classes/BaseQuery.html",[0,0.042,204,1.694]],["body/classes/BaseQuery.html",[0,0.05,2,1.528,3,0.254,4,0.254,5,0.17,9,0.443,10,2.151,25,3.527,26,0.885,29,0.031,31,0.564,32,0.797,43,0.254,48,0.87,49,0.023,50,0.023,204,2.567,205,3.127,206,3.912,207,3.912,208,4.842,209,5.369,210,5.369,211,5.369,212,2.32,213,3.739,214,3.739,215,3.739,216,3.739,217,3.739,218,3.739,219,3.739,220,3.739,221,3.739,222,3.739,223,2.724,224,3.739,225,3.127,226,3.739]],["title/classes/HttpExceptionFilter.html",[0,0.042,227,2.328]],["body/classes/HttpExceptionFilter.html",[0,0.038,1,2.155,2,1.179,3,0.196,4,0.196,5,0.131,8,4.271,9,0.342,15,0.942,19,1.087,22,1.685,24,1.871,26,0.597,28,0.865,29,0.032,30,0.538,31,0.427,32,0.538,37,0.614,40,0.43,41,0.854,42,0.382,43,0.196,48,0.659,49,0.019,50,0.019,113,1.871,133,3.048,135,1.53,162,1.923,227,2.961,228,2.414,229,2.961,230,4.705,231,4.065,232,2.103,233,1.774,234,2.887,235,2.634,236,4.065,237,4.705,238,5.106,239,2.887,240,4.705,241,4.065,242,1.871,243,1.685,244,2.103,245,2.103,246,2.414,247,2.887,248,2.887,249,2.887,250,2.887,251,2.887,252,2.887,253,3.934,254,4.065,255,1.871,256,2.887,257,2.887,258,3.934,259,2.887,260,3.427,261,2.887,262,3.427,263,2.887,264,4.705,265,4.705,266,4.705,267,2.887,268,2.887,269,2.887,270,4.065,271,2.887,272,2.887,273,2.887,274,2.887,275,2.887,276,2.887]],["title/injectables/JwtAuthGuard.html",[128,1.865,172,0.68]],["body/injectables/JwtAuthGuard.html",[0,0.048,3,0.244,4,0.244,5,0.163,7,2.092,9,0.424,15,1.091,19,1.35,26,0.692,28,1.002,29,0.031,30,0.623,31,0.495,32,0.623,37,0.763,40,0.446,42,0.474,43,0.244,48,0.764,49,0.022,50,0.022,92,2.612,124,2.998,125,2.092,128,2.749,132,2.323,135,1.9,160,2.998,162,1.35,172,1.002,173,1.465,277,4.4,278,2.998,279,4.71,280,4.71,281,3.585,282,5.957,283,3.585,284,4.71,285,4.673,286,3.585,287,2.612,288,2.612,289,2.612,290,3.939,291,3.585,292,3.585,293,3.585,294,3.585]],["title/injectables/JwtStrategy.html",[150,1.865,172,0.68]],["body/injectables/JwtStrategy.html",[0,0.048,3,0.246,4,0.246,5,0.165,7,2.105,9,0.428,15,1.098,19,1.363,26,0.696,28,1.009,29,0.031,30,0.627,31,0.498,32,0.627,37,0.77,40,0.448,42,0.479,43,0.246,48,0.587,49,0.023,50,0.023,74,4.241,75,2.637,106,2.159,117,1.753,125,2.113,129,2.637,150,2.767,172,1.009,173,1.479,188,2.345,198,3.027,289,2.637,295,3.027,296,3.964,297,3.964,298,4.74,299,3.619,300,4.74,301,3.619,302,3.619,303,3.027,304,3.027,305,3.027,306,3.619,307,3.619,308,3.619,309,3.027,310,3.619,311,3.619,312,3.619,313,3.619,314,3.619]],["title/injectables/LocalStrategy.html",[151,1.865,172,0.68]],["body/injectables/LocalStrategy.html",[0,0.046,3,0.238,4,0.238,5,0.159,7,2.058,9,0.414,15,1.073,19,1.316,21,1.751,26,0.68,28,0.986,29,0.031,30,0.613,31,0.486,32,0.613,37,0.744,40,0.442,42,0.462,43,0.238,48,0.567,49,0.022,50,0.022,106,2.123,125,2.04,126,2.865,127,2.547,135,1.853,151,2.704,162,1.316,172,0.986,173,1.428,184,4.346,188,2.265,189,2.244,192,2.265,195,4.031,289,2.547,296,3.875,297,3.875,303,2.924,304,2.924,305,2.924,315,2.924,316,3.496,317,3.496,318,4.633,319,3.496,320,3.496,321,4.633,322,3.496,323,2.547,324,1.853]],["title/modules/Log4jsGlobalModule.html",[51,0.804,63,1.694]],["body/modules/Log4jsGlobalModule.html",[0,0.056,3,0.207,4,0.207,5,0.138,15,0.705,21,1.546,26,0.447,28,0.648,29,0.031,30,0.403,31,0.319,32,0.403,33,1.474,37,0.648,40,0.417,42,0.403,43,0.287,48,0.684,49,0.02,50,0.02,51,1.429,53,1.146,54,1.146,55,1.352,56,1.352,57,1.146,58,2.522,59,2.522,63,3.146,67,1.873,68,1.352,69,1.352,162,1.588,233,2.229,325,2.545,326,2.545,327,2.545,328,2.545,329,4.047,330,2.545,331,4.047,332,3.203,333,3.043,334,1.776,335,4.37,336,3.072,337,1.972,338,2.545,339,3.136,340,2.545,341,2.461,342,4.37,343,3.072]],["title/modules/Log4jsModule.html",[51,0.804,341,1.865]],["body/modules/Log4jsModule.html",[0,0.056,3,0.207,4,0.207,5,0.138,15,0.705,21,1.546,26,0.447,28,0.648,29,0.031,30,0.403,31,0.319,32,0.403,33,1.474,37,0.648,40,0.417,42,0.403,43,0.287,48,0.684,49,0.02,50,0.02,51,1.429,53,1.146,54,1.146,55,1.352,56,1.352,57,1.146,58,2.522,59,2.522,63,2.236,67,1.873,68,1.352,69,1.352,162,1.588,233,2.229,328,2.545,329,4.047,330,2.545,331,4.047,332,3.203,334,1.776,335,4.37,336,3.072,337,1.972,338,2.545,339,3.136,340,2.545,341,3.464,342,4.37,343,3.072,344,2.545,345,3.043,346,3.043,347,3.043]],["title/injectables/Log4jsService.html",[172,0.68,233,1.11]],["body/injectables/Log4jsService.html",[0,0.03,3,0.153,4,0.153,5,0.102,9,0.266,10,1.504,11,1.81,15,0.785,19,0.846,21,1.851,26,0.802,28,1.13,29,0.032,30,0.702,31,0.574,32,0.702,33,2.571,37,1.088,40,0.362,42,0.297,43,0.153,48,0.364,49,0.016,50,0.016,99,1.312,172,0.721,173,0.918,229,1.638,233,1.176,235,3.314,253,2.832,260,3.305,287,4.271,324,1.192,332,2.648,334,2.985,336,2.467,337,1.457,348,1.88,349,4.075,350,2.832,351,3.387,352,4.075,353,3.387,354,3.387,355,2.248,356,3.387,357,3.387,358,2.248,359,5.308,360,3.387,361,4.536,362,2.248,363,3.387,364,2.248,365,4.075,366,1.638,367,4.075,368,2.248,369,1.88,370,1.88,371,2.248,372,3.387,373,3.387,374,2.248,375,3.387,376,2.248,377,3.408,378,3.387,379,2.248,380,3.387,381,1.638,382,2.248,383,1.638,384,2.248,385,2.248,386,2.248,387,3.387,388,2.248,389,1.638,390,2.248,391,2.248,392,2.248,393,2.248,394,2.248,395,2.248,396,2.248,397,2.248]],["title/classes/MenuBodyRequest.html",[0,0.042,398,1.865]],["body/classes/MenuBodyRequest.html",[0,0.058,2,1.318,3,0.219,4,0.219,5,0.147,9,0.382,10,1.95,21,1.781,26,0.884,29,0.031,30,0.66,31,0.654,32,0.708,40,0.35,41,0.955,43,0.219,49,0.021,50,0.021,110,3.064,212,2.361,398,2.562,399,2.698,400,4.173,401,1.878,402,4.173,403,4.173,404,4.173,405,4.173,406,3.953,407,3.226,408,3.226,409,3.226,410,3.226,411,3.226,412,3.226,413,3.226,414,3.226,415,2.645,416,3.47,417,3.226,418,2.09,419,2.09,420,2.09,421,3.226,422,3.226]],["title/controllers/MenuController.html",[101,1.548,423,1.548]],["body/controllers/MenuController.html",[0,0.033,3,0.168,4,0.168,5,0.112,9,0.292,11,1.094,15,0.84,26,0.777,28,1.126,29,0.031,30,0.7,31,0.498,32,0.7,37,1.126,40,0.404,42,0.326,43,0.168,48,0.858,49,0.017,50,0.017,101,1.756,103,1.193,106,2.552,110,2.805,113,3.075,117,2.562,121,1.795,122,3.135,131,2.117,132,1.597,133,1.597,135,1.306,212,2.341,233,1.26,243,1.438,245,1.795,398,3.193,401,1.992,423,1.756,424,2.061,425,2.35,426,3.033,427,3.033,428,3.627,429,3.627,430,2.35,431,1.597,432,2.464,433,3.637,434,2.061,435,2.061,436,2.464,437,2.061,438,2.061,439,2.464,440,2.464,441,2.464,442,2.464,443,2.464,444,2.464,445,1.597,446,2.061,447,2.464,448,2.061,449,2.061,450,2.061,451,2.061,452,2.281,453,2.061,454,2.464,455,2.061,456,2.464,457,2.464,458,2.464,459,2.061,460,2.061,461,2.464,462,2.061,463,2.464,464,2.061,465,2.061,466,2.464,467,2.061,468,2.061,469,2.464,470,2.464,471,2.464,472,2.464]],["title/controllers/MenuController-1.html",[101,1.292,423,1.292,473,1.729]],["body/controllers/MenuController-1.html",[0,0.034,3,0.177,4,0.177,5,0.118,9,0.308,11,1.155,15,0.874,26,0.759,28,1.1,29,0.031,30,0.684,31,0.543,32,0.684,37,1.1,40,0.413,42,0.344,43,0.177,48,0.838,49,0.018,50,0.018,101,1.827,103,1.259,106,2.529,110,2.741,117,2.504,121,1.894,122,3.234,131,2.202,132,1.685,133,1.685,135,1.379,212,2.373,233,1.31,243,1.518,245,1.894,401,2.03,423,1.827,425,2.444,426,3.155,427,3.155,430,2.444,431,1.685,433,3.692,434,2.175,435,2.175,437,2.175,438,2.175,445,1.685,446,2.175,448,2.175,449,2.175,450,2.175,455,2.175,459,2.175,460,2.175,462,2.175,464,2.175,465,2.175,467,2.175,468,2.175,474,2.175,475,2.175,476,2.358,477,2.6,478,3.155,479,2.694,480,2.6,481,2.6,482,2.6,483,2.6,484,2.175,485,2.353,486,2.175,487,2.6,488,2.6,489,2.6,490,2.6,491,2.6,492,2.6,493,2.6]],["title/modules/MenuModule.html",[51,0.804,64,1.865]],["body/modules/MenuModule.html",[0,0.05,3,0.259,4,0.259,5,0.173,29,0.031,40,0.472,41,1.125,42,0.503,43,0.259,49,0.023,50,0.023,51,1.362,53,1.432,54,1.432,55,1.689,56,1.689,57,1.432,58,2.404,59,2.404,64,3.594,67,2.174,68,1.689,69,1.689,71,2.219,72,2.464,76,2.464,77,1.842,103,2.37,423,2.621,452,3.411,453,3.18,494,3.18,495,3.18,496,3.18,497,3.802,498,3.802,499,2.77]],["title/injectables/MenuService.html",[172,0.68,452,1.694]],["body/injectables/MenuService.html",[0,0.024,1,1.866,3,0.121,4,0.121,5,0.081,9,0.211,11,1.563,15,0.656,19,1.065,22,1.04,24,1.155,26,0.716,28,0.93,29,0.032,30,0.67,31,0.531,32,0.578,33,0.863,37,0.99,40,0.404,41,0.527,42,0.236,43,0.121,48,0.82,49,0.013,50,0.013,77,0.863,106,2.421,117,1.37,162,1.963,172,0.602,173,0.728,182,1.298,189,2.451,191,0.863,192,3.462,212,2.13,223,1.298,232,1.298,233,1.392,235,1.834,242,1.155,243,1.04,244,1.298,323,2.062,324,2.467,389,2.564,398,2.847,400,2.943,401,1.752,402,2.943,403,2.943,404,1.49,405,2.943,415,0.945,425,1.834,430,1.834,431,1.834,433,2.833,445,1.834,451,1.49,452,1.5,473,2.281,500,1.49,501,2.367,502,2.367,503,4.008,504,2.943,505,2.92,506,2.943,507,3.352,508,1.782,509,1.782,510,1.782,511,2.367,512,1.782,513,2.367,514,1.782,515,1.782,516,1.782,517,1.782,518,1.49,519,1.298,520,1.782,521,2.83,522,1.782,523,1.782,524,1.782,525,2.83,526,1.49,527,2.83,528,3.656,529,4.008,530,1.782,531,3.519,532,1.782,533,2.367,534,2.367,535,2.367,536,2.367,537,2.367,538,2.367,539,1.782,540,1.782,541,1.782,542,1.782,543,1.49,544,1.49,545,1.782,546,1.782,547,1.782,548,1.782,549,1.782,550,1.782,551,2.83,552,1.782,553,1.782,554,1.782,555,5.213,556,1.782,557,3.519,558,3.519,559,3.519,560,2.83,561,2.83,562,2.83,563,1.782,564,1.782,565,1.782,566,1.782,567,1.782,568,1.782,569,1.782]],["title/interfaces/ModuleAsyncOptions.html",[570,2.071,571,2.071]],["body/interfaces/ModuleAsyncOptions.html",[3,0.289,4,0.289,5,0.193,7,2.331,9,0.503,10,2.331,29,0.031,31,0.551,32,0.694,40,0.339,42,0.562,43,0.289,49,0.025,50,0.025,94,3.855,99,3.472,189,2.057,366,3.823,570,2.752,571,3.4,572,4.247,573,3.552,574,5.248,575,4.247,576,4.247,577,4.247]],["title/classes/ResponseInterceptor.html",[0,0.042,578,2.328]],["body/classes/ResponseInterceptor.html",[0,0.048,2,1.469,3,0.244,4,0.244,5,0.164,9,0.426,15,1.093,22,2.099,26,0.528,28,0.765,29,0.031,30,0.476,31,0.378,32,0.476,37,0.765,40,0.421,41,1.064,42,0.476,43,0.244,48,0.583,49,0.022,50,0.022,162,1.354,189,2.286,229,3.439,246,3.008,258,3.008,260,2.62,262,2.62,285,4.679,287,3.439,377,3.008,578,3.439,579,3.008,580,5.269,581,5.269,582,3.596,583,5.594,584,5.594,585,3.596,586,5.269,587,3.596,588,3.596,589,3.596,590,3.596,591,3.596,592,3.596,593,3.596,594,3.596,595,3.596,596,3.596,597,3.596,598,3.596]],["title/classes/TemplateBodyRequest.html",[0,0.042,479,1.548]],["body/classes/TemplateBodyRequest.html",[0,0.072,2,1.353,3,0.225,4,0.225,5,0.151,7,1.471,9,0.392,10,1.984,21,1.602,26,0.83,29,0.031,30,0.669,31,0.593,32,0.591,40,0.432,41,0.98,43,0.344,49,0.021,50,0.021,110,2.87,191,1.603,204,2.368,212,2.379,255,3.276,401,1.904,406,3.774,415,1.755,416,3.508,418,2.145,419,2.145,420,2.145,476,1.603,479,2.164,599,2.145,600,3.276,601,3.684,602,2.951,603,3.684,604,3.311,605,3.311,606,3.311,607,3.311,608,3.311,609,2.412,610,2.412,611,2.412,612,2.412,613,2.412,614,2.412]],["title/classes/TemplateCategory.html",[0,0.042,602,1.865]],["body/classes/TemplateCategory.html",[0,0.074,2,1.479,3,0.246,4,0.246,5,0.165,7,1.608,9,0.428,10,2.105,21,1.403,26,0.696,29,0.031,30,0.479,31,0.498,40,0.448,41,1.071,43,0.359,49,0.023,50,0.023,110,2.513,191,1.753,204,2.513,212,2.44,255,2.345,401,1.363,406,3.634,415,1.919,416,3.634,418,2.345,419,2.345,420,2.345,476,1.753,479,1.753,599,2.345,600,2.345,601,2.637,602,3.085,603,3.851,609,2.637,610,2.637,611,2.637,612,2.637,613,3.851,614,3.851,615,3.619,616,3.619]],["title/modules/TemplateModule.html",[51,0.804,65,1.865]],["body/modules/TemplateModule.html",[0,0.05,3,0.259,4,0.259,5,0.173,29,0.031,40,0.472,41,1.125,42,0.503,43,0.259,49,0.023,50,0.023,51,1.362,53,1.432,54,1.432,55,1.689,56,1.689,57,1.432,58,2.404,59,2.404,65,3.594,67,2.174,68,1.689,69,1.689,71,2.219,72,2.464,76,2.464,77,1.842,103,2.37,423,2.621,485,3.411,486,3.18,499,2.77,617,3.18,618,3.18,619,3.18,620,3.802,621,3.802]],["title/classes/TemplateQuery.html",[0,0.042,476,1.548]],["body/classes/TemplateQuery.html",[0,0.073,2,1.419,3,0.236,4,0.236,5,0.158,7,2.049,9,0.411,10,2.049,21,1.366,25,2.531,26,0.761,29,0.031,30,0.46,31,0.544,32,0.781,40,0.441,41,1.028,43,0.352,49,0.022,50,0.022,191,1.683,204,3.131,206,3.361,207,3.361,212,2.413,255,2.251,401,1.308,406,3.576,415,1.842,416,3.357,418,2.251,419,2.251,420,2.251,476,2.234,479,1.683,599,2.251,600,2.251,601,2.531,602,2.693,603,3.361,609,2.531,610,2.531,611,2.531,612,2.531,613,2.531,614,2.531,622,5.18,623,3.474,624,3.474,625,3.474]],["title/injectables/TemplateService.html",[172,0.68,485,1.694]],["body/injectables/TemplateService.html",[0,0.029,1,2.105,3,0.146,4,0.146,5,0.098,9,0.255,11,1.763,15,0.759,19,1.234,22,1.257,24,1.395,26,0.739,28,1.071,29,0.032,30,0.666,31,0.528,32,0.666,33,1.043,37,1.016,40,0.43,41,0.637,42,0.285,43,0.146,48,0.816,49,0.016,50,0.016,77,1.043,106,2.448,117,1.043,162,1.798,172,0.698,173,0.88,189,2.611,191,1.043,192,3.094,206,1.569,207,1.569,212,2.256,232,1.569,233,1.541,235,2.124,242,1.395,243,1.257,244,1.569,262,2.388,323,2.388,324,2.105,389,2.388,401,1.798,415,1.142,425,2.124,430,2.124,431,2.124,433,3.094,445,2.124,475,2.742,476,2.149,478,1.801,479,2.533,484,1.801,485,1.738,501,2.742,502,2.742,504,3.32,505,3.233,506,3.32,507,3.711,511,2.742,513,2.742,518,1.801,519,1.569,526,1.801,528,3.994,533,2.742,534,2.742,535,2.742,536,2.742,537,2.742,538,2.742,543,1.801,544,1.801,626,1.801,627,2.153,628,2.153,629,2.153,630,2.153,631,2.153,632,2.153,633,2.153,634,2.153,635,3.278,636,3.278,637,2.153,638,2.153,639,2.153,640,2.153,641,2.153,642,2.153,643,2.153,644,2.153]],["title/modules/UserModule.html",[51,0.804,66,1.694]],["body/modules/UserModule.html",[0,0.052,3,0.267,4,0.267,5,0.178,29,0.031,40,0.462,41,1.161,42,0.519,43,0.267,49,0.024,50,0.024,51,1.382,53,1.476,54,1.476,55,1.742,56,1.742,57,1.476,58,2.439,59,2.439,66,3.287,67,2.217,68,1.742,69,1.742,71,2.289,72,2.541,76,2.541,77,1.899,177,3.426,499,2.857,645,3.28,646,3.28,647,3.28,648,3.922,649,3.922]],["title/injectables/UserService.html",[172,0.68,177,1.694]],["body/injectables/UserService.html",[0,0.046,3,0.235,4,0.235,5,0.157,9,0.409,11,1.534,15,1.065,19,1.73,21,1.528,26,0.675,28,0.978,29,0.032,30,0.608,31,0.482,32,0.608,37,0.735,40,0.44,42,0.457,43,0.235,48,0.745,49,0.022,50,0.022,77,1.672,106,2.11,172,0.978,173,1.411,177,2.436,182,3.348,188,3.346,189,2.225,191,1.672,195,2.516,242,2.237,309,2.888,324,1.831,401,1.3,473,2.237,505,4.011,519,2.516,650,2.888,651,4.595,652,3.453,653,3.453,654,4.595,655,4.595,656,3.453,657,3.453,658,3.453,659,3.453,660,3.453,661,3.453,662,3.453,663,3.453,664,3.453]],["title/coverage.html",[665,3.647]],["body/coverage.html",[0,0.076,1,1.418,5,0.122,6,2.237,29,0.031,31,0.281,49,0.018,50,0.018,57,1.007,101,2.184,102,1.733,104,2.237,126,1.295,128,1.561,131,1.561,150,1.561,151,1.561,172,1.222,174,2.237,177,1.418,204,1.418,205,2.237,223,4.768,227,1.948,228,2.237,233,0.929,277,2.237,278,2.237,288,1.948,295,2.237,315,2.237,324,1.418,339,1.733,348,2.237,366,3.286,381,1.948,383,1.948,398,1.561,399,2.237,423,1.864,424,2.237,452,1.418,474,2.237,476,1.295,479,1.295,485,1.418,500,2.237,570,1.733,571,1.733,573,2.237,578,1.948,579,2.237,599,2.922,602,1.561,626,2.237,650,2.237,665,2.237,666,2.674,667,2.674,668,2.674,669,3.219,670,5.848,671,6.073,672,3.85,673,5.61,674,2.674,675,2.237,676,4.933,677,2.237,678,2.804,679,2.237,680,2.237,681,3.85,682,3.85,683,3.85,684,3.219,685,2.237,686,2.237,687,3.772,688,2.237,689,2.237,690,2.237,691,2.674,692,2.674]],["title/dependencies.html",[54,1.447,693,2.669]],["body/dependencies.html",[29,0.028,49,0.028,50,0.028,54,1.925]],["title/miscellaneous/functions.html",[694,1.729,695,3.214]],["body/miscellaneous/functions.html",[9,0.518,21,1.583,28,1.138,29,0.03,30,0.707,31,0.46,32,0.707,33,2.121,37,1.138,49,0.025,50,0.025,57,2.173,332,2.556,334,2.556,339,3.465,343,3.19,383,3.895,675,3.662,678,3.19,680,3.662,694,2.837,695,3.662,696,4.379,697,3.662,698,4.379,699,4.379,700,3.662,701,3.662]],["title/index.html",[9,0.378,702,2.673]],["body/index.html",[2,1.243,29,0.031,49,0.02,50,0.02,51,0.766,52,4.027,53,1.146,54,1.146,55,1.352,56,1.352,57,1.146,58,1.352,59,1.352,60,2.545,61,2.545,62,3.597,63,3.01,64,3.314,65,3.314,66,3.086,67,1.873,68,1.352,69,1.352,103,1.474,126,2.344,147,2.545,149,2.545,150,2.825,151,2.825,173,1.243,177,3.086,233,2.119,325,2.545,326,2.545,327,2.545,341,3.203,344,2.545,452,3.086,473,1.972,485,3.086,494,2.545,495,2.545,496,2.545,570,1.972,617,2.545,618,2.545,619,2.545,645,2.545,646,2.545,647,2.545,702,2.545,703,3.043,704,3.043,705,4.217]],["title/modules.html",[53,1.642]],["body/modules.html",[29,0.026,49,0.026,50,0.026,52,2.859,53,1.661,62,2.576,63,2.34,64,2.576,65,2.576,66,2.34,341,2.576,706,6.361,707,6.361,708,6.361,709,6.361]],["title/miscellaneous/variables.html",[694,1.729,710,3.214]],["body/miscellaneous/variables.html",[5,0.206,9,0.266,21,0.665,29,0.032,30,0.448,31,0.574,48,0.661,49,0.016,50,0.016,92,2.467,94,2.195,99,1.977,131,1.977,163,2.832,170,2.832,225,1.88,288,2.467,290,1.88,332,1.312,334,1.312,337,2.195,350,1.88,369,4.958,370,4.675,381,2.467,401,1.708,571,1.457,600,1.457,669,1.88,677,1.88,678,1.638,679,2.832,684,1.88,685,2.832,686,2.832,687,1.88,688,2.832,689,3.408,690,3.408,694,1.457,697,1.88,700,1.88,701,2.832,710,1.88,711,3.387,712,3.387,713,4.536,714,2.248,715,2.248,716,3.387,717,4.075,718,2.248,719,2.248,720,2.248,721,3.387,722,2.248,723,3.387,724,3.387,725,2.248,726,2.248,727,3.387,728,4.075,729,3.387,730,2.248,731,2.248,732,3.387,733,2.248,734,3.387,735,4.536,736,2.248,737,2.248,738,2.248,739,2.248,740,2.248,741,2.248,742,2.248,743,2.248,744,2.248,745,2.248,746,3.387,747,5.115,748,4.536,749,4.536,750,4.536,751,4.536,752,4.536,753,3.387,754,3.387,755,3.387,756,3.387,757,3.387,758,3.387,759,3.387,760,3.387,761,3.387,762,3.387,763,3.387,764,3.387,765,3.387,766,2.248]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":223,"title":{},"body":{"classes/BaseQuery.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["0/1",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":473,"title":{"controllers/MenuController-1.html":{}},"body":{"injectables/MenuService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["10",{"_index":225,"title":{},"body":{"classes/BaseQuery.html":{},"miscellaneous/variables.html":{}}}],["1024",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.15x{name",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1kb",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":704,"title":{},"body":{"index.html":{}}}],["40.40f{3",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.5p",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5level",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60s",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":703,"title":{},"body":{"index.html":{}}}],["8",{"_index":705,"title":{},"body":{"index.html":{}}}],["access_token",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessors",{"_index":208,"title":{},"body":{"classes/BaseQuery.html":{}}}],["ad",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["all(@body",{"_index":488,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["all(query",{"_index":475,"title":{},"body":{"controllers/MenuController-1.html":{},"injectables/TemplateService.html":{}}}],["analysis",{"_index":558,"title":{},"body":{"injectables/MenuService.html":{}}}],["apiexception",{"_index":1,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["apistatuscode",{"_index":22,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{}}}],["apistatuscode.key_not_exist",{"_index":537,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["apistatuscode.sql_error",{"_index":271,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["apistatuscode.success",{"_index":594,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["apistatuscode.unkown_error",{"_index":274,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["app",{"_index":372,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["app_guard",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["appenders",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["args",{"_index":576,"title":{},"body":{"interfaces/ModuleAsyncOptions.html":{}}}],["argumentshost",{"_index":238,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":278,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":286,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":283,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authcontroller",{"_index":102,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard(\"jwt",{"_index":279,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":62,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["authservice",{"_index":126,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"index.html":{}}}],["avatar",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["await",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["backups",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["basepath",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["basequery",{"_index":204,"title":{"classes/BaseQuery.html":{}},"body":{"classes/BaseQuery.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"coverage.html":{}}}],["basequery:2",{"_index":623,"title":{},"body":{"classes/TemplateQuery.html":{}}}],["basequery:3",{"_index":624,"title":{},"body":{"classes/TemplateQuery.html":{}}}],["basequery:4",{"_index":625,"title":{},"body":{"classes/TemplateQuery.html":{}}}],["bill/database",{"_index":41,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/MenuBodyRequest.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{}}}],["bill/database/dist/entities",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MenuService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["body",{"_index":433,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["body.desc",{"_index":643,"title":{},"body":{"injectables/TemplateService.html":{}}}],["body.icon",{"_index":540,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.label",{"_index":542,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.name",{"_index":544,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["body.order",{"_index":546,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.parentid",{"_index":552,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.route",{"_index":548,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.type",{"_index":550,"title":{},"body":{"injectables/MenuService.html":{}}}],["bootstrap",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browse",{"_index":709,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":706,"title":{},"body":{"modules.html":{}}}],["builddefaultconfig",{"_index":383,"title":{},"body":{"injectables/Log4jsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["builddefaultconfig(\"all",{"_index":390,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["builddefaultconfig(level",{"_index":699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builddefaultconfig(options",{"_index":388,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["bytes",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":584,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["canactivate",{"_index":280,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":284,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":231,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":236,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":587,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["categories",{"_index":600,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"miscellaneous/variables.html":{}}}],["cb",{"_index":365,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["changeme",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["child",{"_index":528,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["child.desc",{"_index":642,"title":{},"body":{"injectables/TemplateService.html":{}}}],["child.icon",{"_index":539,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.label",{"_index":541,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.name",{"_index":543,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["child.order",{"_index":545,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.parent",{"_index":551,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.route",{"_index":547,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.type",{"_index":549,"title":{},"body":{"injectables/MenuService.html":{}}}],["child1",{"_index":560,"title":{},"body":{"injectables/MenuService.html":{}}}],["child2",{"_index":562,"title":{},"body":{"injectables/MenuService.html":{}}}],["children",{"_index":530,"title":{},"body":{"injectables/MenuService.html":{}}}],["class",{"_index":0,"title":{"classes/ApiException.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"classes/MenuBodyRequest.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"classes/MenuBodyRequest.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_imports",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_log4jsglobalmodule",{"_index":325,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"index.html":{}}}],["cluster_log4jsglobalmodule_exports",{"_index":326,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"index.html":{}}}],["cluster_log4jsglobalmodule_providers",{"_index":327,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"index.html":{}}}],["cluster_log4jsmodule",{"_index":344,"title":{},"body":{"modules/Log4jsModule.html":{},"index.html":{}}}],["cluster_log4jsmodule_exports",{"_index":345,"title":{},"body":{"modules/Log4jsModule.html":{}}}],["cluster_log4jsmodule_providers",{"_index":346,"title":{},"body":{"modules/Log4jsModule.html":{}}}],["cluster_menumodule",{"_index":494,"title":{},"body":{"modules/MenuModule.html":{},"index.html":{}}}],["cluster_menumodule_exports",{"_index":496,"title":{},"body":{"modules/MenuModule.html":{},"index.html":{}}}],["cluster_menumodule_providers",{"_index":495,"title":{},"body":{"modules/MenuModule.html":{},"index.html":{}}}],["cluster_templatemodule",{"_index":617,"title":{},"body":{"modules/TemplateModule.html":{},"index.html":{}}}],["cluster_templatemodule_exports",{"_index":619,"title":{},"body":{"modules/TemplateModule.html":{},"index.html":{}}}],["cluster_templatemodule_providers",{"_index":618,"title":{},"body":{"modules/TemplateModule.html":{},"index.html":{}}}],["cluster_usermodule",{"_index":645,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_exports",{"_index":646,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_providers",{"_index":647,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["code",{"_index":258,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ResponseInterceptor.html":{}}}],["common",{"_index":273,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["config",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config.get(\"base",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get(\"database",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["config/base",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get(\"base\").jwtsecret",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":332,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":379,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["configure(options",{"_index":391,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["console.log(1111",{"_index":569,"title":{},"body":{"injectables/MenuService.html":{}}}],["const",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(log4js_option",{"_index":385,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["constructor(authservice",{"_index":316,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(errormsg",{"_index":20,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(logger",{"_index":232,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["constructor(options",{"_index":355,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["constructor(private",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["constructor(reflector",{"_index":281,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(userrepo",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":287,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{}}}],["context.getclass",{"_index":293,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":292,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp",{"_index":590,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["controller",{"_index":101,"title":{"controllers/AuthController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}},"body":{"controllers/AuthController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"coverage.html":{}}}],["controllers",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"index.html":{}}}],["count",{"_index":636,"title":{},"body":{"injectables/TemplateService.html":{}}}],["coverage",{"_index":665,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":425,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["create(@body",{"_index":462,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["create(body",{"_index":431,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["createanyncclientoptions",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createclient",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createoptionprovider",{"_index":339,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createoptionprovider(options",{"_index":343,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":246,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ResponseInterceptor.html":{}}}],["ctx.getrequest",{"_index":250,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":249,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["custom",{"_index":252,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["dashboard",{"_index":555,"title":{},"body":{"injectables/MenuService.html":{}}}],["data",{"_index":262,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{}}}],["database",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":265,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["dd",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":350,"title":{},"body":{"injectables/Log4jsService.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":357,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["declarations",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["decorator/public",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["decorators",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{}}}],["default",{"_index":369,"title":{},"body":{"injectables/Log4jsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":450,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["delete(\"/:id",{"_index":467,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["delete('/:id",{"_index":438,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":601,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["documentation",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["dynamicmodule",{"_index":335,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["d{yyyy",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em",{"_index":506,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["email",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["enablecallstack",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["entitymanager",{"_index":507,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["env",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":598,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["error",{"_index":253,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Log4jsService.html":{}}}],["error(message",{"_index":360,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["errorcode",{"_index":12,"title":{},"body":{"classes/ApiException.html":{}}}],["errordata",{"_index":13,"title":{},"body":{"classes/ApiException.html":{}}}],["errormsg",{"_index":14,"title":{},"body":{"classes/ApiException.html":{}}}],["exception",{"_index":240,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrorcode",{"_index":259,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrordata",{"_index":263,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrormsg",{"_index":261,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":256,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception/api.exception",{"_index":244,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["exception?.message",{"_index":275,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":230,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":285,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/ResponseInterceptor.html":{}}}],["expiresin",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["expose",{"_index":268,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/ApiException.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["extractjwt",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory(opts",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":535,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["findone",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(email",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["findtrees",{"_index":524,"title":{},"body":{"injectables/MenuService.html":{}}}],["flushall",{"_index":351,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["flushall(cb",{"_index":363,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["forroot",{"_index":330,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["forroot(options",{"_index":331,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["fullname",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["function",{"_index":366,"title":{},"body":{"injectables/Log4jsService.html":{},"interfaces/ModuleAsyncOptions.html":{},"coverage.html":{}}}],["functions",{"_index":695,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"/:id",{"_index":459,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["get(\"/test",{"_index":470,"title":{},"body":{"controllers/MenuController.html":{}}}],["get(\"profile",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/:id",{"_index":435,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["get('/test",{"_index":441,"title":{},"body":{"controllers/MenuController.html":{}}}],["getbyid",{"_index":501,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["getbyid(id",{"_index":511,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["geterrorcode",{"_index":16,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrordata",{"_index":17,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrormsg",{"_index":18,"title":{},"body":{"classes/ApiException.html":{}}}],["getlogger",{"_index":352,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["getlogger(loggername",{"_index":367,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["getprofile",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["getskip_c",{"_index":216,"title":{},"body":{"classes/BaseQuery.html":{}}}],["gettake_c",{"_index":218,"title":{},"body":{"classes/BaseQuery.html":{}}}],["gettreerepository(menuentity",{"_index":523,"title":{},"body":{"injectables/MenuService.html":{}}}],["getwhere_c",{"_index":220,"title":{},"body":{"classes/BaseQuery.html":{}}}],["global",{"_index":336,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{}}}],["handle",{"_index":591,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["hh:mm:ss:sss",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":237,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":247,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpcode",{"_index":518,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["httpexception",{"_index":8,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":227,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpstatus",{"_index":24,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["httpstatus.ok",{"_index":538,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["ic",{"_index":557,"title":{},"body":{"injectables/MenuService.html":{}}}],["icon",{"_index":400,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{}}}],["id",{"_index":401,"title":{},"body":{"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":229,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{}}}],["import",{"_index":40,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":622,"title":{},"body":{"classes/TemplateQuery.html":{}}}],["inject",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/Log4jsService.html":{},"interfaces/ModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":172,"title":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectrepository",{"_index":519,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["injectrepository(menuentity",{"_index":520,"title":{},"body":{"injectables/MenuService.html":{}}}],["injectrepository(templateentity",{"_index":634,"title":{},"body":{"injectables/TemplateService.html":{}}}],["injectrepository(userentity",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["instance",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance_options",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":254,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["instead",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instnce_options",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":581,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":582,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["interface",{"_index":570,"title":{"interfaces/ModuleAsyncOptions.html":{}},"body":{"interfaces/ModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":572,"title":{},"body":{"interfaces/ModuleAsyncOptions.html":{}}}],["is_public_key",{"_index":288,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["isglobal",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["isnumber",{"_index":416,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["isnumber()@max(100)@min(0",{"_index":411,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["ispublic",{"_index":290,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":406,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["jwt",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwt.strategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":128,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":150,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{}}}],["label",{"_index":402,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{}}}],["layout",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["length",{"_index":609,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["length(1",{"_index":603,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["level",{"_index":700,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":320,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":151,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"index.html":{}}}],["log",{"_index":353,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log(message",{"_index":373,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log4js",{"_index":337,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"miscellaneous/variables.html":{}}}],["log4js.constants",{"_index":382,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log4js.default.config",{"_index":384,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log4js.provider",{"_index":340,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["log4js.service",{"_index":338,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["log4js_default_config",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["log4js_default_layout",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["log4js_no_colour_default_layout",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["log4js_option",{"_index":381,"title":{},"body":{"injectables/Log4jsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log4jservice",{"_index":455,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["log4jsglobalmodule",{"_index":63,"title":{"modules/Log4jsGlobalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"index.html":{},"modules.html":{}}}],["log4jsglobalmodule.forroot",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["log4jsmodule",{"_index":341,"title":{"modules/Log4jsModule.html":{}},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"index.html":{},"modules.html":{}}}],["log4jsservice",{"_index":233,"title":{"injectables/Log4jsService.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"index.html":{}}}],["logevent",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logevent.context",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logevent.context['name",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":235,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["loggername",{"_index":371,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["loggers",{"_index":349,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["loggerservice",{"_index":380,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["logger{36",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@request",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs/application.log",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":377,"title":{},"body":{"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{}}}],["map((data",{"_index":593,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["matching",{"_index":50,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":418,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["max(100",{"_index":421,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["maxlogsize",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":525,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.controller",{"_index":498,"title":{},"body":{"modules/MenuModule.html":{}}}],["menu.interface",{"_index":451,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["menu.service",{"_index":453,"title":{},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{}}}],["menubodyrequest",{"_index":398,"title":{"classes/MenuBodyRequest.html":{}},"body":{"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["menucontroller",{"_index":423,"title":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"coverage.html":{}}}],["menuentity",{"_index":517,"title":{},"body":{"injectables/MenuService.html":{}}}],["menuentity().extend",{"_index":529,"title":{},"body":{"injectables/MenuService.html":{}}}],["menumodule",{"_index":64,"title":{"modules/MenuModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"index.html":{},"modules.html":{}}}],["menus",{"_index":454,"title":{},"body":{"controllers/MenuController.html":{}}}],["menuservice",{"_index":452,"title":{"injectables/MenuService.html":{}},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"coverage.html":{},"index.html":{}}}],["message",{"_index":260,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":419,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["min(0",{"_index":422,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["miscellaneous",{"_index":694,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":51,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["moduleasyncoptions",{"_index":571,"title":{"interfaces/ModuleAsyncOptions.html":{}},"body":{"interfaces/ModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":575,"title":{},"body":{"interfaces/ModuleAsyncOptions.html":{}}}],["moduleoptions",{"_index":577,"title":{},"body":{"interfaces/ModuleAsyncOptions.html":{}}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["modules/auth/auth.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/log4js",{"_index":243,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["modules/log4js/log4js.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/menu/menu.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/template/template.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/user/user.service",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["msg%n",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":580,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["nestjs/common",{"_index":42,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/config",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["nestjs/core",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{}}}],["nestjs/jwt",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nestjs/passport",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["nestjs/typeorm",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["new",{"_index":324,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["next",{"_index":583,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["nick@126.com",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":212,"title":{},"body":{"classes/BaseQuery.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["o",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["observable",{"_index":586,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["one",{"_index":426,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["one(@param(\"id",{"_index":460,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["one(id",{"_index":434,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optionprovider",{"_index":342,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["options",{"_index":334,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.inject",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.usefactory",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opts",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["opts.jwtsecret",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["order",{"_index":403,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["overview",{"_index":702,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":693,"title":{"dependencies.html":{}},"body":{}}],["packages/.../log4js.constants.ts",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../log4js.default.config.ts",{"_index":697,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../log4js.provider.ts",{"_index":698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../main.ts",{"_index":696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../provider.ts",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../public.ts",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/server/src/decorator/public.ts",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/exception/api.exception.ts",{"_index":6,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["packages/server/src/exception/api.exception.ts:22",{"_index":39,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/exception/api.exception.ts:26",{"_index":36,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/exception/api.exception.ts:30",{"_index":38,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/exception/api.exception.ts:5",{"_index":35,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/exception/api.exception.ts:6",{"_index":34,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/exception/api.exception.ts:7",{"_index":27,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/filter/http.exception.filter.ts",{"_index":228,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["packages/server/src/filter/http.exception.filter.ts:14",{"_index":234,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["packages/server/src/filter/http.exception.filter.ts:17",{"_index":239,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["packages/server/src/interceptor/res.interceptor.ts",{"_index":579,"title":{},"body":{"classes/ResponseInterceptor.html":{},"coverage.html":{}}}],["packages/server/src/interceptor/res.interceptor.ts:6",{"_index":585,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["packages/server/src/main.ts",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/modules/app/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts:17",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts:23",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts:29",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["packages/server/src/modules/auth/auth.module.ts",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["packages/server/src/modules/auth/auth.service.ts",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:13",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:25",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:7",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/jwt",{"_index":277,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/jwt.strategy.ts",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/jwt.strategy.ts:16",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["packages/server/src/modules/auth/jwt.strategy.ts:7",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["packages/server/src/modules/auth/local.strategy.ts",{"_index":315,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/local.strategy.ts:12",{"_index":319,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["packages/server/src/modules/auth/local.strategy.ts:7",{"_index":317,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["packages/server/src/modules/log4js/log4js.constants.ts",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/modules/log4js/log4js.default.config.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/modules/log4js/log4js.module.ts",{"_index":328,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["packages/server/src/modules/log4js/log4js.module.ts:11",{"_index":347,"title":{},"body":{"modules/Log4jsModule.html":{}}}],["packages/server/src/modules/log4js/log4js.module.ts:27",{"_index":333,"title":{},"body":{"modules/Log4jsGlobalModule.html":{}}}],["packages/server/src/modules/log4js/log4js.provider.ts",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts",{"_index":348,"title":{},"body":{"injectables/Log4jsService.html":{},"coverage.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:10",{"_index":356,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:21",{"_index":368,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:30",{"_index":374,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:34",{"_index":362,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:38",{"_index":376,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:42",{"_index":358,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:46",{"_index":364,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts",{"_index":424,"title":{},"body":{"controllers/MenuController.html":{},"coverage.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:19",{"_index":444,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:24",{"_index":436,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:29",{"_index":432,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:34",{"_index":447,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:39",{"_index":439,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:44",{"_index":442,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts",{"_index":399,"title":{},"body":{"classes/MenuBodyRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:10",{"_index":410,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:12",{"_index":407,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:14",{"_index":417,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:16",{"_index":414,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:20",{"_index":412,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:21",{"_index":413,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:5",{"_index":408,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:8",{"_index":409,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.module.ts",{"_index":497,"title":{},"body":{"modules/MenuModule.html":{}}}],["packages/server/src/modules/menu/menu.service.ts",{"_index":500,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:13",{"_index":508,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:20",{"_index":509,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:28",{"_index":512,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:40",{"_index":510,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:52",{"_index":516,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:79",{"_index":514,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:93",{"_index":515,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/template/template.controller.ts",{"_index":474,"title":{},"body":{"controllers/MenuController-1.html":{},"coverage.html":{}}}],["packages/server/src/modules/template/template.controller.ts:19",{"_index":477,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:24",{"_index":481,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:29",{"_index":480,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:34",{"_index":483,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:39",{"_index":482,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.interface.ts",{"_index":599,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"coverage.html":{}}}],["packages/server/src/modules/template/template.interface.ts:19",{"_index":615,"title":{},"body":{"classes/TemplateCategory.html":{}}}],["packages/server/src/modules/template/template.interface.ts:21",{"_index":616,"title":{},"body":{"classes/TemplateCategory.html":{}}}],["packages/server/src/modules/template/template.interface.ts:25",{"_index":606,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:28",{"_index":607,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:31",{"_index":605,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:34",{"_index":608,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:37",{"_index":604,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.module.ts",{"_index":620,"title":{},"body":{"modules/TemplateModule.html":{}}}],["packages/server/src/modules/template/template.service.ts",{"_index":626,"title":{},"body":{"injectables/TemplateService.html":{},"coverage.html":{}}}],["packages/server/src/modules/template/template.service.ts:13",{"_index":627,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:20",{"_index":628,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:38",{"_index":630,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:50",{"_index":629,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:58",{"_index":632,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:75",{"_index":631,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/user/user.module.ts",{"_index":648,"title":{},"body":{"modules/UserModule.html":{}}}],["packages/server/src/modules/user/user.service.ts",{"_index":650,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["packages/server/src/modules/user/user.service.ts:12",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:7",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/utils/core/interface.ts",{"_index":573,"title":{},"body":{"interfaces/ModuleAsyncOptions.html":{},"coverage.html":{}}}],["packages/server/src/utils/core/provider.ts",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/utils/log4js.constants.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/utils/query.ts",{"_index":205,"title":{},"body":{"classes/BaseQuery.html":{},"coverage.html":{}}}],["packages/server/src/utils/query.ts:10",{"_index":219,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/utils/query.ts:14",{"_index":221,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/utils/query.ts:2",{"_index":213,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/utils/query.ts:3",{"_index":214,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/utils/query.ts:4",{"_index":215,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/utils/query.ts:6",{"_index":217,"title":{},"body":{"classes/BaseQuery.html":{}}}],["param",{"_index":448,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":531,"title":{},"body":{"injectables/MenuService.html":{}}}],["parentid",{"_index":404,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{}}}],["pass",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportmodule",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["path",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["pattern",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permissiontype",{"_index":415,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["permissiontype.catalogue",{"_index":559,"title":{},"body":{"injectables/MenuService.html":{}}}],["pick",{"_index":574,"title":{},"body":{"interfaces/ModuleAsyncOptions.html":{}}}],["pipe",{"_index":592,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["pipe(catcherror((err",{"_index":596,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["post",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["post(\"auth/logout",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":11,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productcategoryentity",{"_index":610,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["productcategoryid",{"_index":613,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["products",{"_index":614,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["promise",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["promise.all",{"_index":566,"title":{},"body":{"injectables/MenuService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseQuery.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["provide",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":701,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["public",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@useguards(undefined)@post('login",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":449,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["put(\"/:id",{"_index":464,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["put('/:id",{"_index":446,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["query",{"_index":478,"title":{},"body":{"controllers/MenuController-1.html":{},"injectables/TemplateService.html":{}}}],["query.skip_c",{"_index":638,"title":{},"body":{"injectables/TemplateService.html":{}}}],["query.take_c",{"_index":639,"title":{},"body":{"injectables/TemplateService.html":{}}}],["query.where_c",{"_index":640,"title":{},"body":{"injectables/TemplateService.html":{}}}],["queryfailederror",{"_index":241,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["readonly",{"_index":245,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["recoed",{"_index":536,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["record",{"_index":25,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseQuery.html":{},"classes/TemplateQuery.html":{}}}],["reflector",{"_index":282,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["remote",{"_index":427,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["remote(@param(\"id",{"_index":468,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["remote(id",{"_index":437,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["remove",{"_index":502,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["remove(id",{"_index":513,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["repo",{"_index":504,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["repository",{"_index":505,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{}}}],["req.logout",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.url",{"_index":266,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["resolve(process.cwd",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":248,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(httpstatus.ok).json",{"_index":270,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":257,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responseinterceptor",{"_index":578,"title":{"classes/ResponseInterceptor.html":{}},"body":{"classes/ResponseInterceptor.html":{},"coverage.html":{}}}],["rest",{"_index":527,"title":{},"body":{"injectables/MenuService.html":{}}}],["result",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":49,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":48,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/ResponseInterceptor.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rotating",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":405,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{}}}],["rows",{"_index":635,"title":{},"body":{"injectables/TemplateService.html":{}}}],["rxjs",{"_index":589,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["secret",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["setmetadata(is_public_key",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutdown",{"_index":378,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["signoptions",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["size",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":206,"title":{},"body":{"classes/BaseQuery.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["skip_c",{"_index":209,"title":{},"body":{"classes/BaseQuery.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["sql",{"_index":267,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["sql_error",{"_index":272,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statements",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":329,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["status",{"_index":255,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["statuscode",{"_index":23,"title":{},"body":{"classes/ApiException.html":{}}}],["stdout",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":595,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["super",{"_index":289,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(errormsg",{"_index":44,"title":{},"body":{"classes/ApiException.html":{}}}],["super.canactivate(context",{"_index":294,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":707,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":708,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"log4js_option",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["sys.menu.dashboard",{"_index":556,"title":{},"body":{"injectables/MenuService.html":{}}}],["sys.menu.dashboard1",{"_index":561,"title":{},"body":{"injectables/MenuService.html":{}}}],["table",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":207,"title":{},"body":{"classes/BaseQuery.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["take_c",{"_index":210,"title":{},"body":{"classes/BaseQuery.html":{}}}],["template.controller",{"_index":621,"title":{},"body":{"modules/TemplateModule.html":{}}}],["template.interface",{"_index":484,"title":{},"body":{"controllers/MenuController-1.html":{},"injectables/TemplateService.html":{}}}],["template.service",{"_index":486,"title":{},"body":{"controllers/MenuController-1.html":{},"modules/TemplateModule.html":{}}}],["templatebodyrequest",{"_index":479,"title":{"classes/TemplateBodyRequest.html":{}},"body":{"controllers/MenuController-1.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["templatecategory",{"_index":602,"title":{"classes/TemplateCategory.html":{}},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"coverage.html":{}}}],["templatecategoryentity",{"_index":611,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["templateentity",{"_index":633,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templateentity().extend",{"_index":641,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templatemodule",{"_index":65,"title":{"modules/TemplateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TemplateModule.html":{},"index.html":{},"modules.html":{}}}],["templatequery",{"_index":476,"title":{"classes/TemplateQuery.html":{}},"body":{"controllers/MenuController-1.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["templates",{"_index":487,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["templateservice",{"_index":485,"title":{"injectables/TemplateService.html":{}},"body":{"controllers/MenuController-1.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"index.html":{}}}],["test",{"_index":428,"title":{},"body":{"controllers/MenuController.html":{}}}],["test(@request",{"_index":471,"title":{},"body":{"controllers/MenuController.html":{}}}],["test(req",{"_index":440,"title":{},"body":{"controllers/MenuController.html":{}}}],["testdata",{"_index":503,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.authservice.login(req.user",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":322,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.em.transaction(async",{"_index":563,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.errorcode",{"_index":45,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errordata",{"_index":46,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errormsg",{"_index":47,"title":{},"body":{"classes/ApiException.html":{}}}],["this.getbyid(body.parentid",{"_index":553,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.getbyid(id",{"_index":534,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["this.getbyid(parentid",{"_index":532,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.getlogger(context).debug(message",{"_index":397,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.getlogger(context).error(message",{"_index":395,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.getlogger(context).info(message",{"_index":394,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.getlogger(context).warn(message",{"_index":396,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.jwtservice.sign(payload",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.log4jservice.warn(\"abc",{"_index":456,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.logger.getlogger(\"httpexceptionfilter\").error(exception?.message",{"_index":251,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.loggers",{"_index":386,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.loggers.get(loggername",{"_index":392,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.loggers.set(loggername",{"_index":393,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.menuservice.all",{"_index":458,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.create(body",{"_index":463,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.getbyid(id",{"_index":461,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.remove(id",{"_index":469,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.testdata",{"_index":472,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.update(id",{"_index":466,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":291,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.repo.findandcount",{"_index":637,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.repo.findoneby",{"_index":526,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["this.repo.manager",{"_index":522,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.repo.remove(child",{"_index":554,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.repo.save(child",{"_index":533,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["this.repo.softremove(child",{"_index":644,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.skip",{"_index":222,"title":{},"body":{"classes/BaseQuery.html":{}}}],["this.take",{"_index":224,"title":{},"body":{"classes/BaseQuery.html":{}}}],["this.templateservice.all(query",{"_index":489,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.create(body",{"_index":491,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.getbyid(id",{"_index":490,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.remove(id",{"_index":493,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.update(id",{"_index":492,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.userrepo.findone",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersservice.findone(email",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.where",{"_index":226,"title":{},"body":{"classes/BaseQuery.html":{}}}],["thread",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throw",{"_index":323,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["throwerror",{"_index":588,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["throwerror((err",{"_index":597,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["timestamp",{"_index":264,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["tokens",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trace",{"_index":361,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["transactionalentitymanager",{"_index":564,"title":{},"body":{"injectables/MenuService.html":{}}}],["transactionalentitymanager.save(child1",{"_index":567,"title":{},"body":{"injectables/MenuService.html":{}}}],["transactionalentitymanager.save(child2",{"_index":568,"title":{},"body":{"injectables/MenuService.html":{}}}],["transactionalentitymanager.save(dashboard",{"_index":565,"title":{},"body":{"injectables/MenuService.html":{}}}],["tree",{"_index":429,"title":{},"body":{"controllers/MenuController.html":{}}}],["tree(@request",{"_index":457,"title":{},"body":{"controllers/MenuController.html":{}}}],["tree(req",{"_index":443,"title":{},"body":{"controllers/MenuController.html":{}}}],["trees",{"_index":521,"title":{},"body":{"injectables/MenuService.html":{}}}],["true",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"interfaces/ModuleAsyncOptions.html":{},"classes/ResponseInterceptor.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":387,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["typeorm",{"_index":242,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["typeormmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":499,"title":{},"body":{"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["unauthorizedexception",{"_index":321,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":389,"title":{},"body":{"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["unit",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unknown",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["unknown_error",{"_index":276,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["update",{"_index":430,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["update(@param(\"id",{"_index":465,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}}}],["update(id",{"_index":445,"title":{},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{}}}],["use",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefactory",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/ModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["useguards(authguard(\"local",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(undefined)@post('auth/logout",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["user.email",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":649,"title":{},"body":{"modules/UserModule.html":{}}}],["userentity",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usermodule",{"_index":66,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["userrepo",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":269,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["userservice",{"_index":177,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/query",{"_index":612,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["validate",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":318,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":420,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateQuery.html":{}}}],["value",{"_index":370,"title":{},"body":{"injectables/Log4jsService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":710,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":359,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["warn",{"_index":354,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["warn(message",{"_index":375,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["where_c",{"_index":211,"title":{},"body":{"classes/BaseQuery.html":{}}}],["yes",{"_index":33,"title":{},"body":{"classes/ApiException.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/TemplateService.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/exception/api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorCode\n                            \n                            \n                                    Private\n                                errorData\n                            \n                            \n                                    Private\n                                errorMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorCode\n                            \n                            \n                                getErrorData\n                            \n                            \n                                getErrorMsg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMsg: string, errorCode: ApiStatusCode, statusCode: HttpStatus, errorData?: Record)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/exception/api.exception.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMsg\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                    ApiStatusCode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorData\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiStatusCode\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/exception/api.exception.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/exception/api.exception.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/exception/api.exception.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorCode\n                        \n                    \n                \n            \n            \n                \ngetErrorCode()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/exception/api.exception.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ApiStatusCode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorData\n                        \n                    \n                \n            \n            \n                \ngetErrorData()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/exception/api.exception.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMsg\n                        \n                    \n                \n            \n            \n                \ngetErrorMsg()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/exception/api.exception.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiStatusCode } from \"@bill/database\";\nimport { HttpException, HttpStatus } from \"@nestjs/common\";\n\nexport class ApiException extends HttpException {\n  private errorMsg: string;\n  private errorCode: ApiStatusCode;\n  private errorData: Record;\n\n  constructor(\n    errorMsg: string,\n    errorCode: ApiStatusCode,\n    statusCode: HttpStatus,\n    errorData?: Record\n  ) {\n    super(errorMsg, statusCode);\n\n    this.errorCode = errorCode;\n    this.errorData = errorData || {};\n    this.errorMsg = errorMsg;\n  }\n\n  getErrorMsg() {\n    return this.errorMsg;\n  }\n\n  getErrorCode() {\n    return this.errorCode;\n  }\n\n  getErrorData() {\n    return this.errorData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLog4jsGlobalModule\n\nLog4jsGlobalModule\n\nAppModule -->\n\nLog4jsGlobalModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nTemplateModule\n\nTemplateModule\n\nAppModule -->\n\nTemplateModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            Log4jsGlobalModule\n                        \n                        \n                            MenuModule\n                        \n                        \n                            TemplateModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport base from \"@/config/base\";\nimport database from \"@/config/database\";\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { Log4jsGlobalModule } from \"@/modules/log4js/log4js.module\";\nimport { MenuModule } from \"@/modules/menu/menu.module\";\nimport { TemplateModule } from \"@/modules/template/template.module\";\nimport { UserModule } from \"@/modules/user/user.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [\".env\"],\n      load: [database, base],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: (config: ConfigService) => {\n        return Object.assign(\n          {\n            entities: entities || [],\n            synchronize: true,\n          },\n          config.get(\"database\"),\n          {\n          }\n        );\n      },\n      inject: [ConfigService],\n    }),\n    Log4jsGlobalModule.forRoot(),\n    UserModule,\n    AuthModule,\n    MenuModule,\n    TemplateModule\n  ],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(undefined)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/logout')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\nimport { AuthService } from \"./auth.service\";\nimport { JwtAuthGuard } from \"./jwt-auth.guard\";\nimport { Public } from \"@/decorator/public\";\n\n@Controller({\n  path: [\"auth\"],\n})\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"login\")\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"auth/logout\")\n  async logout(@Request() req) {\n    return req.logout();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(\"profile\")\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { UserModule } from \"@/modules/user/user.module\";\nimport { PassportModule } from \"@nestjs/passport\";\n\nimport { LocalStrategy } from \"./local.strategy\";\nimport { AuthController } from \"./auth.controller\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { JwtAuthGuard } from \"./jwt-auth.guard\";\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      useFactory: (config: ConfigService) => {\n        const opts = config.get(\"base\") || {};\n\n        return {\n          secret: opts.jwtSecret,\n          signOptions: { expiresIn: \"60s\" },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n  ],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Get, Injectable, Req, UseGuards } from \"@nestjs/common\";\nimport { UserService } from \"@/modules/user/user.service\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { UserEntity } from \"@bill/database/dist/entities\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private jwtService: JwtService\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOne(email);\n\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n\n      return result;\n    }\n\n    return null;\n  }\n\n  async login(user: UserEntity) {\n    const payload = { email: user.email, sub: user.id };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseQuery.html":{"url":"classes/BaseQuery.html","title":"class - BaseQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/utils/query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                take\n                            \n                            \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip_c\n                                \n                                \n                                    take_c\n                                \n                                \n                                    where_c\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/utils/query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/utils/query.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/utils/query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip_c\n                    \n                \n\n                \n                    \n                        getskip_c()\n                    \n                \n                            \n                                \n                                    Defined in packages/server/src/utils/query.ts:6\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        take_c\n                    \n                \n\n                \n                    \n                        gettake_c()\n                    \n                \n                            \n                                \n                                    Defined in packages/server/src/utils/query.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        where_c\n                    \n                \n\n                \n                    \n                        getwhere_c()\n                    \n                \n                            \n                                \n                                    Defined in packages/server/src/utils/query.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class BaseQuery {\n  skip?: number;\n  take?: number;\n  where?: Record;\n\n  get skip_c() {\n    return this.skip || 0;\n  }\n\n  get take_c() {\n    return this.take || 10;\n  }\n\n  get where_c() {\n    return this.where || {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/filter/http.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Log4jsService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/filter/http.exception.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Log4jsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/filter/http.exception.filter.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QueryFailedError } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport {\n  ArgumentsHost,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from \"@nestjs/common\";\n\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { ApiException } from \"../exception/api.exception\";\n\nexport class HttpExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: Log4jsService) {}\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const req = ctx.getRequest();\n\n    this.logger.getLogger(\"HttpExceptionFilter\").error(exception?.message);\n\n    // custom error\n    if (exception instanceof ApiException) {\n      const status = exception.getStatus();\n\n      return response.status(status).json({\n        code: exception.getErrorCode(),\n        message: exception.getErrorMsg(),\n        data: exception.getErrorData() || {\n          timestamp: Date.now(),\n          path: req.url,\n        },\n      });\n    }\n\n    // sql error can not expose to users\n    if (exception instanceof QueryFailedError) {\n      return response.status(HttpStatus.OK).json({\n        code: ApiStatusCode.SQL_ERROR,\n        data: {\n          timestamp: Date.now(),\n          path: req.url,\n        },\n        message: \"SQL_ERROR\",\n      });\n    }\n\n    // common error\n    response.status(HttpStatus.OK).json({\n      code: ApiStatusCode.UNKOWN_ERROR,\n      data: {\n        timestamp: Date.now(),\n        path: req.url,\n      },\n      message: exception?.message || \"UNKNOWN_ERROR\",\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard(\"jwt\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/auth/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/jwt-auth.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IS_PUBLIC_KEY } from \"@/decorator/public\";\nimport { ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(\"jwt\") {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"base\").jwtSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from \"passport-local\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Log4jsGlobalModule.html":{"url":"modules/Log4jsGlobalModule.html","title":"module - Log4jsGlobalModule","body":"\n                   \n\n\n\n\n    Modules\n    Log4jsGlobalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Log4jsGlobalModule\n\n\n\ncluster_Log4jsGlobalModule_exports\n\n\n\ncluster_Log4jsGlobalModule_providers\n\n\n\n\nLog4jsService \n\nLog4jsService \n\n\n\nLog4jsGlobalModule\n\nLog4jsGlobalModule\n\nLog4jsService  -->\n\nLog4jsGlobalModule->Log4jsService \n\n\n\n\n\nLog4jsService\n\nLog4jsService\n\nLog4jsGlobalModule -->\n\nLog4jsService->Log4jsGlobalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/log4js/log4js.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options?: Configuration | string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Configuration | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Global, Module, DynamicModule } from \"@nestjs/common\";\nimport { Configuration } from \"log4js\";\nimport { Log4jsService } from \"./log4js.service\";\nimport { createOptionProvider } from \"./log4js.provider\";\n\n@Module({\n    providers: [Log4jsService, createOptionProvider()],\n    exports: [Log4jsService]\n})\nexport class Log4jsModule {\n    static forRoot(options?: Configuration | string): DynamicModule {\n        const optionProvider = createOptionProvider(options);\n        return {\n            module: Log4jsModule,\n            providers: [Log4jsService, optionProvider],\n            exports: [Log4jsService]\n        };\n    }\n}\n\n@Global()\n@Module({\n    providers: [Log4jsService, createOptionProvider()],\n    exports: [Log4jsService]\n})\nexport class Log4jsGlobalModule {\n    static forRoot(options?: Configuration | string): DynamicModule {\n        const optionProvider = createOptionProvider(options);\n        return {\n            module: Log4jsGlobalModule,\n            providers: [Log4jsService, optionProvider],\n            exports: [Log4jsService]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Log4jsModule.html":{"url":"modules/Log4jsModule.html","title":"module - Log4jsModule","body":"\n                   \n\n\n\n\n    Modules\n    Log4jsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Log4jsModule\n\n\n\ncluster_Log4jsModule_exports\n\n\n\ncluster_Log4jsModule_providers\n\n\n\n\nLog4jsService \n\nLog4jsService \n\n\n\nLog4jsModule\n\nLog4jsModule\n\nLog4jsService  -->\n\nLog4jsModule->Log4jsService \n\n\n\n\n\nLog4jsService\n\nLog4jsService\n\nLog4jsModule -->\n\nLog4jsService->Log4jsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/log4js/log4js.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options?: Configuration | string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.module.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Configuration | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Global, Module, DynamicModule } from \"@nestjs/common\";\nimport { Configuration } from \"log4js\";\nimport { Log4jsService } from \"./log4js.service\";\nimport { createOptionProvider } from \"./log4js.provider\";\n\n@Module({\n    providers: [Log4jsService, createOptionProvider()],\n    exports: [Log4jsService]\n})\nexport class Log4jsModule {\n    static forRoot(options?: Configuration | string): DynamicModule {\n        const optionProvider = createOptionProvider(options);\n        return {\n            module: Log4jsModule,\n            providers: [Log4jsService, optionProvider],\n            exports: [Log4jsService]\n        };\n    }\n}\n\n@Global()\n@Module({\n    providers: [Log4jsService, createOptionProvider()],\n    exports: [Log4jsService]\n})\nexport class Log4jsGlobalModule {\n    static forRoot(options?: Configuration | string): DynamicModule {\n        const optionProvider = createOptionProvider(options);\n        return {\n            module: Log4jsGlobalModule,\n            providers: [Log4jsService, optionProvider],\n            exports: [Log4jsService]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Log4jsService.html":{"url":"injectables/Log4jsService.html","title":"injectable - Log4jsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Log4jsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/log4js/log4js.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                flushall\n                            \n                            \n                                getLogger\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: Configuration | string)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/log4js/log4js.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    Configuration | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flushall\n                        \n                    \n                \n            \n            \n                \nflushall(cb?: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cb\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLogger\n                        \n                    \n                \n            \n            \n                \ngetLogger(loggerName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                loggerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"APP\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/log4js/log4js.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { getLogger, Logger, shutdown, configure, Configuration } from \"log4js\";\nimport { Inject, LoggerService, Injectable, Global } from \"@nestjs/common\";\n\nimport { LOG4JS_OPTION } from \"./log4js.constants\";\nimport { buildDefaultConfig } from \"./log4js.default.config\";\n\n@Global()\n@Injectable()\nexport class Log4jsService implements LoggerService {\n    private loggers: Map;\n    constructor(@Inject(LOG4JS_OPTION) options?: Configuration | string) {\n        this.loggers = new Map();\n        if (typeof options == \"string\") {\n            options = buildDefaultConfig(options);\n        } else if (typeof options == \"undefined\") {\n            options = buildDefaultConfig(\"all\");\n        }\n        configure(options);\n    }\n\n    getLogger(loggerName = \"APP\") {\n        let logger = this.loggers.get(loggerName);\n        if (!logger) {\n            logger = getLogger(loggerName);\n            this.loggers.set(loggerName, logger);\n        }\n        return logger;\n    }\n\n    log(message: any, context?: string) {\n        this.getLogger(context).info(message);\n    }\n\n    error(message: any, trace?: string, context?: string) {\n        this.getLogger(context).error(message, trace);\n    }\n\n    warn(message: any, context?: string) {\n        this.getLogger(context).warn(message);\n    }\n\n    debug(message: any, context?: string) {\n        this.getLogger(context).debug(message);\n    }\n\n    flushall(cb?: () => void) {\n        shutdown(() => {\n            cb && cb();\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBodyRequest.html":{"url":"classes/MenuBodyRequest.html","title":"class - MenuBodyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBodyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                icon\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                order\n                            \n                            \n                                    Optional\n                                parentId\n                            \n                            \n                                    \n                                route\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Max(100)@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PermissionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Max, Min } from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\n\nexport class MenuBodyRequest {\n  id?: number;\n\n  @IsString()\n  label: string;\n  @IsString()\n  name: string;\n  @IsString()\n  icon: string;\n  @IsNumber()\n  type: PermissionType;\n  @IsString()\n  route: string;\n  @IsNumber()\n  @Max(100)\n  @Min(0)\n  order: number;\n  parentId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController.html":{"url":"controllers/MenuController.html","title":"controller - MenuController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                test\n                            \n                            \n                                    \n                                    Async\n                                tree\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: MenuBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/test')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        tree\n                        \n                    \n                \n            \n            \n                \n                        \n                    tree(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: MenuBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Get, Post, Body, Param, Put, Delete } from \"@nestjs/common\";\n\nimport { Public } from \"@/decorator/public\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { MenuBodyRequest } from \"./menu.interface\";\nimport { MenuService } from \"./menu.service\";\n\n@Controller({\n  path: [\"menus\"],\n})\n@Public()\nexport class MenuController {\n  constructor(private menuService: MenuService, private readonly log4jService: Log4jsService) {\n    this.log4jService.warn(\"abc\");\n  }\n\n  @Get(\"/\")\n  async tree(@Request() req) {\n    return this.menuService.all();\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.menuService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(@Body() body: MenuBodyRequest) {\n    return this.menuService.create(body);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: MenuBodyRequest) {\n    return this.menuService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.menuService.remove(id);\n  }\n\n  @Get(\"/test\")\n  async test(@Request() req) {\n    return this.menuService.testData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController-1.html":{"url":"controllers/MenuController-1.html","title":"controller - MenuController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: TemplateQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            TemplateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: TemplateBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: TemplateBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Get, Post, Body, Param, Put, Delete } from \"@nestjs/common\";\n\nimport { Public } from \"@/decorator/public\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { TemplateBodyRequest, TemplateQuery } from \"./template.interface\";\nimport { TemplateService } from \"./template.service\";\n\n@Controller({\n  path: [\"templates\"],\n})\n@Public()\nexport class MenuController {\n  constructor(private templateService: TemplateService, private readonly log4jService: Log4jsService) {\n    \n  }\n\n  @Get(\"/\")\n  async all(@Body() query: TemplateQuery) {\n    return this.templateService.all(query);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.templateService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(@Body() body: TemplateBodyRequest) {\n    return this.templateService.create(body);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: TemplateBodyRequest) {\n    return this.templateService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.templateService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuModule.html":{"url":"modules/MenuModule.html","title":"module - MenuModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_MenuModule_exports\n\n\n\n\nMenuService \n\nMenuService \n\n\n\nMenuModule\n\nMenuModule\n\nMenuService  -->\n\nMenuModule->MenuService \n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MenuService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MenuService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { MenuController } from \"./menu.controller\";\nimport { MenuService } from \"./menu.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [MenuService],\n  exports: [MenuService],\n  controllers: [MenuController],\n})\nexport class MenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                testData\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Log4jsService, repo: Repository, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/menu/menu.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Log4jsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: MenuBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        testData\n                        \n                    \n                \n            \n            \n                \n                        \n                    testData()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: MenuBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, Repository } from \"typeorm\";\nimport { ApiStatusCode, PermissionType } from \"@bill/database\";\nimport { MenuEntity, UserEntity } from \"@bill/database/dist/entities\";\nimport { HttpCode, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/exception/api.exception\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { MenuBodyRequest } from \"./menu.interface\";\n\n@Injectable()\nexport class MenuService {\n  constructor(\n    private logger: Log4jsService,\n    @InjectRepository(MenuEntity) private repo: Repository,\n    private em: EntityManager\n  ) {}\n\n  async all(): Promise {\n    const trees = await this.repo.manager\n      .getTreeRepository(MenuEntity)\n      .findTrees();\n\n    return trees;\n  }\n\n  async getById(id?: number): Promise {\n    if (!id) {\n      return undefined;\n    }\n\n    const menu = await this.repo.findOneBy({\n      id,\n    });\n\n    return menu || undefined;\n  }\n\n  async create(body: MenuBodyRequest): Promise {\n    const { id, parentId, ...rest } = body;\n\n    const child = new MenuEntity().extend({\n      ...rest,\n      children: [],\n      parent: await this.getById(parentId || 0),\n    });\n\n    return await this.repo.save(child);\n  }\n\n  async update(id: number, body: MenuBodyRequest): Promise {\n    const child = await this.getById(id);\n\n    if (!child) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    child.icon = body.icon;\n    child.label = body.label;\n    child.name = body.name;\n    child.order = body.order;\n    child.route = body.route;\n    child.type = body.type;\n\n    child.parent = undefined;\n\n    if (body.parentId) {\n      child.parent = await this.getById(body.parentId);\n    }\n\n    return this.repo.save(child);\n  }\n\n  async remove(id: number) {\n    const child = await this.getById(id);\n\n    if (!child) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    return this.repo.remove(child);\n  }\n\n  async testData() {\n    const dashboard = new MenuEntity().extend({\n      label: \"sys.menu.dashboard\",\n      name: \"Dashboard\",\n      icon: \"ic-analysis\",\n      type: PermissionType.CATALOGUE,\n      route: \"dashboard\",\n      order: 1,\n    });\n\n    const child1 = new MenuEntity().extend({\n      label: \"sys.menu.dashboard1\",\n      name: \"Dashboard-Child1\",\n      icon: \"ic-analysis\",\n      type: PermissionType.CATALOGUE,\n      route: \"dashboard\",\n      order: 1,\n      parent: dashboard,\n    });\n    const child2 = new MenuEntity().extend({\n      label: \"sys.menu.dashboard1\",\n      name: \"Dashboard-Child2\",\n      icon: \"ic-analysis\",\n      type: PermissionType.CATALOGUE,\n      route: \"dashboard\",\n      order: 1,\n      parent: dashboard,\n    });\n\n    return await this.em.transaction(async (transactionalEntityManager) => {\n      await transactionalEntityManager.save(dashboard);\n\n      return await Promise.all([\n        transactionalEntityManager.save(child1),\n        transactionalEntityManager.save(child2),\n      ]);\n    });\n\n    console.log(1111);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModuleAsyncOptions.html":{"url":"interfaces/ModuleAsyncOptions.html","title":"interface - ModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/utils/core/interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from \"@nestjs/common\";\n\nexport interface ModuleAsyncOptions\n  extends Pick {\n  useFactory?: (\n    ...args: any[]\n  ) => ModuleOptions | Promise;\n  inject: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseInterceptor.html":{"url":"classes/ResponseInterceptor.html","title":"class - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/interceptor/res.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/interceptor/res.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { catchError, map, Observable, throwError } from \"rxjs\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { CallHandler, ExecutionContext, NestInterceptor } from \"@nestjs/common\";\n\nexport class ResponseInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable | Promise> {\n    const ctx = context.switchToHttp();\n\n    return next\n      .handle()\n      .pipe(\n        map((data) => ({\n          data,\n          code: ApiStatusCode.SUCCESS,\n          message: \"SUCCESS\",\n        }))\n      )\n      .pipe(catchError((err) => throwError((err) => err)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateBodyRequest.html":{"url":"classes/TemplateBodyRequest.html","title":"class - TemplateBodyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateBodyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categories\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateCategory[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  isString,\n  IsString,\n  Length,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\nimport {\n  ProductCategoryEntity,\n  TemplateCategoryEntity,\n} from \"@bill/database/dist/entities\";\n\nimport { BaseQuery } from \"@/utils/query\";\n\nexport class TemplateCategory {\n  @IsNumber()\n  productCategoryId: number;\n  @Length(1)\n  products: number[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @Length(1)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateCategory.html":{"url":"classes/TemplateCategory.html","title":"class - TemplateCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                productCategoryId\n                            \n                            \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  isString,\n  IsString,\n  Length,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\nimport {\n  ProductCategoryEntity,\n  TemplateCategoryEntity,\n} from \"@bill/database/dist/entities\";\n\nimport { BaseQuery } from \"@/utils/query\";\n\nexport class TemplateCategory {\n  @IsNumber()\n  productCategoryId: number;\n  @Length(1)\n  products: number[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @Length(1)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplateModule.html":{"url":"modules/TemplateModule.html","title":"module - TemplateModule","body":"\n                   \n\n\n\n\n    Modules\n    TemplateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplateModule\n\n\n\ncluster_TemplateModule_providers\n\n\n\ncluster_TemplateModule_exports\n\n\n\n\nTemplateService \n\nTemplateService \n\n\n\nTemplateModule\n\nTemplateModule\n\nTemplateService  -->\n\nTemplateModule->TemplateService \n\n\n\n\n\nTemplateService\n\nTemplateService\n\nTemplateModule -->\n\nTemplateService->TemplateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/template/template.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TemplateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TemplateService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { MenuController } from \"./template.controller\";\nimport { TemplateService } from \"./template.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [TemplateService],\n  exports: [TemplateService],\n  controllers: [MenuController],\n})\nexport class TemplateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateQuery.html":{"url":"classes/TemplateQuery.html","title":"class - TemplateQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                take\n                            \n                            \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:3\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  isString,\n  IsString,\n  Length,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\nimport {\n  ProductCategoryEntity,\n  TemplateCategoryEntity,\n} from \"@bill/database/dist/entities\";\n\nimport { BaseQuery } from \"@/utils/query\";\n\nexport class TemplateCategory {\n  @IsNumber()\n  productCategoryId: number;\n  @Length(1)\n  products: number[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @Length(1)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateService.html":{"url":"injectables/TemplateService.html","title":"injectable - TemplateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Log4jsService, repo: Repository, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/template/template.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Log4jsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: TemplateQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            TemplateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: TemplateBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: TemplateBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, Repository } from \"typeorm\";\nimport { ApiStatusCode, PermissionType } from \"@bill/database\";\nimport { TemplateEntity } from \"@bill/database/dist/entities\";\nimport { HttpCode, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/exception/api.exception\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { TemplateBodyRequest, TemplateQuery } from \"./template.interface\";\n\n@Injectable()\nexport class TemplateService {\n  constructor(\n    private logger: Log4jsService,\n    @InjectRepository(TemplateEntity) private repo: Repository,\n    private em: EntityManager\n  ) {}\n\n  async all(query: TemplateQuery): Promise {\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip_c,\n      take: query.take_c,\n      where: {\n        ...query.where_c,\n      },\n    });\n\n    return {\n      count,\n      rows,\n    };\n  }\n\n  async getById(id?: number): Promise {\n    if (!id) {\n      return undefined;\n    }\n\n    const data = await this.repo.findOneBy({\n      id,\n    });\n\n    return data || undefined;\n  }\n\n  async create(body: TemplateBodyRequest): Promise {\n    const child = new TemplateEntity().extend({\n      ...body,\n    });\n\n    return await this.repo.save(child);\n  }\n\n  async update(id: number, body: TemplateBodyRequest): Promise {\n    const child = await this.getById(id);\n\n    if (!child) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    child.desc = body.desc;\n    child.name = body.name;\n\n    return this.repo.save(child);\n  }\n\n  async remove(id: number) {\n    const child = await this.getById(id);\n\n    if (!child) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    return this.repo.softRemove(child);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UserService } from \"./user.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport entities from \"@bill/database\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/user/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserEntity } from \"@bill/database/dist/entities\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserEntity) private userRepo: Repository\n  ) {}\n\n  async findOne(email: string): Promise {\n    return new UserEntity({\n      email: \"nick@126.com\",\n      id: 1,\n      fullname: \"\",\n      password: \"changeme\",\n      avatar: \"\",\n      address: \"\",\n      isActive: false,\n    });\n\n    // return this.userRepo.findOne({\n    //   where: {\n    //     email,\n    //   },\n    // });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        packages/server/src/decorator/public.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/decorator/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/exception/api.exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/filter/http.exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/interceptor/res.interceptor.ts\n            \n            class\n            ResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        packages/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.constants.ts\n            \n            variable\n            LOG4JS_OPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.default.config.ts\n            \n            function\n            buildDefaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.default.config.ts\n            \n            variable\n            basePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.provider.ts\n            \n            function\n            createOptionProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/modules/log4js/log4js.service.ts\n            \n            injectable\n            Log4jsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                packages/server/src/modules/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/menu/menu.interface.ts\n            \n            class\n            MenuBodyRequest\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                packages/server/src/modules/menu/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateBodyRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.service.ts\n            \n            injectable\n            TemplateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/utils/core/interface.ts\n            \n            interface\n            ModuleAsyncOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        packages/server/src/utils/core/provider.ts\n            \n            variable\n            createAnyncClientOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/utils/core/provider.ts\n            \n            variable\n            createClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/utils/log4js.constants.ts\n            \n            variable\n            LOG4JS_DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/utils/log4js.constants.ts\n            \n            variable\n            LOG4JS_DEFAULT_LAYOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/utils/log4js.constants.ts\n            \n            variable\n            LOG4JS_NO_COLOUR_DEFAULT_LAYOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/utils/query.ts\n            \n            class\n            BaseQuery\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (packages/.../main.ts)\n                        \n                        \n                            buildDefaultConfig   (packages/.../log4js.default.config.ts)\n                        \n                        \n                            createOptionProvider   (packages/.../log4js.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    packages/server/src/modules/log4js/log4js.default.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDefaultConfig\n                        \n                    \n                \n            \n            \n                \nbuildDefaultConfig(level: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                level\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Configuration\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/modules/log4js/log4js.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOptionProvider\n                        \n                    \n                \n            \n            \n                \ncreateOptionProvider(options?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_Log4jsGlobalModule\n\n\n\ncluster_Log4jsGlobalModule_exports\n\n\n\ncluster_Log4jsGlobalModule_providers\n\n\n\ncluster_Log4jsModule\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_exports\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_TemplateModule\n\n\n\ncluster_TemplateModule_exports\n\n\n\ncluster_TemplateModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLog4jsGlobalModule\n\nLog4jsGlobalModule\n\nAppModule -->\n\nLog4jsGlobalModule->AppModule\n\n\n\n\n\nLog4jsService \n\nLog4jsService \n\nLog4jsService  -->\n\nLog4jsGlobalModule->Log4jsService \n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nMenuService \n\nMenuService \n\nMenuService  -->\n\nMenuModule->MenuService \n\n\n\n\n\nTemplateModule\n\nTemplateModule\n\nAppModule -->\n\nTemplateModule->AppModule\n\n\n\n\n\nTemplateService \n\nTemplateService \n\nTemplateService  -->\n\nTemplateModule->TemplateService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nLog4jsService\n\nLog4jsService\n\nLog4jsGlobalModule -->\n\nLog4jsService->Log4jsGlobalModule\n\n\n\n\n\nLog4jsModule\n\nLog4jsModule\n\nLog4jsModule -->\n\nLog4jsService->Log4jsModule\n\n\n\nLog4jsService  -->\n\nLog4jsModule->Log4jsService \n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nTemplateModule -->\n\nTemplateService->TemplateModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Log4jsGlobalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Log4jsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TemplateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            basePath   (packages/.../log4js.default.config.ts)\n                        \n                        \n                            createAnyncClientOptions   (packages/.../provider.ts)\n                        \n                        \n                            createClient   (packages/.../provider.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (packages/.../public.ts)\n                        \n                        \n                            LOG4JS_DEFAULT_CONFIG   (packages/.../log4js.constants.ts)\n                        \n                        \n                            LOG4JS_DEFAULT_LAYOUT   (packages/.../log4js.constants.ts)\n                        \n                        \n                            LOG4JS_NO_COLOUR_DEFAULT_LAYOUT   (packages/.../log4js.constants.ts)\n                        \n                        \n                            LOG4JS_OPTION   (packages/.../log4js.constants.ts)\n                        \n                        \n                            Public   (packages/.../public.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/server/src/modules/log4js/log4js.default.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(process.cwd(), \"logs\")\n                    \n                \n\n\n        \n    \n\n    packages/server/src/utils/core/provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createAnyncClientOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  options: ModuleAsyncOptions,\n  INSTNCE_OPTIONS: symbol\n): Provider => ({\n  provide: INSTNCE_OPTIONS,\n  useFactory: options.useFactory as any,\n  inject: options.inject,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  factory: (opts: O) => F,\n  INSTANCE_OPTIONS: symbol,\n  INSTANCE: symbol\n): Provider => ({\n  provide: INSTANCE,\n  useFactory: (opts: O) => {\n    return factory(opts);\n  },\n  inject: [INSTANCE_OPTIONS],\n})\n                    \n                \n\n\n        \n    \n\n    packages/server/src/decorator/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"isPublic\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    packages/server/src/utils/log4js.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOG4JS_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Configuration\n\n                    \n                \n                \n                    \n                        Default value : {\n  appenders: {\n    stdout: {\n      type: 'stdout',\n      layout: LOG4JS_DEFAULT_LAYOUT\n    },\n    file: {\n      type: 'file',\n      filename: './logs/application.log',\n      maxLogSize: 20 * 1024 * 1024, // maxLogSize use bytes ad unit\n      backups: 10, // default use 5 so 1KB file size total rotating\n      layout: LOG4JS_NO_COLOUR_DEFAULT_LAYOUT\n    }\n  },\n  categories: {\n    default: {\n      enableCallStack: true,\n      appenders: ['stdout', 'file'],\n      level: 'debug'\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOG4JS_DEFAULT_LAYOUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'pattern',\n  // log4js default pattern %d{yyyy-MM-dd HH:mm:ss:SSS} [%thread] %-5level %logger{36} - %msg%n\n  // we use process id instead thread id\n  pattern: '%[%d{yyyy-MM-dd hh:mm:ss:SSS} %-5.5p --- [%15.15x{name}]%] %40.40f{3}  : %m',\n  tokens: {\n    name: (logEvent) => {\n      return (logEvent.context && logEvent.context['name']) || '-';\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOG4JS_NO_COLOUR_DEFAULT_LAYOUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'pattern',\n  // log4js default pattern %d{yyyy-MM-dd HH:mm:ss:SSS} [%thread] %-5level %logger{36} - %msg%n\n  // we use process id instead thread id\n  pattern: '%d{yyyy-MM-dd hh:mm:ss:SSS} %-5.5p --- [%15.15x{name}] %40.40f{3}  : %m',\n  tokens: {\n    name: (logEvent) => {\n      return (logEvent.context && logEvent.context['name']) || '-';\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    packages/server/src/modules/log4js/log4js.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOG4JS_OPTION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOG4JS_OPTION\")\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
