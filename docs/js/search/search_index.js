var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveUserData.html",[0,3.014,1,1.477]],["body/interfaces/ActiveUserData.html",[0,4.261,1,2.528,2,5.835,3,0.146,4,0.146,5,0.128,6,5.103,7,2.019,8,5.103,9,0.338,10,1.576,11,4.535,12,3.949,13,1.708,14,6.91,15,1.082,16,0.403,17,0.012,18,1.332,19,0.146,20,0.01,21,0.01]],["title/classes/ApiException.html",[22,0.217,23,1.828]],["body/classes/ApiException.html",[3,0.114,4,0.114,5,0.1,9,0.265,10,1.351,16,0.369,17,0.012,18,1.252,19,0.114,20,0.008,21,0.008,22,0.24,23,2.683,24,0.959,25,4.003,26,1.626,27,5.939,28,2.543,29,7.881,30,7.881,31,7.726,32,1.393,33,7.228,34,7.228,35,7.228,36,1.903,37,4.577,38,3.628,39,7.228,40,3.328,41,5.641,42,0.542,43,6.059,44,1.02,45,0.403,46,0.498,47,1.882,48,4.577,49,4.577,50,4.577,51,1.514,52,4.577,53,4.577,54,0.17,55,0.766,56,0.741,57,4.577,58,6.059,59,6.059,60,6.059,61,1.423]],["title/modules/AppModule.html",[62,1.042,63,3.014]],["body/modules/AppModule.html",[3,0.084,4,0.084,5,0.074,17,0.012,19,0.084,20,0.007,21,0.007,22,0.177,54,0.236,55,0.564,56,0.546,61,1.026,62,1.455,63,6.198,64,1.29,65,1.29,66,1.385,67,1.385,68,1.29,69,2.013,70,1.385,71,2.946,72,2.946,73,4.778,74,4.778,75,4.778,76,4.304,77,4.778,78,4.778,79,4.778,80,4.491,81,4.778,82,4.778,83,4.778,84,4.778,85,4.778,86,2.013,87,1.336,88,1.336,89,3.369,90,2.254,91,2.765,92,2.946,93,4.931,94,2.294,95,4.212,96,1.551,97,2.946,98,2.46,99,1.615,100,1.128,101,2.961,102,2.46,103,4.897,104,3.369,105,4.897,106,3.369,107,3.334,108,3.369,109,4.282,110,2.946,111,4.897,112,3.369,113,3.369,114,3.575,115,3.369,116,3.369,117,3.369,118,3.369,119,3.369,120,3.369,121,2.946,122,3.369,123,3.369,124,3.369,125,3.369,126,3.369,127,3.369,128,3.369,129,3.369,130,3.369,131,3.369,132,3.369,133,3.369,134,2.656,135,3.369,136,4.282,137,1.934,138,2.668,139,3.369,140,3.369,141,3.369,142,3.369,143,2.447,144,3.369,145,3.369,146,3.369,147,3.369,148,3.369,149,4.282,150,4.897]],["title/controllers/AuthController.html",[151,1.339,152,3.014]],["body/controllers/AuthController.html",[1,2.58,3,0.113,4,0.113,5,0.1,7,2.496,9,0.264,16,0.368,17,0.012,18,1.097,19,0.113,20,0.008,21,0.008,22,0.239,32,1.388,40,2.094,42,0.466,44,1.509,45,0.596,46,0.737,51,1.509,54,0.216,56,0.737,61,1.418,88,2.393,151,1.475,152,4.406,153,1.475,154,3.602,155,4.549,156,4.549,157,5.362,158,6.034,159,5.277,160,3.978,161,1.172,162,4.549,163,4.549,164,2.762,165,4.549,166,4.91,167,4.549,168,4.549,169,6.034,170,3.978,171,4.549,172,4.549,173,3.463,174,2.273,175,1.524,176,3.978,177,2.159,178,3.015,179,2.487,180,2.487,181,3.861,182,3.322,183,1.87,184,1.87,185,3.978,186,4.332,187,3.978,188,3.602,189,1.428,190,4.549,191,2.751,192,2.014,193,6.77,194,6.034,195,4.549,196,4.549,197,4.549,198,4.549,199,4.549,200,4.549]],["title/modules/AuthModule.html",[62,1.042,73,2.811]],["body/modules/AuthModule.html",[3,0.117,4,0.117,5,0.102,17,0.012,19,0.117,20,0.009,21,0.009,22,0.245,54,0.233,55,0.783,56,0.757,62,1.731,64,1.79,65,1.79,66,1.922,67,1.922,68,1.79,69,2.821,70,2.525,73,5.769,86,2.525,87,1.854,88,1.854,90,2.152,91,2.24,97,5.372,98,3.413,99,2.24,100,1.565,109,4.088,110,4.088,152,5.01,153,1.992,186,4.973,187,4.088,201,4.088,202,4.088,203,5.291,204,4.248,205,3.725,206,3.884,207,4.248,208,4.674,209,3.183,210,3.701,211,3.701,212,3.701,213,4.674,214,4.674,215,2.336,216,4.674]],["title/classes/AuthRequest.html",[22,0.217,166,2.811]],["body/classes/AuthRequest.html",[3,0.148,4,0.148,5,0.13,9,0.344,10,1.591,16,0.364,17,0.012,18,1.287,19,0.148,20,0.01,21,0.01,22,0.374,24,1.242,42,0.491,54,0.166,161,1.235,166,4.858,217,5.185,218,4.185,219,6.694,220,2.051,221,5.929,222,5.929,223,1.45]],["title/injectables/AuthService.html",[186,2.642,224,1.042]],["body/injectables/AuthService.html",[1,2.359,3,0.08,4,0.08,5,0.07,7,2.629,9,0.186,11,1.841,12,2.802,13,0.693,14,4.904,16,0.352,17,0.012,18,1.21,19,0.08,20,0.007,21,0.007,22,0.168,28,2.071,32,1.086,36,1.483,42,0.475,44,1.538,45,0.607,46,0.751,51,1.47,54,0.216,56,0.52,61,1.445,93,4.856,94,2.184,98,2.342,134,2.175,138,2.54,157,3.741,159,4.131,160,4.131,164,2.803,166,4.212,170,4.131,173,2.711,175,1.074,183,1.319,184,1.319,185,2.805,186,3.023,189,1.007,192,1.42,206,3.564,207,3.382,210,2.54,211,2.54,218,1.754,224,1.192,225,1.368,226,2.805,227,2.359,228,5.607,229,4.724,230,5.607,231,3.208,232,6.237,233,4.313,234,3.208,235,4.724,236,3.208,237,3.447,238,3.208,239,4.724,240,3.208,241,3.208,242,3.208,243,3.208,244,5.41,245,3.208,246,4.724,247,2.54,248,1.603,249,3.741,250,2.54,251,3.208,252,2.805,253,2.466,254,2.373,255,3.121,256,3.208,257,4.724,258,3.208,259,3.208,260,1.477,261,1.319,262,2.006,263,4.724,264,3.208,265,2.857,266,3.208,267,4.131,268,3.208,269,3.208,270,3.208,271,1.841,272,3.208,273,3.208,274,2.805,275,3.208,276,3.449,277,4.724,278,3.208,279,3.208,280,3.208,281,3.208]],["title/classes/BaseQuery.html",[22,0.217,282,1.042]],["body/classes/BaseQuery.html",[3,0.14,4,0.14,5,0.122,9,0.324,10,1.536,15,1.071,16,0.421,17,0.012,19,0.14,20,0.01,21,0.01,22,0.361,24,1.173,42,0.514,46,0.886,54,0.157,161,1.292,282,1.738,283,4.896,284,2.763,285,2.763,286,3.731,287,5.598,288,5.598,289,3.598,290,5.598,291,3.582,292,4.433]],["title/injectables/BcryptService.html",[203,2.811,224,1.042]],["body/injectables/BcryptService.html",[3,0.132,4,0.132,5,0.115,9,0.306,16,0.339,17,0.012,18,1.347,19,0.132,20,0.009,21,0.009,22,0.277,32,1.527,42,0.457,44,1.481,45,0.584,46,0.723,51,1.481,54,0.186,56,0.855,61,1.391,164,2.922,203,4.522,224,1.676,225,2.25,227,2.365,254,1.711,255,2.25,293,4.615,294,7.268,295,7.268,296,7.268,297,7.628,298,5.277,299,3.058,300,7.268,301,5.277,302,6.642,303,5.277,304,6.642]],["title/controllers/CompanyController.html",[151,1.339,305,3.014]],["body/controllers/CompanyController.html",[3,0.101,4,0.101,5,0.088,9,0.234,13,1.609,15,1.038,16,0.367,17,0.012,19,0.101,20,0.008,21,0.008,22,0.212,28,1.747,32,1.279,36,1.267,42,0.495,44,1.605,45,0.634,46,0.784,51,1.605,54,0.209,55,0.675,56,0.653,61,1.508,151,1.804,153,1.308,161,1.246,174,3.182,175,2.603,177,1.443,189,2.261,192,1.786,204,3.041,206,2.016,227,2.442,262,1.443,305,4.062,306,3.528,307,1.99,308,2.904,309,2.904,310,1.99,311,1.545,312,4.392,313,4.034,314,2.439,315,1.443,316,4.881,317,4.034,318,2.106,319,2.106,320,4.034,321,2.106,322,2.106,323,4.034,324,1.443,325,2.106,326,4.034,327,2.016,328,2.106,329,1.933,330,1.933,331,2.016,332,2.059,333,1.857,334,3.528,335,3.528,336,2.016,337,4.034,338,2.945,339,2.315,340,2.439,341,3.528,342,2.106,343,2.106,344,3.528,345,2.945,346,3.528,347,2.106,348,2.315,349,3.528,350,2.106,351,2.106,352,3.528]],["title/modules/CompanyModule.html",[62,1.042,74,2.811]],["body/modules/CompanyModule.html",[3,0.132,4,0.132,5,0.115,17,0.012,19,0.132,20,0.009,21,0.009,22,0.277,54,0.225,55,0.884,56,0.855,62,1.834,64,2.021,65,2.021,66,2.169,67,2.169,68,2.021,69,2.988,70,2.988,74,5.661,86,2.73,87,2.093,88,2.093,90,2.43,91,2.529,99,2.529,100,1.767,153,2.154,204,4.628,205,3.846,209,3.593,215,2.637,305,5.307,335,4.615,353,4.615,354,4.615,355,5.277,356,5.277,357,5.277]],["title/classes/CompanyQuery.html",[22,0.217,312,2.642]],["body/classes/CompanyQuery.html",[3,0.133,4,0.133,5,0.117,9,0.309,10,1.49,15,0.879,16,0.372,17,0.012,18,1.183,19,0.167,20,0.009,21,0.009,22,0.383,24,1.116,26,1.794,42,0.502,45,0.469,46,0.875,54,0.205,161,1.263,220,1.931,223,1.303,282,2.03,284,2.473,285,2.473,286,3.648,289,2.782,312,4.276,316,3.409,358,4.219,359,3.991,360,2.913,361,2.913,362,2.913,363,1.386,364,1.475,365,2.913,366,3.891,367,2.782,368,3.409]],["title/classes/CompanyRequest.html",[22,0.217,316,2.642]],["body/classes/CompanyRequest.html",[3,0.136,4,0.136,5,0.119,9,0.316,10,1.513,16,0.376,17,0.012,18,1.311,19,0.169,20,0.009,21,0.009,22,0.387,24,1.144,26,1.465,42,0.508,45,0.65,46,0.738,54,0.207,161,1.277,220,2.071,223,1.336,282,1.712,312,3.494,316,4.341,358,4.324,363,1.421,364,1.512,365,2.985,366,3.987,367,3.854,368,4.723,369,5.46,370,5.46,371,5.46]],["title/injectables/CompanyService.html",[204,2.257,224,1.042]],["body/injectables/CompanyService.html",[3,0.084,4,0.084,5,0.074,9,0.195,13,1.603,15,0.995,16,0.358,17,0.012,19,0.084,20,0.007,21,0.007,22,0.176,23,2.552,28,1.056,32,1.125,36,1.536,38,1.549,40,1.549,42,0.483,44,1.564,45,0.617,46,0.763,47,1.383,51,1.499,54,0.212,55,0.563,56,0.545,61,1.469,100,1.127,164,2.841,175,2.349,189,1.056,204,2.674,224,1.234,225,1.435,227,2.377,247,3.873,248,1.681,253,2.554,254,2.347,255,2.867,260,2.252,261,2.369,262,2.264,271,1.931,284,1.245,285,1.245,299,2.252,307,1.75,310,1.75,311,1.288,312,4.049,314,1.873,315,1.75,316,4.632,324,1.75,334,2.942,372,2.942,373,3.009,374,2.554,375,2.291,376,3.304,377,3.364,378,2.554,379,5.04,380,3.364,381,2.958,382,2.554,383,3.859,384,3.364,385,1.756,386,4.564,387,3.364,388,2.554,389,3.364,390,3.364,391,2.291,392,2.456,393,1.681,394,4.891,395,2.456,396,2.942,397,1.756,398,1.756,399,3.364,400,2.674,401,1.81,402,1.839,403,1.839,404,1.839,405,1.931,406,2.034,407,2.291,408,2.153,409,3.009,410,3.364,411,3.364,412,2.554,413,2.554,414,2.674,415,2.554,416,2.554,417,2.942,418,2.942,419,2.942,420,2.942]],["title/controllers/CustomerController.html",[151,1.339,421,3.014]],["body/controllers/CustomerController.html",[1,2.75,3,0.084,4,0.084,5,0.074,7,2.725,9,0.196,13,1.661,15,1.062,16,0.369,17,0.012,19,0.084,20,0.007,21,0.007,22,0.177,32,1.127,42,0.498,44,1.615,45,0.638,46,0.788,51,1.615,54,0.208,55,0.565,56,0.547,61,1.518,151,1.59,153,1.094,161,1.254,174,2.885,175,2.683,177,1.207,178,3.167,179,1.845,180,1.845,181,2.159,182,2.464,183,1.387,184,1.387,189,2.275,191,2.041,227,2.448,262,1.207,307,2.066,308,2.559,309,2.559,310,2.066,311,1.292,314,2.211,315,1.207,318,1.762,319,1.762,321,1.762,322,1.762,324,1.207,325,1.762,327,1.686,328,1.762,329,1.617,330,1.617,331,1.686,336,1.686,340,2.041,342,1.762,343,1.762,347,1.762,350,1.762,351,1.762,421,3.579,422,2.951,423,2.171,424,5.773,425,3.637,426,3.374,427,4.159,428,3.374,429,3.374,430,3.374,431,3.374,432,3.374,433,3.374,434,3.374,435,3.637,436,3.374,437,3.374,438,3.374,439,2.464,440,2.951,441,2.951,442,3.491,443,2.951,444,3.374,445,2.159,446,3.374,447,3.374,448,3.374,449,4.287,450,3.374,451,3.374,452,3.374,453,3.374,454,3.374,455,3.374,456,3.374]],["title/modules/CustomerModule.html",[62,1.042,75,2.811]],["body/modules/CustomerModule.html",[3,0.129,4,0.129,5,0.114,17,0.012,19,0.129,20,0.009,21,0.009,22,0.272,54,0.228,55,0.869,56,0.841,62,1.82,64,1.988,65,1.988,66,2.134,67,2.134,68,1.988,69,2.965,70,2.965,75,5.644,80,5.113,86,2.702,87,2.059,88,2.059,90,3.026,91,2.488,99,2.488,100,1.738,121,4.539,137,3.773,153,2.131,205,2.488,209,3.534,215,2.594,421,5.267,442,5.108,443,4.539,457,4.539,458,4.539,459,5.19,460,4.539,461,5.19,462,5.19]],["title/classes/CustomerPrice.html",[22,0.217,463,2.642]],["body/classes/CustomerPrice.html",[3,0.123,4,0.123,5,0.108,9,0.285,10,1.417,12,2.461,15,1.08,16,0.359,17,0.012,18,1.299,19,0.185,20,0.009,21,0.009,22,0.404,24,1.032,26,1.322,42,0.484,54,0.197,55,0.825,161,1.218,220,2.05,223,1.205,282,1.603,363,2.17,364,1.363,367,2.571,368,3.151,425,2.826,427,2.826,435,2.826,463,4.503,464,3.353,465,3.564,466,2.604,467,3.001,468,4.924,469,4.924,470,4.924,471,4.64,472,4.64,473,2.692,474,3.596,475,3.596,476,3.151,477,3.353,478,1.546,479,3.353]],["title/classes/CustomerPriceRequest.html",[22,0.217,435,2.37]],["body/classes/CustomerPriceRequest.html",[3,0.129,4,0.129,5,0.113,9,0.299,10,1.459,12,2.576,15,1.05,16,0.263,17,0.012,18,1.313,19,0.189,20,0.009,21,0.009,22,0.409,24,1.08,26,1.383,42,0.355,54,0.202,55,0.863,161,0.892,220,2.069,223,1.261,282,1.651,363,2.134,364,1.427,367,2.691,368,3.298,425,2.958,427,2.958,435,3.756,463,4.6,464,3.509,465,3.136,466,1.907,467,2.198,471,5.25,472,4.778,473,2.818,474,3.763,475,3.763,476,3.298,477,3.509,478,1.618,479,4.895,480,5.154]],["title/classes/CustomerQuery.html",[22,0.217,425,2.37]],["body/classes/CustomerQuery.html",[3,0.12,4,0.12,5,0.105,9,0.278,10,1.393,12,2.397,15,1.063,16,0.354,17,0.012,18,1.291,19,0.184,20,0.009,21,0.009,22,0.4,24,1.005,26,1.677,42,0.478,46,0.852,54,0.195,55,0.803,161,1.202,220,2.039,223,1.173,282,1.975,284,2.312,285,2.312,286,3.472,289,2.504,359,3.798,360,2.622,361,2.622,362,2.622,363,2.103,364,1.328,367,2.504,368,3.069,425,3.586,427,2.753,435,2.753,463,3.997,464,3.266,465,2.994,466,1.775,467,2.045,471,4.562,472,4.562,473,2.622,474,3.502,475,3.502,476,3.069,477,3.266,478,1.506,479,3.266]],["title/classes/CustomerRequest.html",[22,0.217,427,2.37]],["body/classes/CustomerRequest.html",[3,0.105,4,0.105,5,0.092,9,0.243,10,1.274,12,3.248,15,1.047,16,0.414,17,0.012,18,1.342,19,0.174,20,0.008,21,0.008,22,0.383,24,0.879,26,1.126,42,0.559,54,0.182,55,0.702,161,1.405,220,2.101,223,1.026,282,1.442,363,2.13,364,1.161,367,3.393,368,4.158,425,2.408,427,3.28,435,2.408,463,3.656,464,2.856,465,3.344,466,1.552,467,1.789,471,4.172,472,4.745,473,3.552,474,4.745,475,4.745,476,4.158,477,4.425,478,2.041,479,2.856,481,4.195,482,4.195,483,4.195,484,4.195,485,4.195,486,4.195,487,4.195,488,4.195,489,4.195,490,4.195,491,4.195]],["title/injectables/CustomerService.html",[224,1.042,442,2.496]],["body/injectables/CustomerService.html",[1,2.351,3,0.063,4,0.063,5,0.055,7,2.274,9,0.147,11,1.451,13,1.597,15,1.033,16,0.364,17,0.012,19,0.063,20,0.006,21,0.006,22,0.133,23,1.746,28,1.865,32,0.907,36,1.238,38,1.164,40,1.164,42,0.481,44,1.557,45,0.615,46,0.76,47,1.993,51,1.515,54,0.207,55,0.423,56,0.41,61,1.463,96,1.164,100,0.847,134,1.164,143,1.264,164,2.735,173,1.451,175,2.392,177,2.125,178,1.264,179,1.382,180,1.382,183,1.039,184,1.039,189,1.522,224,0.995,225,1.078,227,2.397,237,2.423,248,1.264,253,1.32,254,2.397,255,3.103,260,1.164,261,1.993,276,1.846,284,0.936,285,0.936,299,1.816,307,1.735,310,1.411,311,0.968,314,1.51,315,0.905,324,1.411,329,1.212,373,2.531,374,2.059,375,1.721,376,3.729,378,2.059,381,1.529,382,1.32,383,2.783,385,1.32,386,4.982,388,2.059,393,1.264,397,1.32,398,1.32,400,2.156,401,1.459,402,1.382,403,1.382,404,1.382,405,1.451,407,1.721,408,1.618,409,2.531,412,1.32,413,1.32,414,1.382,415,1.32,416,1.32,425,3.143,427,3.772,435,3.143,441,2.211,442,2.385,465,1.212,466,0.936,479,1.721,492,2.211,493,2.264,494,3.943,495,3.943,496,4.848,497,4.848,498,3.592,499,2.528,500,2.528,501,2.528,502,2.528,503,2.264,504,2.528,505,3.943,506,2.528,507,2.528,508,3.943,509,2.528,510,2.528,511,2.528,512,3.943,513,2.932,514,3.943,515,1.846,516,1.846,517,3.943,518,2.211,519,1.451,520,1.618,521,2.002,522,2.528,523,2.211,524,2.528,525,1.618,526,1.618,527,6.246,528,3.312,529,2.528,530,2.528,531,2.528,532,2.528,533,1.846,534,2.528,535,1.618,536,2.528,537,2.528,538,2.528,539,2.385,540,2.528,541,2.528,542,2.528,543,2.528,544,2.528,545,2.528,546,2.211,547,2.528,548,2.528,549,2.528,550,2.528,551,2.528,552,1.846,553,2.528,554,2.528,555,2.528,556,2.211,557,3.943,558,2.528,559,2.211]],["title/classes/EnvironmentVariables.html",[22,0.217,560,3.269]],["body/classes/EnvironmentVariables.html",[3,0.08,4,0.08,5,0.07,9,0.185,10,1.05,15,0.998,16,0.417,17,0.012,18,1.357,19,0.117,20,0.007,21,0.007,22,0.293,24,0.669,41,2.332,42,0.563,54,0.132,61,0.669,87,1.267,134,1.47,161,1.416,220,2.002,223,0.781,254,1.814,260,1.47,261,1.313,265,1.931,291,2.044,363,1.792,383,1.833,560,3.729,561,2.332,562,5.593,563,5.593,564,5.593,565,5.593,566,5.593,567,5.593,568,5.593,569,5.593,570,5.593,571,5.593,572,5.593,573,5.593,574,5.593,575,5.593,576,5.593,577,5.593,578,5.593,579,5.593,580,5.593,581,7.695,582,3.194,583,3.194,584,3.194,585,6.173,586,3.194,587,3.194,588,3.194,589,3.194,590,3.194,591,4.891,592,4.709,593,3.194,594,3.194,595,3.194,596,3.194,597,3.194,598,4.709,599,3.194,600,3.194,601,3.194,602,3.194,603,3.194,604,3.194,605,3.194,606,3.194,607,3.194,608,8.098,609,5.593,610,3.194,611,3.194,612,4.118,613,4.118,614,3.729,615,2.332,616,2.793,617,4.709,618,3.194,619,2.793,620,3.194,621,4.709,622,3.194,623,3.194,624,4.709,625,2.529,626,2.332,627,3.194,628,3.194,629,3.194,630,3.194,631,3.194,632,3.194,633,3.194,634,3.194,635,3.194,636,3.194,637,3.194]],["title/classes/HttpExceptionFilter.html",[22,0.217,638,3.269]],["body/classes/HttpExceptionFilter.html",[3,0.107,4,0.107,5,0.094,9,0.25,16,0.297,17,0.012,19,0.107,20,0.008,21,0.008,22,0.226,23,2.577,24,0.903,27,6.17,32,1.338,36,1.353,38,1.984,40,1.984,42,0.4,44,1.297,45,0.512,46,0.633,51,0.961,54,0.207,55,0.722,56,0.698,61,1.478,191,2.606,192,1.908,249,4.608,254,2.389,299,3.033,332,2.611,333,1.984,336,3.293,393,2.154,439,3.147,626,4.811,638,4.608,639,3.769,640,3.519,641,6.589,642,5.089,643,3.412,644,4.309,645,4.249,646,5.819,647,6.589,648,7.055,649,4.309,650,6.589,651,5.819,652,4.309,653,3.412,654,4.309,655,4.309,656,4.309,657,4.309,658,5.089,659,4.309,660,4.309,661,4.309,662,4.309,663,4.811,664,6.589,665,1.772,666,4.309,667,4.309,668,5.762,669,4.309,670,4.309,671,4.309,672,6.589,673,6.589,674,6.589,675,4.309,676,4.309,677,4.309,678,4.309,679,3.769,680,5.819,681,4.309,682,4.309,683,4.309,684,3.769,685,4.309,686,4.309]],["title/guards/JwtAuthGuard.html",[114,3.014,687,3.269]],["body/guards/JwtAuthGuard.html",[3,0.101,4,0.101,5,0.088,7,1.399,9,0.234,16,0.325,17,0.012,19,0.101,20,0.008,21,0.008,22,0.212,28,2.396,32,1.281,36,1.749,42,0.438,44,1.421,45,0.561,46,0.694,51,1.242,54,0.209,56,0.655,61,1.335,93,5.071,94,2.752,96,1.86,98,2.951,114,4.067,134,2.564,143,2.02,164,2.133,177,2.665,192,2.822,224,1.405,227,1.879,232,6.674,233,4.615,249,3.2,252,3.534,254,2.415,255,2.375,260,2.934,261,2.62,391,2.752,640,2.444,642,3.534,663,2.951,688,3.2,689,6.007,690,3.534,691,6.007,692,5.57,693,3.534,694,6.674,695,4.041,696,4.871,697,5.015,698,4.041,699,2.951,700,5.57,701,4.041,702,4.041,703,5.57,704,4.041,705,3.534,706,3.534,707,3.534,708,6.513,709,4.041,710,5.57,711,4.041,712,4.041,713,5.57,714,4.041,715,4.041,716,5.57,717,4.041,718,4.041,719,4.041,720,4.041,721,3.534,722,4.041,723,4.041]],["title/modules/Log4jsGlobalModule.html",[62,1.042,76,2.642]],["body/modules/Log4jsGlobalModule.html",[3,0.113,4,0.113,5,0.1,16,0.232,17,0.012,18,1.168,19,0.151,20,0.008,21,0.008,22,0.316,32,1.046,42,0.313,44,1.014,45,0.4,46,0.495,47,1.87,51,1.014,54,0.202,56,0.737,61,1.264,62,1.946,64,1.742,65,1.742,66,1.87,67,1.87,68,1.742,69,3.171,70,3.171,76,5.113,86,2.481,87,1.804,88,1.804,137,3.463,254,1.956,332,3.146,724,3.978,725,3.978,726,3.978,727,3.978,728,5.921,729,3.978,730,5.921,731,5.479,732,4.549,733,3.097,734,6.306,735,3.602,736,4.944,737,3.978,738,3.978,739,5.277,740,5.277,741,5.277,742,4.108,743,6.306,744,4.778]],["title/modules/Log4jsModule.html",[62,1.042,742,2.811]],["body/modules/Log4jsModule.html",[3,0.113,4,0.113,5,0.1,16,0.232,17,0.012,18,1.168,19,0.151,20,0.008,21,0.008,22,0.316,32,1.046,42,0.313,44,1.014,45,0.4,46,0.495,47,1.87,51,1.014,54,0.202,56,0.737,61,1.264,62,1.946,64,1.742,65,1.742,66,1.87,67,1.87,68,1.742,69,3.171,70,3.171,76,3.861,86,2.481,87,1.804,88,1.804,137,3.463,254,1.956,332,3.146,727,3.978,728,5.921,729,3.978,730,5.921,731,5.479,733,3.097,734,6.306,735,3.602,736,4.944,737,3.978,738,3.978,739,5.277,740,5.277,741,5.277,742,5.44,743,6.306,744,4.778,745,3.978,746,4.549,747,4.549,748,4.549]],["title/injectables/Log4jsService.html",[224,1.042,332,1.528]],["body/injectables/Log4jsService.html",[3,0.09,4,0.09,5,0.079,9,0.21,10,1.149,16,0.386,17,0.012,18,1.356,19,0.09,20,0.007,21,0.007,22,0.19,28,1.885,32,1.185,36,1.136,42,0.52,44,1.649,45,0.651,46,0.805,47,3.041,51,1.603,54,0.184,56,0.586,61,0.758,137,2.958,143,1.808,189,2.055,224,1.3,225,1.543,261,1.487,332,1.907,381,2.188,382,1.889,615,2.641,625,4.754,626,4.778,640,2.188,645,5.249,663,3.763,699,5.825,731,4.778,733,4.895,735,2.865,749,3.164,750,6.004,751,5.154,752,5.154,753,6.004,754,5.154,755,5.154,756,3.617,757,5.154,758,5.154,759,3.617,760,6.47,761,5.154,762,6.543,763,3.617,764,5.154,765,3.617,766,5.154,767,6.004,768,3.617,769,3.617,770,5.154,771,5.154,772,3.617,773,5.154,774,3.617,775,5.154,776,3.617,777,5.154,778,2.865,779,3.617,780,2.865,781,3.617,782,3.617,783,3.617,784,5.154,785,3.617,786,2.641,787,3.617,788,3.617,789,3.617,790,3.617,791,3.617,792,3.617,793,3.617,794,3.617]],["title/classes/MatchConstraint.html",[22,0.217,795,3.269]],["body/classes/MatchConstraint.html",[3,0.123,4,0.123,5,0.108,9,0.285,16,0.392,17,0.012,18,1.14,19,0.159,20,0.009,21,0.009,22,0.333,24,1.032,32,1.461,42,0.437,44,1.417,45,0.619,46,0.692,51,1.417,54,0.138,61,1.474,107,4.327,189,1.546,223,1.555,254,2.061,292,5.033,382,3.318,615,3.596,640,3.843,733,3.353,795,5.572,796,3.899,797,7.037,798,6.355,799,6.355,800,8.02,801,4.924,802,6.503,803,6.355,804,4.924,805,3.151,806,6.355,807,6.503,808,6.355,809,4.306,810,6.355,811,4.924,812,4.924,813,4.924,814,4.306,815,4.64,816,4.924,817,4.924,818,6.355,819,4.924,820,4.924,821,4.924]],["title/classes/MenuBodyRequest.html",[22,0.217,365,2.257]],["body/classes/MenuBodyRequest.html",[3,0.118,4,0.118,5,0.103,9,0.274,10,1.379,13,1.491,15,1.025,16,0.425,17,0.012,18,1.332,19,0.118,20,0.009,21,0.009,22,0.324,24,0.99,42,0.56,45,0.607,46,0.848,54,0.174,55,0.791,161,1.349,220,2.055,223,1.156,363,1.904,365,3.382,822,4.131,823,6.032,824,6.032,825,3.601,826,4.697,827,5.036,828,6.032,829,4.724,830,4.724,831,4.724,832,4.724,833,4.724,834,4.724,835,4.724,836,4.724,837,4.724,838,4.697,839,4.724,840,1.874,841,1.874,842,4.724,843,2.857]],["title/controllers/MenuController.html",[151,1.339,844,2.496]],["body/controllers/MenuController.html",[3,0.101,4,0.101,5,0.089,9,0.236,13,1.612,15,1.04,16,0.351,17,0.012,19,0.101,20,0.008,21,0.008,22,0.213,28,1.276,32,1.286,42,0.497,44,1.609,45,0.635,46,0.786,51,1.609,54,0.209,55,0.68,56,0.658,61,1.512,151,1.813,153,1.318,161,1.249,174,3.194,175,2.608,177,1.454,189,2.267,191,2.457,192,1.799,205,3.063,227,2.444,262,1.454,307,2,308,2.919,309,2.919,310,2,315,1.454,318,2.122,319,2.122,321,2.122,322,2.122,324,1.454,325,2.122,327,2.031,328,2.122,329,1.948,330,1.948,331,2.031,332,2.069,333,1.871,336,2.031,338,2.967,339,2.332,342,2.122,343,2.122,345,2.967,347,2.122,348,2.332,350,2.122,351,2.122,365,4.178,439,4.082,844,3.381,845,3.554,846,5.591,847,4.063,848,4.063,849,4.063,850,4.063,851,4.063,852,4.063,853,3.554,854,3.554,855,2.967,856,4.063,857,4.063,858,3.554,859,4.063,860,4.063,861,4.063,862,4.063]],["title/controllers/MenuController-1.html",[151,1.115,844,2.08,863,2.2]],["body/controllers/MenuController-1.html",[1,2.649,3,0.091,4,0.091,5,0.079,7,2.666,9,0.21,13,1.636,15,1.05,16,0.367,17,0.012,19,0.091,20,0.007,21,0.007,22,0.19,28,1.622,32,1.188,36,1.14,42,0.495,44,1.605,45,0.633,46,0.783,51,1.605,54,0.212,55,0.608,56,0.588,61,1.508,151,1.675,153,1.177,161,1.245,174,3.006,175,2.58,177,1.299,178,3.006,179,1.984,180,1.984,183,1.492,184,1.492,189,2.26,192,1.607,227,2.441,262,1.299,307,2.152,308,2.697,309,2.697,310,1.848,311,1.39,314,2.304,315,1.299,318,1.895,319,1.895,321,1.895,322,1.895,324,1.299,325,1.895,327,1.814,328,1.895,329,1.739,330,1.739,331,1.814,332,1.912,333,1.671,336,1.814,339,2.083,340,2.195,342,1.895,343,1.895,347,1.895,348,2.083,350,1.895,351,1.895,445,2.322,844,3.124,864,3.174,865,4.518,866,3.761,867,3.629,868,4.25,869,3.629,870,3.629,871,3.174,872,3.174,873,3.629,874,3.629,875,3.629,876,3.174,877,3.849,878,3.174,879,3.629,880,3.629,881,3.629,882,3.174,883,3.174,884,3.629,885,3.629,886,3.629,887,3.629]],["title/modules/MenuModule.html",[62,1.042,77,2.811]],["body/modules/MenuModule.html",[3,0.133,4,0.133,5,0.117,17,0.012,19,0.133,20,0.009,21,0.009,22,0.28,54,0.229,55,0.894,56,0.865,62,1.844,64,2.046,65,2.046,66,2.196,67,2.196,68,2.046,69,3.004,70,3.004,77,5.562,86,2.751,87,2.119,88,2.119,90,2.459,91,2.56,95,3.9,96,2.459,99,2.56,100,1.789,101,3.23,102,3.9,153,2.17,205,4.064,215,2.669,844,4.42,854,4.671,888,4.671,889,5.341,890,4.671,891,5.341,892,5.341]],["title/injectables/MenuService.html",[205,1.979,224,1.042]],["body/injectables/MenuService.html",[3,0.068,4,0.068,5,0.059,9,0.157,13,1.773,15,0.989,16,0.344,17,0.012,19,0.068,20,0.006,21,0.006,22,0.142,23,2.716,28,1.591,32,0.957,36,1.307,38,1.248,40,1.248,42,0.464,44,1.443,45,0.57,46,0.704,47,1.711,51,1.675,54,0.195,55,0.454,56,0.439,61,1.412,100,0.908,134,1.248,164,2.789,175,2.257,176,2.371,189,0.851,205,1.995,224,1.05,225,1.156,227,2.341,237,1.355,248,1.355,253,3.379,254,2.185,255,2.966,260,1.916,261,2.083,265,1.64,307,1.489,310,1.489,315,1.489,324,1.489,327,3.235,332,2.104,333,1.248,365,3.685,373,2.173,374,2.173,376,2.968,378,2.645,385,2.173,388,2.173,393,1.355,395,3.04,397,1.416,398,1.416,406,2.517,408,1.735,409,2.173,412,2.173,413,2.173,414,2.276,415,2.173,416,2.173,493,2.389,503,2.389,513,3.437,528,1.64,643,2.147,645,3.04,827,1.98,838,1.846,853,2.371,893,2.371,894,6.473,895,3.7,896,2.711,897,2.711,898,2.711,899,2.711,900,2.711,901,2.711,902,2.711,903,2.711,904,4.163,905,2.711,906,2.711,907,2.711,908,4.431,909,4.726,910,2.711,911,2.711,912,2.711,913,4.163,914,3.437,915,2.371,916,2.147,917,2.711,918,3.297,919,2.711,920,2.711,921,2.371,922,2.147,923,2.371,924,1.98,925,2.711,926,2.711,927,2.711,928,2.711,929,2.711,930,2.711,931,2.711,932,2.711,933,4.163,934,2.711,935,2.711,936,2.371]],["title/classes/OrderCategory.html",[22,0.217,937,2.257]],["body/classes/OrderCategory.html",[3,0.116,4,0.116,5,0.102,9,0.27,10,1.368,15,1.069,16,0.35,17,0.012,18,1.226,19,0.194,20,0.009,21,0.009,22,0.415,24,0.977,26,1.252,42,0.472,45,0.603,54,0.192,161,1.186,220,1.959,223,1.141,282,1.548,363,2.151,364,1.291,401,1.726,423,3.035,465,2.235,466,1.726,467,1.989,478,1.465,539,3.71,665,2.522,840,1.85,841,1.85,843,2.821,937,3.747,938,2.821,939,3.579,940,4.664,941,4.664,942,3.747,943,3.406,944,4.664,945,2.435,946,2.435,947,4.386,948,4.145,949,2.821,950,3.203,951,3.203,952,2.435,953,2.821,954,2.235,955,2.435,956,2.984,957,2.677,958,2.821,959,3.925,960,2.821,961,2.435]],["title/controllers/OrderController.html",[151,1.339,962,3.014]],["body/controllers/OrderController.html",[1,2.838,3,0.083,4,0.083,5,0.073,7,2.788,9,0.194,13,1.657,15,1.06,16,0.368,17,0.012,19,0.083,20,0.007,21,0.007,22,0.175,32,1.119,42,0.497,44,1.61,45,0.635,46,0.786,51,1.61,54,0.208,55,0.559,56,0.541,61,1.513,151,1.577,153,1.083,161,1.25,174,2.868,175,2.678,177,1.195,178,3.349,179,1.825,180,1.825,181,2.136,182,2.438,183,1.372,184,1.372,189,2.268,191,2.019,227,2.444,262,1.195,307,2.053,308,2.54,309,2.54,310,2.053,311,1.279,314,2.198,315,1.195,318,1.743,319,1.743,321,1.743,322,1.743,324,1.195,325,1.743,327,1.668,328,1.743,329,1.6,330,1.6,331,1.668,336,1.668,340,2.019,342,1.743,343,1.743,347,1.743,350,1.743,351,1.743,439,2.438,440,2.92,445,2.136,449,4.254,865,4.254,871,2.92,872,2.92,882,2.92,883,2.92,952,3.77,955,3.292,961,3.292,962,3.552,963,2.92,964,5.738,965,3.338,966,3.338,967,3.338,968,3.338,969,3.338,970,3.338,971,3.338,972,3.338,973,3.338,974,2.92,975,3.672,976,2.92,977,3.338,978,3.338,979,3.338,980,3.338,981,3.338,982,3.338,983,3.338,984,3.338,985,3.338]],["title/modules/OrderModule.html",[62,1.042,78,2.811]],["body/modules/OrderModule.html",[3,0.124,4,0.124,5,0.109,17,0.012,19,0.124,20,0.009,21,0.009,22,0.261,54,0.228,55,0.832,56,0.805,62,1.783,64,1.903,65,1.903,66,2.043,67,2.043,68,1.903,69,2.905,70,2.905,78,5.745,86,2.628,87,1.971,88,1.971,90,2.287,91,2.381,99,2.381,100,1.664,153,2.073,215,2.483,498,4.319,521,3.935,962,5.16,975,5.373,976,4.345,986,4.345,987,4.345,988,4.345,989,4.125,990,4.125,991,4.968,992,3.628,993,3.628,994,4.968]],["title/classes/OrderProduct.html",[22,0.217,942,2.257]],["body/classes/OrderProduct.html",[3,0.114,4,0.114,5,0.1,9,0.265,10,1.349,15,1.091,16,0.368,17,0.012,18,1.17,19,0.193,20,0.008,21,0.008,22,0.413,24,0.957,26,1.226,42,0.497,45,0.402,54,0.19,161,1.25,220,1.896,223,1.117,282,1.527,363,2.181,364,1.265,401,2.511,423,2.023,465,3.252,466,2.511,467,2.893,478,1.434,539,3.659,665,2.487,840,1.812,841,1.812,843,2.762,937,3.308,938,2.762,939,2.385,942,3.709,945,2.385,946,2.385,947,4.341,948,4.103,949,2.762,950,3.159,951,3.159,952,2.385,953,2.762,954,2.189,955,2.385,956,2.923,957,2.622,958,2.762,959,3.871,960,2.762,961,2.385,995,4.568,996,4.568,997,4.568,998,4.568]],["title/classes/OrderQuery.html",[22,0.217,961,2.155]],["body/classes/OrderQuery.html",[3,0.113,4,0.113,5,0.1,9,0.264,10,1.345,15,1.075,16,0.345,17,0.012,18,1.168,19,0.192,20,0.008,21,0.008,22,0.413,24,0.953,26,1.62,42,0.466,45,0.4,46,0.839,54,0.19,161,1.172,220,1.893,223,1.113,282,1.946,284,2.233,285,2.233,286,3.384,289,2.375,359,3.701,360,2.487,361,2.487,362,2.487,363,2.125,364,1.259,401,1.683,423,2.014,465,2.18,466,1.683,467,1.94,478,1.428,539,3.649,665,2.481,840,1.804,841,1.804,843,2.751,937,3.299,938,2.751,939,2.375,942,3.299,945,2.375,946,2.375,947,4.332,948,4.094,949,2.751,950,3.15,951,3.15,952,2.375,953,2.751,954,2.18,955,2.375,956,2.911,957,2.611,958,2.751,959,3.861,960,2.751,961,3.15]],["title/classes/OrderRequest.html",[22,0.217,952,2.155]],["body/classes/OrderRequest.html",[3,0.112,4,0.112,5,0.098,9,0.26,10,1.332,15,1.072,16,0.381,17,0.012,18,1.244,19,0.192,20,0.008,21,0.008,22,0.411,24,0.939,26,1.204,42,0.514,45,0.395,46,0.78,54,0.189,161,1.241,220,1.978,223,1.097,282,1.508,363,2.137,364,1.242,401,1.659,423,1.986,465,2.149,466,1.659,467,1.912,478,2.111,539,4.336,665,2.457,840,1.779,841,1.779,843,2.712,937,3.675,938,2.712,939,2.341,942,3.267,943,3.274,945,2.341,946,2.341,947,4.302,948,4.065,949,2.712,950,3.12,951,3.12,952,3.12,953,4.065,954,3.222,955,2.341,956,2.869,957,2.574,958,2.712,959,3.824,960,2.712,961,2.341,999,4.484,1000,4.484,1001,4.484,1002,4.484,1003,4.484]],["title/injectables/OrderService.html",[224,1.042,975,2.642]],["body/injectables/OrderService.html",[1,2.128,3,0.049,4,0.049,5,0.043,7,2.059,9,0.114,11,1.132,13,1.566,15,0.985,16,0.346,17,0.012,19,0.049,20,0.005,21,0.005,22,0.103,23,1.819,28,1.769,32,0.744,36,1.015,38,0.908,40,0.908,41,1.44,42,0.455,44,1.475,45,0.609,46,0.72,47,1.689,51,1.433,54,0.198,55,0.33,56,0.32,61,1.42,96,0.908,100,0.661,134,2.414,143,0.986,164,2.738,173,1.132,175,2.395,177,1.876,183,0.811,184,0.811,189,1.29,224,0.816,225,0.841,227,2.334,237,2.053,248,0.986,253,1.03,254,2.557,255,3.192,260,1.891,261,2.156,265,1.955,276,1.44,284,0.73,285,0.73,299,1.489,307,1.157,310,1.157,311,0.756,314,1.238,315,1.157,324,1.157,373,1.688,374,2.941,376,3.454,378,2.145,381,1.193,382,1.03,383,1.856,385,1.688,388,1.688,391,1.343,392,1.44,393,0.986,397,1.03,398,1.03,400,1.768,401,1.52,402,1.078,403,1.078,404,1.078,405,1.132,406,2.485,408,1.262,409,2.738,412,1.03,413,1.03,415,1.03,416,1.688,423,1.819,442,3.597,465,1.55,466,0.73,467,0.841,493,1.856,503,1.856,513,3.407,515,2.361,516,1.44,519,1.132,520,1.262,525,1.262,526,1.262,527,4.586,528,2.873,533,1.44,535,3.04,552,2.361,556,1.725,559,1.725,665,1.329,684,1.725,826,4.614,895,2.361,914,1.955,937,2.867,942,2.246,948,1.193,949,1.193,952,3.454,953,1.955,954,2.7,955,2.481,958,1.955,960,2.485,961,2.481,974,1.725,975,2.069,1004,1.725,1005,4.108,1006,2.828,1007,2.828,1008,1.725,1009,4.108,1010,4.108,1011,1.973,1012,1.973,1013,1.973,1014,1.973,1015,1.973,1016,1.973,1017,2.828,1018,1.973,1019,1.973,1020,1.973,1021,2.828,1022,5.244,1023,1.973,1024,1.973,1025,1.973,1026,1.973,1027,1.973,1028,3.233,1029,1.973,1030,1.973,1031,1.973,1032,1.973,1033,1.973,1034,3.233,1035,1.973,1036,1.973,1037,1.973,1038,5.244,1039,2.828,1040,1.973,1041,1.725,1042,1.725,1043,1.725,1044,1.725,1045,1.725,1046,1.973,1047,2.828,1048,1.725,1049,1.973,1050,1.973,1051,1.725,1052,3.233,1053,1.973,1054,1.973,1055,4.108,1056,1.973,1057,4.752,1058,1.973,1059,3.233,1060,1.725,1061,1.725,1062,2.828,1063,1.973,1064,1.725,1065,1.973,1066,1.725,1067,1.973,1068,1.725,1069,1.725,1070,1.973,1071,2.828,1072,1.973,1073,1.725,1074,2.828,1075,3.233,1076,2.828,1077,1.725,1078,1.973,1079,1.973,1080,1.973,1081,1.973,1082,1.973,1083,1.725,1084,1.973,1085,3.233,1086,1.973,1087,1.973,1088,1.973,1089,1.973,1090,1.973,1091,1.973]],["title/classes/OrderStatusRequest.html",[22,0.217,955,2.155]],["body/classes/OrderStatusRequest.html",[3,0.121,4,0.121,5,0.106,9,0.281,10,1.403,15,1.066,16,0.247,17,0.012,18,1.197,19,0.196,20,0.009,21,0.009,22,0.419,24,1.016,26,1.301,42,0.334,45,0.427,46,0.685,54,0.196,161,0.839,220,1.933,223,1.186,282,1.587,363,2.149,364,1.342,401,1.794,423,2.147,465,2.324,466,1.794,467,2.068,478,1.523,539,3.805,665,3.039,840,1.923,841,1.923,843,2.932,937,3.44,938,2.932,939,2.531,942,3.44,945,2.531,946,2.531,947,4.469,948,4.47,949,2.932,950,3.285,951,3.285,952,2.531,953,2.932,954,2.324,955,3.285,956,3.102,957,2.783,958,2.932,959,4.026,960,2.932,961,2.531,1092,4.848,1093,4.848]],["title/classes/OrderWhere.html",[22,0.217,957,2.37]],["body/classes/OrderWhere.html",[3,0.11,4,0.11,5,0.096,9,0.255,10,1.316,15,1.057,16,0.379,17,0.012,18,1.202,19,0.191,20,0.008,21,0.008,22,0.409,24,0.923,26,1.182,42,0.511,45,0.387,46,0.883,54,0.187,161,1.284,220,1.928,223,1.077,282,1.49,363,2.146,364,1.219,401,1.63,423,1.95,465,2.111,466,1.63,467,1.878,478,1.383,539,4.304,665,2.926,840,1.747,841,1.747,843,2.663,937,3.228,938,2.663,939,2.299,942,3.228,945,2.299,946,2.299,947,4.75,948,4.304,949,2.663,950,3.083,951,3.083,952,2.299,953,2.663,954,2.111,955,2.299,956,2.818,957,3.389,958,4.029,959,4.555,960,4.029,961,2.299,1094,4.404,1095,4.404,1096,4.404,1097,4.404,1098,4.404]],["title/classes/ProductBodyRequest.html",[22,0.217,1099,2.642]],["body/classes/ProductBodyRequest.html",[3,0.119,4,0.119,5,0.104,9,0.277,10,1.389,13,1.498,15,1.084,16,0.412,17,0.012,18,1.266,19,0.155,20,0.009,21,0.009,22,0.364,24,1,26,1.282,42,0.555,45,0.61,46,0.678,54,0.175,161,1.378,220,2.009,223,1.168,282,1.572,363,2.124,364,1.322,466,2.566,478,2.177,825,3.62,840,1.894,841,1.894,1099,3.986,1100,3.781,1101,5.491,1102,6.064,1103,5.491,1104,4.775,1105,4.775,1106,4.775,1107,4.775,1108,4.775,1109,4.775,1110,4.775,1111,4.775,1112,3.055]],["title/controllers/ProductCategoryController.html",[151,1.339,1113,3.014]],["body/controllers/ProductCategoryController.html",[1,2.687,3,0.095,4,0.095,5,0.083,7,2.696,9,0.221,13,1.58,15,1.025,16,0.36,17,0.012,19,0.095,20,0.007,21,0.007,22,0.2,28,1.679,32,1.23,36,1.197,42,0.485,44,1.572,45,0.621,46,0.767,51,1.572,54,0.215,55,0.638,56,0.617,61,1.477,151,1.734,153,1.236,161,1.22,174,3.087,175,2.609,177,1.364,178,3.087,179,2.083,180,2.083,183,1.567,184,1.567,189,2.215,192,1.688,227,2.422,262,1.364,307,2.21,308,2.792,309,2.792,310,1.913,311,1.46,314,2.565,315,1.364,318,1.99,319,1.99,321,1.99,322,1.99,324,1.364,325,1.99,327,1.905,328,1.99,329,1.827,330,1.827,331,1.905,332,1.979,333,1.755,336,1.905,339,2.187,342,1.99,343,1.99,347,1.99,348,2.187,350,1.99,351,1.99,445,2.439,989,3.225,1113,3.904,1114,3.333,1115,4.285,1116,3.811,1117,4.805,1118,3.811,1119,3.811,1120,3.811,1121,3.811,1122,3.333,1123,3.333,1124,3.811,1125,3.811,1126,3.811,1127,3.811,1128,3.811,1129,3.811]],["title/modules/ProductCategoryModule.html",[62,1.042,79,2.811]],["body/modules/ProductCategoryModule.html",[3,0.137,4,0.137,5,0.12,17,0.012,19,0.137,20,0.01,21,0.01,22,0.287,54,0.223,55,0.917,56,0.887,62,1.864,64,2.096,65,2.096,66,2.25,67,2.25,68,2.096,69,3.038,70,3.038,79,5.591,86,2.793,87,2.171,88,2.171,90,2.52,91,2.623,99,2.623,100,1.833,153,2.203,215,2.735,989,4.441,1113,5.396,1123,4.787,1130,4.787,1131,4.787,1132,5.473,1133,5.473,1134,5.473]],["title/classes/ProductCategoryQuery.html",[22,0.217,1115,2.642]],["body/classes/ProductCategoryQuery.html",[3,0.132,4,0.132,5,0.116,9,0.307,10,1.483,15,0.875,16,0.371,17,0.012,18,1.179,19,0.166,20,0.009,21,0.009,22,0.382,24,1.108,26,1.785,42,0.501,45,0.465,46,0.874,54,0.204,55,0.886,161,1.259,220,1.926,223,1.294,282,2.026,284,2.462,285,2.462,286,3.636,289,2.762,359,3.978,360,2.892,361,2.892,362,2.892,363,1.377,364,1.465,478,1.661,825,2.762,838,3.602,840,2.098,841,2.098,1115,4.256,1117,3.385,1135,4.189,1136,4.189]],["title/classes/ProductCategoryRequest.html",[22,0.217,1117,2.642]],["body/classes/ProductCategoryRequest.html",[3,0.136,4,0.136,5,0.119,9,0.316,10,1.51,16,0.376,17,0.012,18,1.31,19,0.169,20,0.009,21,0.009,22,0.387,24,1.141,26,1.462,42,0.507,45,0.649,54,0.207,55,0.912,161,1.276,220,2.07,223,1.332,282,1.709,363,1.417,364,1.508,478,2.315,825,3.85,838,3.708,840,2.16,841,2.16,1115,3.485,1117,4.335,1135,4.313,1136,4.313,1137,5.446,1138,5.446,1139,5.446]],["title/injectables/ProductCategoryService.html",[224,1.042,989,2.155]],["body/injectables/ProductCategoryService.html",[1,2.519,3,0.077,4,0.077,5,0.067,7,2.437,9,0.179,11,1.769,13,1.626,15,1.017,16,0.369,17,0.012,19,0.077,20,0.006,21,0.006,22,0.162,23,2.031,28,1.44,32,1.055,36,1.44,38,1.419,40,1.419,42,0.484,44,1.57,45,0.662,46,0.766,47,2.494,51,1.516,54,0.214,55,0.516,56,0.499,61,1.475,96,1.419,100,1.032,143,1.54,164,2.882,173,1.769,175,2.358,177,2.32,183,1.267,184,1.267,189,0.968,224,1.157,225,1.314,227,2.388,237,2.737,248,1.54,253,2.395,254,2.346,255,2.899,260,1.419,261,1.885,284,1.141,285,1.141,299,2.522,307,1.96,310,1.96,311,1.181,314,1.757,315,1.103,324,1.103,332,1.141,333,1.419,373,2.395,374,2.395,375,2.099,376,3.167,378,2.395,385,2.395,388,2.395,393,1.54,397,1.609,398,1.609,400,2.507,401,1.697,402,1.685,403,1.685,404,1.685,405,1.769,409,3.167,412,1.609,413,1.609,414,1.685,415,1.609,416,1.609,493,3.144,503,1.769,513,1.864,515,3.349,519,1.769,520,1.972,525,1.972,526,1.972,528,2.774,535,4.15,989,2.395,1115,3.882,1117,4.505,1122,2.696,1140,2.696,1141,3.082,1142,3.082,1143,3.082,1144,3.082,1145,3.082,1146,3.082,1147,3.082,1148,3.082,1149,3.082,1150,3.082,1151,2.251,1152,3.082,1153,2.251,1154,2.251,1155,4.586,1156,3.082,1157,3.082]],["title/controllers/ProductController.html",[151,1.339,1158,3.014]],["body/controllers/ProductController.html",[1,2.688,3,0.095,4,0.095,5,0.084,7,2.697,9,0.221,13,1.581,15,1.025,16,0.36,17,0.012,19,0.095,20,0.007,21,0.007,22,0.2,28,1.681,32,1.231,36,1.199,42,0.486,44,1.573,45,0.621,46,0.768,51,1.573,54,0.215,55,0.639,56,0.618,61,1.478,151,1.736,153,1.238,161,1.221,174,3.09,175,2.61,177,1.366,178,3.09,179,2.087,180,2.087,183,1.569,184,1.569,189,2.216,192,1.691,227,2.423,262,1.366,307,2.212,308,2.795,309,2.795,310,1.916,311,1.462,314,2.368,315,1.366,318,1.993,319,1.993,321,1.993,322,1.993,324,1.366,325,1.993,327,1.908,328,1.993,329,1.83,330,1.83,331,1.908,332,1.981,333,1.758,336,1.908,339,2.191,340,2.309,342,1.993,343,1.993,347,1.993,348,2.191,350,1.993,351,1.993,423,1.691,445,2.443,498,3.38,1099,4.807,1112,4.288,1158,3.909,1159,3.339,1160,3.817,1161,3.817,1162,3.817,1163,3.817,1164,3.817,1165,3.339,1166,3.339,1167,3.817,1168,3.817,1169,3.817,1170,3.817,1171,3.817]],["title/modules/ProductModule.html",[62,1.042,80,2.642]],["body/modules/ProductModule.html",[3,0.128,4,0.128,5,0.112,17,0.012,19,0.128,20,0.009,21,0.009,22,0.27,54,0.227,55,0.861,56,0.833,62,1.812,64,1.969,65,1.969,66,2.114,67,2.114,68,1.969,69,2.952,70,2.952,80,5.37,86,2.686,87,2.04,88,2.04,90,2.367,91,2.464,99,2.464,100,1.722,153,2.119,215,2.57,498,4.612,989,4.162,990,4.162,992,3.755,993,3.755,1158,5.244,1166,4.497,1172,4.497,1173,4.497,1174,5.142,1175,5.142,1176,5.142]],["title/classes/ProductQuery.html",[22,0.217,1112,2.642]],["body/classes/ProductQuery.html",[3,0.129,4,0.129,5,0.114,9,0.301,10,1.465,13,1.122,15,1.068,16,0.368,17,0.012,18,1.168,19,0.164,20,0.009,21,0.009,22,0.378,24,1.087,26,1.764,42,0.496,45,0.457,46,0.87,54,0.184,161,1.248,220,1.913,223,1.27,282,2.016,284,2.432,285,2.432,286,3.605,289,2.71,359,3.943,360,2.837,361,2.837,362,2.837,363,2.036,364,1.437,466,1.921,478,1.63,825,2.71,840,2.059,841,2.059,1099,3.321,1100,4.11,1101,4.11,1102,4.539,1103,4.11,1112,4.206]],["title/injectables/ProductService.html",[224,1.042,498,2.257]],["body/injectables/ProductService.html",[1,2.372,3,0.065,4,0.065,5,0.057,7,2.295,9,0.15,11,2.307,13,1.554,15,0.978,16,0.349,17,0.012,19,0.065,20,0.006,21,0.006,22,0.136,23,2.66,28,1.886,32,0.924,36,1.262,38,1.193,40,1.193,42,0.456,44,1.478,45,0.633,46,0.721,47,2.024,51,1.417,54,0.211,55,0.434,56,0.42,61,1.389,96,1.193,100,0.868,134,1.85,143,1.295,164,2.754,173,2.307,175,2.128,177,2.149,183,1.065,184,1.065,189,0.813,224,1.014,225,1.105,227,2.323,237,2.461,248,1.295,253,2.098,254,2.411,255,3.067,260,2.554,261,2.469,276,1.892,284,0.959,285,0.959,299,1.85,307,1.762,310,1.438,311,0.992,314,1.539,315,0.927,324,1.438,332,2.053,333,1.193,373,2.098,374,2.098,376,2.897,378,2.571,383,1.487,385,2.098,388,2.098,393,1.295,397,1.353,398,1.353,400,2.197,401,1.487,402,1.416,403,1.416,404,1.416,405,1.487,406,1.567,407,1.764,409,2.098,412,2.571,413,2.897,414,3.033,415,2.897,416,2.897,493,2.307,498,2.197,503,2.307,516,2.935,519,1.487,520,1.658,523,2.265,525,1.658,526,1.658,533,4.841,535,4.601,552,2.935,643,2.051,645,2.935,914,2.978,918,2.051,922,2.051,924,1.892,989,3.462,990,3.462,992,1.892,993,1.892,1073,2.265,1099,4.242,1101,3.183,1103,2.051,1112,3.55,1151,1.892,1153,2.935,1154,1.892,1165,2.265,1177,2.265,1178,2.59,1179,2.59,1180,2.59,1181,2.59,1182,2.59,1183,2.59,1184,2.59,1185,4.019,1186,4.019,1187,2.265,1188,2.59,1189,2.59,1190,2.59,1191,2.59,1192,2.59,1193,2.59,1194,2.59,1195,2.59,1196,2.59,1197,2.59,1198,2.59,1199,2.59,1200,2.051,1201,2.59,1202,2.59,1203,2.59,1204,2.59,1205,2.59,1206,2.051]],["title/classes/ProductUnitBodyRequest.html",[22,0.217,1207,2.642]],["body/classes/ProductUnitBodyRequest.html",[3,0.134,4,0.134,5,0.117,9,0.311,10,1.496,13,1.583,15,0.883,16,0.391,17,0.012,18,1.306,19,0.167,20,0.009,21,0.009,22,0.384,24,1.124,26,1.441,42,0.528,45,0.645,46,0.73,54,0.188,161,1.267,220,2.063,223,1.313,282,1.694,363,1.397,364,1.486,478,2.3,825,3.824,840,2.129,841,2.129,1207,4.295,1208,4.25,1209,5.367,1210,5.367,1211,5.367,1212,5.367,1213,3.434]],["title/controllers/ProductUnitController.html",[151,1.339,1214,3.014]],["body/controllers/ProductUnitController.html",[1,2.687,3,0.095,4,0.095,5,0.083,7,2.696,9,0.221,13,1.58,15,1.025,16,0.36,17,0.012,19,0.095,20,0.007,21,0.007,22,0.2,28,1.679,32,1.23,36,1.197,42,0.485,44,1.572,45,0.621,46,0.767,51,1.572,54,0.215,55,0.638,56,0.617,61,1.477,151,1.734,153,1.236,161,1.22,174,3.087,175,2.609,177,1.364,178,3.087,179,2.083,180,2.083,183,1.567,184,1.567,189,2.215,192,1.688,227,2.422,262,1.364,307,2.21,308,2.792,309,2.792,310,1.913,311,1.46,314,2.565,315,1.364,318,1.99,319,1.99,321,1.99,322,1.99,324,1.364,325,1.99,327,1.905,328,1.99,329,1.827,330,1.827,331,1.905,332,1.979,333,1.755,336,1.905,339,2.187,342,1.99,343,1.99,347,1.99,348,2.187,350,1.99,351,1.99,445,2.439,990,3.225,1207,4.805,1213,4.285,1214,3.904,1215,3.333,1216,3.811,1217,3.811,1218,3.811,1219,3.811,1220,3.811,1221,3.333,1222,3.333,1223,3.811,1224,3.811,1225,3.811,1226,3.811,1227,3.811,1228,3.811]],["title/modules/ProductUnitModule.html",[62,1.042,81,2.811]],["body/modules/ProductUnitModule.html",[3,0.137,4,0.137,5,0.12,17,0.012,19,0.137,20,0.01,21,0.01,22,0.287,54,0.223,55,0.917,56,0.887,62,1.864,64,2.096,65,2.096,66,2.25,67,2.25,68,2.096,69,3.038,70,3.038,81,5.591,86,2.793,87,2.171,88,2.171,90,2.52,91,2.623,99,2.623,100,1.833,153,2.203,215,2.735,990,4.441,1214,5.396,1222,4.787,1229,4.787,1230,4.787,1231,5.473,1232,5.473,1233,5.473]],["title/classes/ProductUnitQuery.html",[22,0.217,1213,2.642]],["body/classes/ProductUnitQuery.html",[3,0.133,4,0.133,5,0.117,9,0.309,10,1.49,13,1.152,15,0.961,16,0.372,17,0.012,18,1.183,19,0.167,20,0.009,21,0.009,22,0.383,24,1.116,26,1.794,42,0.502,45,0.469,46,0.875,54,0.187,161,1.263,220,1.931,223,1.303,282,2.03,284,2.473,285,2.473,286,3.648,289,2.782,359,3.991,360,2.913,361,2.913,362,2.913,363,1.386,364,1.475,478,1.673,825,2.782,840,2.113,841,2.113,1207,3.409,1208,4.219,1213,4.276]],["title/injectables/ProductUnitService.html",[224,1.042,990,2.155]],["body/injectables/ProductUnitService.html",[1,2.516,3,0.077,4,0.077,5,0.067,7,2.433,9,0.178,11,1.762,13,1.596,15,1.016,16,0.368,17,0.012,19,0.077,20,0.006,21,0.006,22,0.161,23,2.025,28,1.436,32,1.051,36,1.436,38,1.413,40,1.413,42,0.484,44,1.568,45,0.661,46,0.765,47,2.489,51,1.513,54,0.214,55,0.514,56,0.497,61,1.473,96,1.413,100,1.028,143,1.534,164,2.879,173,1.762,175,2.273,177,2.316,183,1.262,184,1.262,189,0.964,224,1.154,225,1.309,227,2.386,237,2.731,248,1.534,253,2.387,254,2.343,255,2.895,260,1.413,261,1.88,284,1.136,285,1.136,299,2.105,307,1.955,310,1.955,311,1.176,314,1.751,315,1.098,324,1.098,332,1.136,333,1.413,373,2.387,374,2.387,375,2.09,376,3.161,378,2.387,385,2.387,388,2.387,393,1.534,397,1.603,398,1.603,400,2.5,401,1.692,402,1.678,403,1.678,404,1.678,405,1.762,409,3.161,412,1.603,413,1.603,414,1.678,415,1.603,416,1.603,493,2.624,503,2.624,513,1.856,518,3.999,519,1.762,520,1.964,525,1.964,526,1.964,528,2.765,535,3.496,914,3.304,918,3.621,921,2.684,922,2.431,923,2.684,924,2.241,936,2.684,990,2.387,1151,2.241,1153,2.241,1154,2.241,1187,2.684,1200,2.431,1207,4.499,1213,3.874,1221,2.684,1234,2.684,1235,3.069,1236,3.069,1237,3.069,1238,3.069,1239,3.069,1240,3.069,1241,3.069,1242,3.069,1243,3.069,1244,3.069]],["title/modules/RedisModule.html",[62,1.042,82,2.811]],["body/modules/RedisModule.html",[3,0.115,4,0.115,5,0.101,16,0.235,17,0.012,18,1.105,19,0.115,20,0.009,21,0.009,22,0.242,32,1.061,42,0.318,44,1.029,45,0.406,46,0.502,47,1.897,51,1.029,54,0.217,56,0.748,61,1.276,62,1.721,64,1.768,65,1.768,66,1.897,67,1.897,68,1.768,69,2.803,70,2.803,82,5.377,86,2.504,87,1.831,88,1.831,90,2.125,92,5.328,93,4.938,94,3.143,96,2.125,136,4.036,137,3.497,143,2.307,149,4.036,164,2.333,191,2.791,192,2.044,227,2.01,233,5.023,254,1.497,261,2.504,640,2.791,1245,4.036,1246,4.036,1247,4.036,1248,4.615,1249,6.819,1250,6.092,1251,4.615,1252,4.615,1253,5.328,1254,3.655,1255,4.615,1256,6.819,1257,4.448,1258,4.036,1259,4.615,1260,4.615,1261,4.615,1262,4.615,1263,4.615,1264,4.615,1265,4.615]],["title/injectables/RedisService.html",[224,1.042,233,2.496]],["body/injectables/RedisService.html",[3,0.103,4,0.103,5,0.091,9,0.24,15,0.849,16,0.383,17,0.012,18,1.363,19,0.103,20,0.008,21,0.008,22,0.217,28,1.3,32,1.302,36,1.778,42,0.516,44,1.673,45,0.66,46,0.816,51,1.62,54,0.181,56,0.671,61,1.352,107,3.856,143,2.069,164,3.073,192,1.833,224,1.429,225,1.765,227,2.45,233,3.424,254,1.342,255,2.959,329,2.714,382,4.083,1253,6.068,1254,3.278,1257,3.023,1258,3.62,1266,3.62,1267,5.662,1268,5.662,1269,4.14,1270,4.14,1271,5.662,1272,5.662,1273,4.14,1274,6.068,1275,5.662,1276,6.939,1277,4.14,1278,5.662,1279,4.14,1280,4.14,1281,5.662,1282,4.14,1283,5.662,1284,4.14,1285,4.14,1286,4.14,1287,4.14,1288,5.662,1289,4.14,1290,5.662]],["title/classes/ResponseInterceptor.html",[22,0.217,1291,3.269]],["body/classes/ResponseInterceptor.html",[3,0.131,4,0.131,5,0.115,9,0.304,16,0.268,17,0.012,19,0.131,20,0.009,21,0.009,22,0.275,24,1.1,32,1.523,38,2.418,42,0.361,44,1.171,45,0.462,46,0.572,51,1.171,54,0.203,55,0.879,56,0.851,61,1.387,164,2.536,254,1.703,299,2.418,625,4.159,626,3.835,640,4.004,653,4.159,658,6.342,668,4.593,697,5.56,699,4.835,802,4.593,1291,5.244,1292,4.593,1293,7.252,1294,7.252,1295,5.252,1296,7.615,1297,5.252,1298,7.252,1299,5.252,1300,5.252,1301,5.252,1302,5.252,1303,5.252,1304,5.252,1305,5.252]],["title/controllers/RoleController.html",[151,1.339,1306,3.014]],["body/controllers/RoleController.html",[3,0.095,4,0.095,5,0.083,9,0.22,13,1.654,15,1.058,16,0.372,17,0.012,19,0.095,20,0.007,21,0.007,22,0.199,28,1.673,32,1.225,36,1.191,42,0.502,44,1.628,45,0.642,46,0.794,51,1.628,54,0.21,55,0.635,56,0.614,61,1.529,151,1.728,153,1.229,161,1.263,174,3.078,175,2.564,177,1.357,181,2.426,182,2.768,189,2.292,192,1.679,206,3.078,227,2.455,262,1.357,307,1.906,308,2.782,309,2.782,310,1.906,311,1.452,314,2.359,315,1.357,318,1.979,319,1.979,321,1.979,322,1.979,324,1.357,325,1.979,327,1.895,328,1.979,329,1.817,330,2.554,331,1.895,332,1.972,333,1.745,336,1.895,338,2.768,339,2.176,340,2.293,341,3.316,342,1.979,343,1.979,344,3.316,345,2.768,346,3.316,347,1.979,348,2.176,349,3.316,350,1.979,351,1.979,352,3.316,1306,3.89,1307,3.316,1308,5.328,1309,4.275,1310,3.791,1311,4.798,1312,3.791,1313,3.791,1314,3.791,1315,3.791,1316,3.791,1317,3.791,1318,3.791,1319,3.316,1320,3.316,1321,3.791,1322,3.791,1323,3.791]],["title/modules/RoleModule.html",[62,1.042,83,2.811]],["body/modules/RoleModule.html",[3,0.129,4,0.129,5,0.113,17,0.012,19,0.129,20,0.009,21,0.009,22,0.27,54,0.23,55,0.863,56,0.835,62,1.814,64,1.974,65,1.974,66,2.119,67,2.119,68,1.974,69,2.956,70,2.956,83,5.637,86,2.69,87,2.044,88,2.044,90,2.373,91,2.47,95,3.763,96,2.373,99,2.47,100,1.726,101,3.117,102,3.763,153,2.122,205,3.823,206,4.218,209,3.509,215,2.576,1306,5.25,1320,4.507,1324,4.507,1325,4.507,1326,5.154,1327,5.154,1328,5.154]],["title/classes/RoleQuery.html",[22,0.217,1309,2.642]],["body/classes/RoleQuery.html",[3,0.13,4,0.13,5,0.114,9,0.303,10,1.472,15,1.031,16,0.369,17,0.012,18,1.172,19,0.165,20,0.009,21,0.009,22,0.38,24,1.095,26,1.772,42,0.498,45,0.46,46,0.871,54,0.203,161,1.252,220,1.918,223,1.279,282,2.02,284,2.443,285,2.443,286,3.617,289,2.729,359,3.956,360,2.858,361,2.858,362,2.858,363,1.883,364,1.447,365,2.858,366,3.817,478,1.641,665,2.149,825,2.729,826,3.559,855,3.817,1309,4.225,1311,3.345,1329,4.139]],["title/classes/RoleRequest.html",[22,0.217,1311,2.642]],["body/classes/RoleRequest.html",[3,0.125,4,0.125,5,0.11,9,0.291,10,1.435,15,1.043,16,0.404,17,0.012,18,1.284,19,0.161,20,0.009,21,0.009,22,0.373,24,1.053,26,1.349,42,0.545,45,0.625,46,0.701,54,0.199,161,1.34,220,2.033,223,1.229,282,1.624,363,2.016,364,1.391,365,2.747,366,3.669,478,2.231,665,2.921,825,3.709,826,4.838,855,5.188,1309,3.215,1311,4.12,1329,3.979,1330,5.025,1331,5.025,1332,5.025,1333,5.025,1334,5.025,1335,5.025]],["title/injectables/RoleService.html",[206,2.063,224,1.042]],["body/injectables/RoleService.html",[3,0.06,4,0.06,5,0.053,9,0.14,13,1.623,15,1.038,16,0.36,17,0.012,19,0.06,20,0.005,21,0.005,22,0.127,23,2.366,28,1.196,32,0.876,36,1.196,38,1.113,40,1.113,42,0.485,44,1.572,45,0.62,46,0.767,47,0.994,51,1.536,54,0.198,55,0.405,56,0.392,61,1.553,100,0.81,134,2.46,164,2.7,175,2.068,189,0.759,205,3.097,206,1.903,209,1.646,224,0.961,225,1.031,227,2.295,247,3.015,248,1.208,253,1.988,254,2.404,255,2.937,260,2.169,261,2.39,262,2.08,265,3.232,267,3.33,284,0.895,285,0.895,299,2.676,307,1.362,310,1.362,311,0.926,314,1.458,315,1.362,324,1.362,373,2.459,374,1.988,375,1.646,376,2.79,378,1.988,379,4.119,381,2.848,382,2.459,383,3.709,385,1.262,386,4.889,388,1.988,391,1.646,392,1.765,393,1.208,395,5.148,396,4.119,397,1.262,398,1.262,400,2.081,401,1.409,402,1.322,403,1.322,404,1.322,405,1.388,406,1.462,407,1.646,408,1.547,409,2.459,412,2.459,413,2.459,414,2.575,415,2.459,416,2.459,417,3.33,418,2.114,419,3.33,420,2.114,546,2.114,760,2.114,805,1.547,827,3.439,855,4.888,858,2.114,863,1.547,909,1.765,914,1.462,915,2.114,916,1.914,1136,1.914,1274,3.33,1309,3.419,1311,4.134,1319,2.114,1336,2.114,1337,3.807,1338,3.807,1339,3.807,1340,3.807,1341,2.417,1342,2.417,1343,2.417,1344,2.417,1345,3.807,1346,2.417,1347,3.807,1348,5.344,1349,2.417,1350,2.417,1351,3.807,1352,2.417,1353,3.807,1354,5.344,1355,2.417,1356,2.417,1357,2.417,1358,2.417,1359,2.417,1360,2.417,1361,2.417,1362,2.417,1363,2.417,1364,2.417,1365,2.417,1366,2.417,1367,2.417,1368,2.417,1369,2.417,1370,2.417,1371,2.417,1372,2.417,1373,2.417,1374,3.807,1375,3.807,1376,2.417,1377,2.417,1378,3.807,1379,3.807]],["title/guards/RolesGuard.html",[101,2.496,687,3.269]],["body/guards/RolesGuard.html",[3,0.118,4,0.118,5,0.103,7,1.635,9,0.274,16,0.315,17,0.012,19,0.118,20,0.009,21,0.009,22,0.248,28,1.483,32,1.423,36,1.483,42,0.426,44,1.379,45,0.544,46,0.673,51,1.053,54,0.213,55,0.791,56,0.765,61,1.445,96,2.175,101,3.741,134,3.369,164,2.369,177,2.213,191,2.857,207,4.341,211,3.741,224,1.561,227,2.033,237,3.091,254,2.373,255,2.015,262,2.468,271,2.712,331,2.361,640,2.857,688,3.741,691,6.4,694,6.816,696,5.41,697,5.344,699,3.449,705,4.131,706,4.131,707,4.131,1380,4.131,1381,4.724,1382,4.724,1383,4.724,1384,3.741,1385,6.186,1386,4.724,1387,4.724,1388,4.724,1389,4.724,1390,4.724,1391,4.724,1392,4.724]],["title/classes/TemplateBodyRequest.html",[22,0.217,868,2.37]],["body/classes/TemplateBodyRequest.html",[3,0.121,4,0.121,5,0.106,9,0.28,10,1.401,13,1.508,15,1.077,16,0.39,17,0.012,18,1.24,19,0.184,20,0.009,21,0.009,22,0.401,24,1.013,26,1.299,42,0.527,45,0.65,46,0.684,54,0.176,161,1.278,220,1.979,223,1.183,282,1.585,363,2.078,364,1.34,401,1.79,423,2.142,466,1.79,467,2.063,478,2.191,665,2.868,866,2.777,868,3.606,939,2.526,943,3.533,945,2.526,946,2.526,950,3.28,951,3.28,954,3.344,1393,3.294,1394,4.219,1395,4.838,1396,4.838,1397,4.838,1398,4.838,1399,4.838,1400,3.799,1401,3.533]],["title/classes/TemplateCategory.html",[22,0.217,1394,2.496]],["body/classes/TemplateCategory.html",[3,0.126,4,0.126,5,0.11,9,0.293,10,1.44,13,1.091,15,1.075,16,0.363,17,0.012,18,1.216,19,0.187,20,0.009,21,0.009,22,0.407,24,1.057,26,1.355,42,0.49,45,0.66,54,0.181,161,1.232,220,1.957,223,1.235,282,1.629,363,2.099,364,1.398,401,1.868,423,3.153,466,1.868,467,2.153,478,1.585,665,2.075,866,2.898,868,2.898,939,3.717,943,3.686,945,2.636,946,2.636,950,3.371,951,3.371,954,2.419,1393,3.437,1394,4.306,1400,4.306,1401,3.686,1402,5.048,1403,5.048,1404,5.048]],["title/classes/TemplateCategoryProduct.html",[22,0.217,1400,2.496]],["body/classes/TemplateCategoryProduct.html",[3,0.126,4,0.126,5,0.11,9,0.293,10,1.44,13,1.091,15,1.094,16,0.363,17,0.012,18,1.153,19,0.187,20,0.009,21,0.009,22,0.407,24,1.057,26,1.355,42,0.49,45,0.568,54,0.181,161,1.232,220,1.893,223,1.235,282,1.629,363,2.146,364,1.398,401,2.635,423,2.235,466,2.635,467,3.036,478,1.585,665,2.075,866,2.898,868,2.898,939,2.636,945,2.636,946,2.636,950,3.371,951,3.371,954,2.419,1393,3.437,1394,3.905,1400,4.306,1401,3.686,1405,5.048,1406,5.048,1407,5.048]],["title/modules/TemplateModule.html",[62,1.042,84,2.811]],["body/modules/TemplateModule.html",[3,0.125,4,0.125,5,0.109,17,0.012,19,0.125,20,0.009,21,0.009,22,0.262,54,0.229,55,0.836,56,0.808,62,1.787,64,1.912,65,1.912,66,2.052,67,2.052,68,1.912,69,2.911,70,2.911,84,5.748,86,2.635,87,1.98,88,1.98,90,2.298,91,2.392,99,2.392,100,1.672,153,2.079,215,2.494,498,4.324,521,3.952,844,4.283,877,5.376,878,4.365,989,4.13,990,4.13,992,3.644,993,3.644,1408,4.365,1409,4.365,1410,4.365,1411,4.991,1412,4.991]],["title/classes/TemplateQuery.html",[22,0.217,866,2.37]],["body/classes/TemplateQuery.html",[3,0.12,4,0.12,5,0.105,9,0.279,10,1.397,13,1.041,15,1.085,16,0.376,17,0.012,18,1.128,19,0.184,20,0.009,21,0.009,22,0.401,24,1.009,26,1.682,42,0.507,45,0.551,46,0.88,54,0.176,161,1.205,220,1.86,223,1.178,282,1.977,284,2.318,285,2.318,286,3.48,289,2.515,359,3.806,360,2.633,361,2.633,362,2.633,363,2.039,364,1.334,401,1.783,423,2.133,466,1.783,467,2.054,478,1.513,665,1.98,866,3.596,868,2.765,939,2.515,945,2.515,946,2.515,950,3.271,951,3.271,954,2.309,1393,3.28,1394,3.789,1400,3.789,1401,5.084,1413,4.817]],["title/injectables/TemplateService.html",[224,1.042,877,2.642]],["body/injectables/TemplateService.html",[1,2.209,3,0.054,4,0.054,5,0.047,7,2.137,9,0.125,11,1.237,13,1.617,15,0.974,16,0.362,17,0.012,19,0.054,20,0.005,21,0.005,22,0.113,23,2.218,28,1.725,32,0.799,36,1.091,38,0.992,40,0.992,42,0.456,44,1.479,45,0.624,46,0.722,47,2.258,51,1.432,54,0.195,55,0.361,56,0.349,61,1.426,96,0.992,100,0.722,134,2.305,143,1.077,164,2.717,173,1.237,175,2.332,177,1.965,183,0.886,184,0.886,189,1.371,224,0.877,225,0.919,227,2.334,237,2.182,248,1.077,254,2.54,255,3.156,260,2.305,261,2.413,265,1.304,284,0.798,285,0.798,299,1.6,307,1.562,310,1.243,311,0.826,314,1.331,315,0.771,324,1.243,373,1.814,374,3.065,376,3.555,378,2.279,381,1.304,382,1.125,383,1.995,385,1.814,388,1.814,391,1.468,392,1.574,393,1.077,397,1.125,398,1.125,400,1.9,401,1.616,402,1.178,403,1.178,404,1.178,405,1.237,406,2.101,409,1.814,412,1.125,413,2.279,414,2.387,415,2.279,416,2.279,423,1.539,466,0.798,477,2.366,478,1.091,493,1.995,503,1.995,513,3.55,515,2.537,516,1.574,519,1.237,520,1.379,525,1.379,526,1.379,528,2.64,533,1.574,535,3.951,552,4.287,665,0.886,786,2.537,863,1.379,866,2.874,868,3.909,876,1.885,877,2.224,895,2.537,914,3.321,924,1.574,954,2.4,1006,3.039,1007,3.818,1008,1.885,1017,3.039,1021,1.885,1039,3.039,1041,1.885,1042,1.885,1043,1.885,1044,1.885,1045,1.885,1047,3.039,1048,1.885,1051,1.885,1060,1.885,1061,1.885,1062,4.379,1064,3.039,1066,1.885,1068,3.039,1069,1.885,1071,1.885,1074,1.885,1076,1.885,1083,1.885,1151,1.574,1153,1.574,1154,1.574,1200,1.707,1206,1.707,1394,3.321,1400,1.304,1414,1.885,1415,4.366,1416,4.366,1417,2.156,1418,2.156,1419,2.156,1420,2.156,1421,2.156,1422,2.156,1423,2.156,1424,5.492,1425,2.156,1426,2.156,1427,3.475,1428,3.475,1429,2.156,1430,2.156,1431,2.156,1432,3.475,1433,2.156,1434,2.156,1435,2.156,1436,2.156,1437,2.156,1438,5.492,1439,2.156,1440,2.156,1441,2.156,1442,2.156,1443,3.475,1444,2.156,1445,2.156,1446,2.156,1447,3.475,1448,2.156,1449,2.156,1450,2.156,1451,2.156,1452,2.156,1453,2.156,1454,2.156,1455,2.156,1456,2.156,1457,3.475,1458,2.156]],["title/controllers/UserController.html",[151,1.339,1459,3.014]],["body/controllers/UserController.html",[1,2.357,3,0.092,4,0.092,5,0.08,7,2.407,9,0.213,13,1.561,15,1.016,16,0.368,17,0.012,19,0.092,20,0.007,21,0.007,22,0.193,28,1.636,32,1.198,36,1.153,42,0.497,44,1.611,45,0.636,46,0.786,51,1.611,54,0.213,55,0.615,56,0.595,61,1.513,151,1.689,153,1.191,161,1.25,174,3.025,175,2.653,177,1.314,178,2.603,179,2.007,180,2.007,183,1.509,184,1.509,189,2.269,192,1.626,207,3.309,227,2.445,262,1.314,307,1.864,308,2.719,309,2.719,310,1.864,311,1.406,314,2.318,315,1.314,318,1.917,319,1.917,321,1.917,322,1.917,324,1.314,325,1.917,327,1.835,328,1.917,329,1.76,330,1.76,331,1.835,332,1.928,333,1.69,336,1.835,338,2.681,339,2.107,340,2.22,342,1.917,343,1.917,345,2.681,347,1.917,348,2.107,350,1.917,351,1.917,679,3.211,1459,3.803,1460,3.211,1461,5.294,1462,3.781,1463,3.672,1464,3.211,1465,3.781,1466,3.672,1467,3.672,1468,4.265,1469,3.672,1470,3.672,1471,3.672,1472,3.672,1473,3.211,1474,3.211,1475,3.672,1476,3.672,1477,3.672,1478,3.672,1479,3.672,1480,3.672,1481,3.672]],["title/modules/UserModule.html",[62,1.042,85,2.811]],["body/modules/UserModule.html",[3,0.12,4,0.12,5,0.106,17,0.012,19,0.12,20,0.009,21,0.009,22,0.253,54,0.232,55,0.808,56,0.782,62,1.759,64,1.849,65,1.849,66,1.985,67,1.985,68,1.849,69,2.865,70,2.865,85,5.723,86,2.579,87,1.915,88,1.915,90,2.222,91,2.314,95,3.525,96,2.222,99,2.314,100,1.617,101,2.919,102,3.525,137,3.601,153,2.034,204,4.286,205,3.758,206,3.918,207,4.571,212,3.823,215,2.412,1459,5.089,1474,4.222,1482,4.222,1483,4.222,1484,4.827,1485,4.827,1486,4.827,1487,4.827,1488,4.827,1489,4.827]],["title/classes/UserPasswordRequest.html",[22,0.217,1465,2.37]],["body/classes/UserPasswordRequest.html",[3,0.12,4,0.12,5,0.105,9,0.279,10,1.395,12,2.402,13,1.039,15,0.969,16,0.399,17,0.012,18,1.361,19,0.174,20,0.009,21,0.009,22,0.411,24,1.007,26,1.29,42,0.479,45,0.423,54,0.195,161,1.204,218,4.027,220,2.096,223,1.176,262,2.238,271,2.759,282,1.578,291,3.075,363,1.917,364,1.331,367,2.509,473,2.627,805,4.451,840,1.906,841,1.906,1462,2.759,1465,3.591,1468,2.759,1490,3.273,1491,5.079,1492,5.079,1493,4.806,1494,4.806,1495,4.806,1496,5.079,1497,4.568,1498,3.273,1499,3.509,1500,4.568,1501,3.075]],["title/classes/UserQuery.html",[22,0.217,1462,2.37]],["body/classes/UserQuery.html",[3,0.117,4,0.117,5,0.102,9,0.271,10,1.371,12,2.341,13,1.012,15,1.023,16,0.397,17,0.012,18,1.33,19,0.171,20,0.009,21,0.009,22,0.408,24,0.981,26,1.651,42,0.473,45,0.412,46,0.846,54,0.193,161,1.189,218,3.363,220,2.029,223,1.146,262,2.201,271,2.689,282,1.962,284,2.277,285,2.277,286,3.433,289,2.445,291,2.997,359,3.755,360,2.561,361,2.561,362,2.561,363,1.898,364,1.297,367,2.445,473,2.561,805,4.395,840,1.858,841,1.858,1462,3.531,1465,2.689,1468,2.689,1490,3.189,1491,3.42,1492,3.42,1496,5.016,1497,4.492,1498,3.189,1499,3.42,1500,4.492,1501,2.997]],["title/classes/UserRequest.html",[22,0.217,1468,2.37]],["body/classes/UserRequest.html",[3,0.104,4,0.104,5,0.092,9,0.243,10,1.272,12,3.244,13,0.905,15,1.014,16,0.417,17,0.012,18,1.349,19,0.162,20,0.008,21,0.008,22,0.395,24,0.877,26,1.124,42,0.547,45,0.368,46,0.853,54,0.182,161,1.376,218,3.811,220,2.064,223,1.024,262,2.494,271,3.726,282,1.44,291,2.679,363,2.005,364,1.159,367,3.389,473,3.549,805,4.461,840,1.661,841,1.661,1462,2.403,1465,2.403,1468,3.275,1490,2.851,1491,3.057,1492,3.057,1496,5.091,1497,4.74,1498,4.42,1499,4.74,1500,5.091,1501,2.679,1502,4.187,1503,4.187,1504,4.187,1505,4.187,1506,4.187,1507,4.187,1508,4.187,1509,4.187,1510,4.187]],["title/classes/UserSearchModel.html",[22,0.217,1501,2.642]],["body/classes/UserSearchModel.html",[3,0.119,4,0.119,5,0.104,9,0.276,10,1.387,12,2.381,13,1.03,15,0.966,16,0.406,17,0.012,18,1.344,19,0.173,20,0.009,21,0.009,22,0.41,24,0.998,26,1.279,42,0.477,45,0.609,46,0.85,54,0.194,161,1.076,218,3.401,220,2.036,223,1.166,262,2.627,271,2.735,282,1.57,286,3.109,291,3.049,363,1.911,364,1.319,367,2.488,473,2.605,805,4.698,840,1.89,841,1.89,1462,2.735,1465,2.735,1468,2.735,1490,3.244,1491,3.479,1492,3.479,1496,5.057,1497,4.542,1498,3.244,1499,3.479,1500,5.362,1501,3.981,1511,4.765,1512,4.765,1513,4.765,1514,4.765]],["title/injectables/UserService.html",[207,2.257,224,1.042]],["body/injectables/UserService.html",[1,1.92,3,0.061,4,0.061,5,0.053,7,2.39,9,0.141,13,1.557,15,0.964,16,0.373,17,0.012,18,1.003,19,0.061,20,0.005,21,0.005,22,0.128,23,2.376,28,1.685,32,0.881,36,1.203,38,1.122,40,1.122,42,0.475,44,1.539,45,0.608,46,0.751,47,2.206,51,1.496,54,0.205,55,0.408,56,0.395,61,1.48,93,4.218,94,1.659,100,0.816,134,2.471,137,2.199,164,2.805,175,2.17,183,1.002,184,1.002,189,1.203,204,3.542,206,3.238,207,2.094,210,1.929,212,1.929,218,3.386,224,0.966,225,1.039,227,2.375,237,2.366,244,4.14,248,1.218,253,2,254,2.291,255,3.073,260,2.179,261,2.206,262,2.47,271,3.719,274,3.35,284,0.902,285,0.902,299,1.764,307,1.371,310,1.371,311,1.467,314,0.933,315,1.371,324,1.371,373,2.472,374,2,376,2.802,378,2.472,383,1.398,385,1.272,388,2,393,1.218,397,1.272,398,1.272,400,2.094,401,1.418,402,1.332,403,1.332,404,1.332,406,4.273,407,1.659,408,2.451,409,3.234,412,1.272,413,1.272,414,1.332,415,1.272,416,2.472,473,2.588,493,2.717,503,1.398,528,2.317,693,2.131,786,3.457,815,1.779,914,1.473,1206,1.929,1461,3.35,1462,3.08,1464,3.35,1465,3.08,1468,3.719,1473,2.131,1515,2.131,1516,3.831,1517,2.436,1518,2.436,1519,2.436,1520,2.436,1521,3.831,1522,2.436,1523,6.48,1524,2.436,1525,2.436,1526,2.436,1527,2.436,1528,2.436,1529,3.749,1530,2.436,1531,2.436,1532,2.436,1533,2.436,1534,2.436,1535,2.436,1536,2.436,1537,2.436,1538,2.436,1539,2.436,1540,5.366,1541,2.436,1542,2.436,1543,3.831,1544,3.831,1545,3.831,1546,2.436,1547,2.436,1548,2.436,1549,2.436,1550,2.436,1551,3.831,1552,2.436,1553,1.779,1554,2.436,1555,2.436,1556,2.436]],["title/coverage.html",[1557,4.943]],["body/coverage.html",[0,1.724,1,0.845,5,0.052,6,2.064,7,0.817,8,2.064,16,0.236,17,0.012,20,0.005,21,0.005,22,0.436,23,1.045,25,2.064,68,0.904,101,1.428,107,1.607,114,1.724,151,2.316,152,1.724,154,2.959,166,1.607,178,1.18,181,1.511,186,1.511,188,1.869,203,1.607,204,1.291,205,1.131,206,1.18,207,1.291,217,2.064,224,1.884,226,2.064,233,1.428,250,1.869,261,0.97,265,5.261,282,0.596,283,2.064,293,2.064,305,1.724,306,2.064,312,1.511,316,1.511,330,1.131,332,0.874,358,2.959,365,1.291,372,2.064,421,1.724,422,2.064,425,1.355,427,1.355,435,1.355,442,1.428,463,1.511,464,3.591,492,2.064,498,1.291,519,1.355,560,1.869,561,2.728,615,5.216,638,1.869,639,2.064,687,2.959,689,2.064,690,2.064,736,1.724,749,2.064,778,1.869,780,1.869,795,1.869,796,2.959,815,1.724,822,2.064,844,2.26,845,2.064,864,2.064,866,1.355,868,1.355,877,1.511,893,2.064,937,1.291,938,3.696,942,1.291,952,1.233,955,1.233,957,1.355,961,1.233,962,1.724,963,2.064,975,1.511,989,1.233,990,1.233,1004,2.064,1077,4.612,1099,1.511,1100,2.959,1112,1.511,1113,1.724,1114,2.064,1115,1.511,1117,1.511,1135,2.959,1140,2.064,1158,1.724,1159,2.064,1177,2.064,1207,1.511,1208,2.959,1213,1.511,1214,1.724,1215,2.064,1234,2.064,1257,1.724,1266,2.064,1291,1.869,1292,2.064,1306,1.724,1307,2.064,1309,1.511,1311,1.511,1329,2.959,1336,2.064,1380,2.064,1384,1.869,1393,3.591,1394,1.428,1400,1.428,1414,2.064,1459,1.724,1460,2.064,1462,1.355,1465,1.355,1468,1.355,1490,3.591,1501,1.511,1515,2.064,1529,1.869,1557,2.064,1558,2.361,1559,2.361,1560,2.361,1561,5.98,1562,7.948,1563,2.064,1564,5.274,1565,2.064,1566,8.217,1567,2.064,1568,2.064,1569,2.064,1570,2.064,1571,2.064,1572,2.064,1573,2.064,1574,2.064,1575,2.064,1576,2.064,1577,2.064,1578,2.064,1579,2.064,1580,2.064,1581,5.746,1582,2.064,1583,3.268,1584,6.111,1585,4.638,1586,5.274,1587,7.809,1588,2.064,1589,2.064,1590,2.361,1591,2.959,1592,3.737,1593,2.064,1594,4.612,1595,2.064,1596,2.064,1597,2.064,1598,2.064,1599,6.402,1600,6.639,1601,2.361,1602,5.746,1603,2.064,1604,2.959,1605,2.064,1606,2.064,1607,3.737,1608,2.361,1609,2.361,1610,3.737,1611,2.064,1612,2.361,1613,2.361]],["title/dependencies.html",[65,1.903,1614,3.439]],["body/dependencies.html",[17,0.012,20,0.011,21,0.011,55,1.109,65,2.536,1615,6.622,1616,6.622,1617,6.622]],["title/miscellaneous/enumerations.html",[1618,1.974,1619,4.346]],["body/miscellaneous/enumerations.html",[9,0.349,17,0.012,20,0.01,21,0.01,382,4.326,561,4.4,591,6.301,612,6.301,613,6.301,614,5.706,838,4.906,863,4.61,909,4.4,1553,4.4,1561,4.772,1618,3.459,1619,5.27,1620,7.205,1621,6.301,1622,5.27,1623,5.27,1624,5.27,1625,6.026,1626,6.026]],["title/miscellaneous/functions.html",[1618,1.974,1627,3.936]],["body/miscellaneous/functions.html",[9,0.261,16,0.412,17,0.012,18,1.341,20,0.008,21,0.008,41,4.376,44,1.817,45,0.717,46,0.887,47,2.952,51,1.336,68,2.58,107,4.081,138,6.09,218,2.461,237,3.366,395,4.376,476,2.881,513,4.821,519,3.44,561,3.288,616,3.938,619,3.938,731,3.288,733,3.066,736,4.376,744,3.566,780,4.746,796,3.566,807,6.28,809,3.938,814,3.938,815,4.376,895,5.244,908,5.241,1529,4.746,1588,3.938,1589,3.938,1591,3.566,1594,3.938,1595,5.241,1596,5.241,1597,5.241,1598,5.241,1604,3.566,1606,3.938,1618,2.584,1622,3.938,1627,3.566,1628,7.181,1629,3.938,1630,3.938,1631,4.502,1632,4.502,1633,4.502,1634,4.502,1635,4.502,1636,5.993,1637,4.502,1638,4.502,1639,4.502,1640,4.502,1641,4.502,1642,4.502,1643,4.502]],["title/index.html",[9,0.239,1644,3.61]],["body/index.html",[0,2.295,17,0.012,20,0.007,21,0.007,24,0.659,62,0.793,63,6.136,64,1.204,65,1.204,66,1.292,67,1.292,68,1.204,69,1.292,70,1.292,71,2.749,72,2.749,73,5.43,74,4.954,75,4.954,76,4.381,77,4.662,78,5.285,79,4.662,80,4.907,81,4.662,82,4.662,83,4.954,84,5.285,85,5.285,86,1.913,87,1.247,88,1.247,153,1.019,186,3.546,201,2.749,202,2.749,203,3.773,204,4.062,205,3.676,206,3.714,207,3.978,225,1.341,233,4.285,332,2.798,353,2.749,354,2.749,442,4.285,457,2.749,458,2.749,460,2.749,498,4.062,688,2.489,724,2.749,725,2.749,726,2.749,742,4.453,745,2.749,863,2.012,877,4.534,888,2.749,890,2.749,975,4.534,986,2.749,987,2.749,988,2.749,989,3.947,990,3.947,1130,2.749,1131,2.749,1172,2.749,1173,2.749,1229,2.749,1230,2.749,1245,2.749,1246,2.749,1247,2.749,1324,2.749,1325,2.749,1408,2.749,1409,2.749,1410,2.749,1482,2.749,1483,2.749,1553,2.295,1644,2.749,1645,3.144,1646,3.144,1647,3.144,1648,3.144]],["title/modules.html",[64,2.165]],["body/modules.html",[17,0.01,20,0.01,21,0.01,63,4.007,64,2.102,73,3.736,74,3.736,75,3.736,76,3.511,77,3.736,78,3.736,79,3.736,80,3.511,81,3.736,82,3.736,83,3.736,84,3.736,85,3.736,742,3.736,1649,8.596,1650,8.596,1651,8.596,1652,8.596]],["title/miscellaneous/typealiases.html",[1618,1.974,1653,4.97]],["body/miscellaneous/typealiases.html",[9,0.378,16,0.333,17,0.011,20,0.011,21,0.011,154,5.167,188,5.979,1591,5.167,1593,6.603,1618,3.745,1629,5.706,1654,6.524,1655,6.524]],["title/miscellaneous/variables.html",[1618,1.974,1656,4.346]],["body/miscellaneous/variables.html",[1,0.841,7,1.985,9,0.078,12,1.175,13,1.762,16,0.419,17,0.012,18,0.381,20,0.003,21,0.003,45,0.715,61,0.283,134,1.714,157,1.861,177,0.484,178,1.175,181,1.504,218,0.74,219,2.056,250,2.468,254,0.762,262,1.332,292,4.541,299,1.082,330,2.021,381,4.315,382,3.725,476,4.606,478,1.801,614,2.949,653,1.071,663,1.716,665,2.437,697,0.988,708,2.056,721,1.183,778,1.861,786,1.716,823,6.723,824,5.59,825,4.196,826,4.514,827,5.815,828,6.964,863,3.903,909,4.984,916,4.952,1254,1.071,1257,1.716,1384,1.861,1498,1.601,1553,4.566,1561,1.071,1563,2.726,1565,3.257,1567,3.257,1568,2.726,1569,2.726,1570,3.257,1571,2.726,1572,2.726,1573,2.056,1574,2.726,1575,2.056,1576,2.726,1577,2.726,1578,2.056,1579,1.183,1580,2.056,1582,1.183,1583,1.183,1603,1.183,1604,1.071,1605,2.056,1611,1.183,1618,0.776,1621,5.698,1623,2.056,1624,4.044,1627,1.861,1630,1.183,1656,1.183,1657,1.353,1658,1.353,1659,1.353,1660,1.353,1661,2.351,1662,1.353,1663,2.351,1664,1.353,1665,1.353,1666,1.353,1667,1.353,1668,3.724,1669,2.351,1670,1.353,1671,4.217,1672,3.724,1673,5.734,1674,1.353,1675,2.351,1676,1.353,1677,2.351,1678,3.724,1679,3.724,1680,5.928,1681,4.217,1682,1.353,1683,1.353,1684,7.687,1685,1.353,1686,1.353,1687,1.353,1688,2.351,1689,1.353,1690,1.353,1691,1.353,1692,2.351,1693,1.353,1694,1.353,1695,1.353,1696,2.351,1697,1.353,1698,1.353,1699,1.353,1700,2.351,1701,1.353,1702,1.353,1703,1.353,1704,1.353,1705,1.353,1706,1.353,1707,1.353,1708,1.353,1709,1.353,1710,1.353,1711,2.351,1712,1.353,1713,1.353,1714,1.353,1715,2.351,1716,1.353,1717,1.353,1718,1.353,1719,2.351,1720,1.353,1721,3.117,1722,1.353,1723,2.351,1724,3.117,1725,3.117,1726,1.353,1727,1.353,1728,2.351,1729,1.353,1730,1.353,1731,1.353,1732,1.353,1733,1.353,1734,1.353,1735,1.353,1736,1.353,1737,1.353,1738,1.353,1739,1.353,1740,2.351,1741,3.724,1742,1.353,1743,1.353,1744,1.353,1745,1.353,1746,1.353,1747,1.353,1748,2.351,1749,1.353,1750,1.353,1751,1.353,1752,2.351,1753,1.353,1754,1.353,1755,1.353,1756,2.351,1757,1.353,1758,3.117,1759,1.353,1760,1.353,1761,1.353,1762,1.353,1763,1.353,1764,2.351,1765,1.353,1766,1.353,1767,1.353,1768,2.351,1769,1.353,1770,1.353,1771,3.117,1772,1.353,1773,3.117,1774,3.117,1775,1.353,1776,1.353,1777,1.353,1778,1.353,1779,1.353,1780,1.353,1781,2.351,1782,1.353,1783,4.625,1784,1.353,1785,2.351,1786,1.353,1787,1.353,1788,3.117,1789,1.353,1790,1.353,1791,1.353,1792,1.353,1793,1.353,1794,1.353,1795,1.353,1796,1.353,1797,1.353,1798,1.353,1799,1.353,1800,1.353,1801,1.353,1802,1.353,1803,1.353,1804,1.353,1805,3.117,1806,1.353,1807,1.353,1808,1.353,1809,1.353,1810,2.351,1811,3.724,1812,1.353,1813,3.117,1814,1.353,1815,2.351,1816,1.353,1817,1.353,1818,2.351,1819,3.117,1820,1.353,1821,3.117,1822,1.353,1823,2.351,1824,1.353,1825,1.353,1826,2.351,1827,2.351,1828,1.353,1829,1.353,1830,1.353,1831,2.351,1832,1.353,1833,1.353,1834,2.351,1835,2.351,1836,1.353,1837,2.351,1838,4.625,1839,2.351,1840,2.351,1841,1.353,1842,1.353,1843,1.353,1844,1.353,1845,2.351,1846,1.353,1847,2.351,1848,1.353,1849,1.353,1850,2.351,1851,1.353,1852,1.353,1853,1.353,1854,1.353,1855,3.117,1856,1.353,1857,1.353,1858,1.353,1859,1.353,1860,1.353,1861,1.353,1862,2.351,1863,3.117,1864,1.353,1865,3.117,1866,1.353,1867,1.353,1868,1.353,1869,1.353,1870,1.353,1871,1.353,1872,1.353,1873,1.353,1874,1.353,1875,2.351,1876,2.351,1877,1.353,1878,1.353,1879,1.353,1880,1.353,1881,1.353,1882,1.353,1883,1.353,1884,1.353,1885,1.353,1886,1.353,1887,1.353,1888,1.353,1889,1.353,1890,1.353,1891,1.353,1892,1.353,1893,1.353,1894,1.353,1895,1.353,1896,1.353,1897,1.353]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"classes/EnvironmentVariables.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["0/1",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["0144431332471389",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0157880245365433",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0157880245365434",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0194818428516575",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0225992135973772",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0249937641030250",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0901673425580518",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0941594969900756",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":863,"title":{"controllers/MenuController-1.html":{}},"body":{"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["1.1.26",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1077,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["11",{"_index":1646,"title":{},"body":{"index.html":{}}}],["123456789",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["14",{"_index":1647,"title":{},"body":{"index.html":{}}}],["15",{"_index":1645,"title":{},"body":{"index.html":{}}}],["1689241785490759",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1755562695856395",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1985890042972842",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1a",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1a/index.tsx",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b/menu",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2013577074467956",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2013577074467957",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2122547769468069",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2271615060673773",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2478488238255411",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2501920741714350",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2516598794787938",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2781684678535711",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a/index.tsx",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2b",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2b/menu",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3298034742548454",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3513985683886393",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":1648,"title":{},"body":{"index.html":{}}}],["3653745576583237",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3667930780705750",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3667930780705751",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3981225257359246",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3a",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3a/index.tsx",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b/index.tsx",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4233029726998055",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4281707933534332",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4359580910369984",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["457e",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4754063958766648",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47ee",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4873136353891364",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4dc5",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5095669208159005",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5455837930804461",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5733704222120995",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60s",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["6755238352318767",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7/8",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["7572529636800586",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7728048658221587",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7749726274771764",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8132044808088488",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8426999229400979",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8557056851997154",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["8a899be29494",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9100714781927703",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9299640886731819",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9406067785553476",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9575",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9710971640510357",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9884486809510480",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9931665660771476",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99505ecee828",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9992476513546805",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":391,"title":{},"body":{"injectables/CompanyService.html":{},"guards/JwtAuthGuard.html":{},"injectables/OrderService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{}}}],["_.keyby(categories",{"_index":1044,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["_.remove(menus",{"_index":1366,"title":{},"body":{"injectables/RoleService.html":{}}}],["a200",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeuser",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":1,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addpermission",{"_index":1595,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpermission(em",{"_index":1635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":367,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["addroledata",{"_index":1596,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addroledata(em",{"_index":1637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adduserdata",{"_index":1597,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["adduserdata(em",{"_index":1638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["admin",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin_role",{"_index":1563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1654,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all(@query",{"_index":340,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["all(query",{"_index":311,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["alt",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analysis",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiexception",{"_index":23,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["apistatuscode",{"_index":38,"title":{},"body":{"classes/ApiException.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"classes/ResponseInterceptor.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["apistatuscode.key_not_exist",{"_index":415,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["apistatuscode.password_not_correct",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["apistatuscode.sql_error",{"_index":681,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["apistatuscode.success",{"_index":1303,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["apistatuscode.two_passwords_not_match",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["apistatuscode.unkown_error",{"_index":684,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/OrderService.html":{}}}],["app",{"_index":770,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["app_guard",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["appconfig",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["args",{"_index":802,"title":{},"body":{"classes/MatchConstraint.html":{},"classes/ResponseInterceptor.html":{}}}],["args.constraints",{"_index":817,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.constraints[0",{"_index":821,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.object[relatedpropertyname",{"_index":819,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.property",{"_index":820,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["argumentshost",{"_index":648,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arraymaxsize",{"_index":945,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["arraymaxsize(100",{"_index":951,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["arrayminsize",{"_index":946,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["arrayminsize(1",{"_index":950,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["arrayminsize(1)@arraymaxsize(100",{"_index":943,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{}}}],["assets",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":690,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:16",{"_index":695,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:24",{"_index":698,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:61",{"_index":701,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.interface",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authcontroller",{"_index":152,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":73,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["authrequest",{"_index":166,"title":{"classes/AuthRequest.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservice",{"_index":186,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["avatar",{"_index":1498,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["b34719e1",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basepath",{"_index":1605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["basequery",{"_index":282,"title":{"classes/BaseQuery.html":{}},"body":{"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"coverage.html":{}}}],["basequery:11",{"_index":362,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CustomerQuery.html":{},"classes/OrderQuery.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/TemplateQuery.html":{},"classes/UserQuery.html":{}}}],["basequery:5",{"_index":360,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CustomerQuery.html":{},"classes/OrderQuery.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/TemplateQuery.html":{},"classes/UserQuery.html":{}}}],["basequery:8",{"_index":361,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CustomerQuery.html":{},"classes/OrderQuery.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/TemplateQuery.html":{},"classes/UserQuery.html":{}}}],["basicstatus",{"_index":1620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["basicstatus.disable",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basicstatus.enable",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":303,"title":{},"body":{"injectables/BcryptService.html":{}}}],["bcrypt.service",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["bcryptservice",{"_index":203,"title":{"injectables/BcryptService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptService.html":{},"coverage.html":{},"index.html":{}}}],["between",{"_index":1025,"title":{},"body":{"injectables/OrderService.html":{}}}],["between(startdate",{"_index":1036,"title":{},"body":{"injectables/OrderService.html":{}}}],["bill/database",{"_index":55,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"injectables/ProductUnitService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bill/database/dist/entities",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["bill/database/dist/enums/orderstatus",{"_index":949,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["biome",{"_index":739,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["blank",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body.categories",{"_index":1061,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["body.component",{"_index":932,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.cost",{"_index":1198,"title":{},"body":{"injectables/ProductService.html":{}}}],["body.customerid",{"_index":1050,"title":{},"body":{"injectables/OrderService.html":{}}}],["body.desc",{"_index":1200,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["body.icon",{"_index":920,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.label",{"_index":922,"title":{},"body":{"injectables/MenuService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{}}}],["body.name",{"_index":924,"title":{},"body":{"injectables/MenuService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["body.no",{"_index":1053,"title":{},"body":{"injectables/OrderService.html":{}}}],["body.order",{"_index":926,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.parentid",{"_index":934,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.password",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.passwordnew",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["body.passwordnewagain",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["body.price",{"_index":1202,"title":{},"body":{"injectables/ProductService.html":{}}}],["body.prices",{"_index":547,"title":{},"body":{"injectables/CustomerService.html":{}}}],["body.route",{"_index":928,"title":{},"body":{"injectables/MenuService.html":{}}}],["body.status",{"_index":1089,"title":{},"body":{"injectables/OrderService.html":{}}}],["body.type",{"_index":930,"title":{},"body":{"injectables/MenuService.html":{}}}],["bold",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":805,"title":{},"body":{"classes/MatchConstraint.html":{},"injectables/RoleService.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["branch",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bright",{"_index":631,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["browse",{"_index":1652,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1649,"title":{},"body":{"modules.html":{}}}],["builddefaultconfig",{"_index":780,"title":{},"body":{"injectables/Log4jsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["builddefaultconfig(\"all",{"_index":787,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["builddefaultconfig(level",{"_index":1640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builddefaultconfig(options",{"_index":785,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["button",{"_index":1626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bxs:error",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":1060,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["c.id",{"_index":1042,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["c.name",{"_index":1066,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["c.productcategoryid",{"_index":1064,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["c.products",{"_index":1069,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["c.showed",{"_index":1365,"title":{},"body":{"injectables/RoleService.html":{}}}],["calendar",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":1296,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["canactivate",{"_index":691,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":696,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catalogue",{"_index":1625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":642,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{}}}],["catch((e",{"_index":1082,"title":{},"body":{"injectables/OrderService.html":{}}}],["catch(exception",{"_index":646,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":954,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["categories.push(entitymanager.save(ordercategory",{"_index":1067,"title":{},"body":{"injectables/OrderService.html":{}}}],["categories.push(entitymanager.save(templatecategory",{"_index":1448,"title":{},"body":{"injectables/TemplateService.html":{}}}],["category",{"_index":535,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["category.controller",{"_index":1134,"title":{},"body":{"modules/ProductCategoryModule.html":{}}}],["category.extend",{"_index":1156,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["category.interface",{"_index":1122,"title":{},"body":{"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{}}}],["category.products",{"_index":1047,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["category.products.push(cp",{"_index":1048,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["category.service",{"_index":1123,"title":{},"body":{"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{}}}],["categoryid",{"_index":1101,"title":{},"body":{"classes/ProductBodyRequest.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{}}}],["categorymap",{"_index":1043,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["categorymap[cp.ordercategory.id",{"_index":1046,"title":{},"body":{"injectables/OrderService.html":{}}}],["categorymap[cp.templatecategory.id",{"_index":1440,"title":{},"body":{"injectables/TemplateService.html":{}}}],["categoryproducts",{"_index":1039,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["cb",{"_index":766,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["ce46",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changepassword",{"_index":1461,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword(body",{"_index":1464,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changestatus",{"_index":1005,"title":{},"body":{"injectables/OrderService.html":{}}}],["changestatus(id",{"_index":1013,"title":{},"body":{"injectables/OrderService.html":{}}}],["chart",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkids",{"_index":1354,"title":{},"body":{"injectables/RoleService.html":{}}}],["checkids.indexof(menu.id",{"_index":1358,"title":{},"body":{"injectables/RoleService.html":{}}}],["child",{"_index":914,"title":{},"body":{"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["child.category",{"_index":1192,"title":{},"body":{"injectables/ProductService.html":{}}}],["child.component",{"_index":931,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.desc",{"_index":1244,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["child.extend",{"_index":1458,"title":{},"body":{"injectables/TemplateService.html":{}}}],["child.icon",{"_index":919,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.id",{"_index":1447,"title":{},"body":{"injectables/TemplateService.html":{}}}],["child.label",{"_index":921,"title":{},"body":{"injectables/MenuService.html":{},"injectables/ProductUnitService.html":{}}}],["child.name",{"_index":923,"title":{},"body":{"injectables/MenuService.html":{},"injectables/ProductUnitService.html":{}}}],["child.order",{"_index":925,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.parent",{"_index":933,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.route",{"_index":927,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.showed",{"_index":1362,"title":{},"body":{"injectables/RoleService.html":{}}}],["child.type",{"_index":929,"title":{},"body":{"injectables/MenuService.html":{}}}],["child.unit",{"_index":1193,"title":{},"body":{"injectables/ProductService.html":{}}}],["children",{"_index":916,"title":{},"body":{"injectables/MenuService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["china",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":22,"title":{"classes/ApiException.html":{},"classes/AuthRequest.html":{},"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/ResponseInterceptor.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":24,"title":{},"body":{"classes/ApiException.html":{},"classes/AuthRequest.html":{},"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/ResponseInterceptor.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"index.html":{}}}],["clipboard",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed",{"_index":1088,"title":{},"body":{"injectables/OrderService.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_providers",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_companymodule",{"_index":353,"title":{},"body":{"modules/CompanyModule.html":{},"index.html":{}}}],["cluster_companymodule_exports",{"_index":354,"title":{},"body":{"modules/CompanyModule.html":{},"index.html":{}}}],["cluster_companymodule_providers",{"_index":355,"title":{},"body":{"modules/CompanyModule.html":{}}}],["cluster_customermodule",{"_index":457,"title":{},"body":{"modules/CustomerModule.html":{},"index.html":{}}}],["cluster_customermodule_exports",{"_index":458,"title":{},"body":{"modules/CustomerModule.html":{},"index.html":{}}}],["cluster_customermodule_imports",{"_index":459,"title":{},"body":{"modules/CustomerModule.html":{}}}],["cluster_customermodule_providers",{"_index":460,"title":{},"body":{"modules/CustomerModule.html":{},"index.html":{}}}],["cluster_log4jsglobalmodule",{"_index":724,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"index.html":{}}}],["cluster_log4jsglobalmodule_exports",{"_index":725,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"index.html":{}}}],["cluster_log4jsglobalmodule_providers",{"_index":726,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"index.html":{}}}],["cluster_log4jsmodule",{"_index":745,"title":{},"body":{"modules/Log4jsModule.html":{},"index.html":{}}}],["cluster_log4jsmodule_exports",{"_index":746,"title":{},"body":{"modules/Log4jsModule.html":{}}}],["cluster_log4jsmodule_providers",{"_index":747,"title":{},"body":{"modules/Log4jsModule.html":{}}}],["cluster_menumodule",{"_index":888,"title":{},"body":{"modules/MenuModule.html":{},"index.html":{}}}],["cluster_menumodule_exports",{"_index":890,"title":{},"body":{"modules/MenuModule.html":{},"index.html":{}}}],["cluster_menumodule_providers",{"_index":889,"title":{},"body":{"modules/MenuModule.html":{}}}],["cluster_ordermodule",{"_index":986,"title":{},"body":{"modules/OrderModule.html":{},"index.html":{}}}],["cluster_ordermodule_exports",{"_index":988,"title":{},"body":{"modules/OrderModule.html":{},"index.html":{}}}],["cluster_ordermodule_providers",{"_index":987,"title":{},"body":{"modules/OrderModule.html":{},"index.html":{}}}],["cluster_productcategorymodule",{"_index":1130,"title":{},"body":{"modules/ProductCategoryModule.html":{},"index.html":{}}}],["cluster_productcategorymodule_exports",{"_index":1131,"title":{},"body":{"modules/ProductCategoryModule.html":{},"index.html":{}}}],["cluster_productcategorymodule_providers",{"_index":1132,"title":{},"body":{"modules/ProductCategoryModule.html":{}}}],["cluster_productmodule",{"_index":1172,"title":{},"body":{"modules/ProductModule.html":{},"index.html":{}}}],["cluster_productmodule_exports",{"_index":1173,"title":{},"body":{"modules/ProductModule.html":{},"index.html":{}}}],["cluster_productmodule_providers",{"_index":1174,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productunitmodule",{"_index":1229,"title":{},"body":{"modules/ProductUnitModule.html":{},"index.html":{}}}],["cluster_productunitmodule_exports",{"_index":1230,"title":{},"body":{"modules/ProductUnitModule.html":{},"index.html":{}}}],["cluster_productunitmodule_providers",{"_index":1231,"title":{},"body":{"modules/ProductUnitModule.html":{}}}],["cluster_redismodule",{"_index":1245,"title":{},"body":{"modules/RedisModule.html":{},"index.html":{}}}],["cluster_redismodule_exports",{"_index":1246,"title":{},"body":{"modules/RedisModule.html":{},"index.html":{}}}],["cluster_redismodule_providers",{"_index":1247,"title":{},"body":{"modules/RedisModule.html":{},"index.html":{}}}],["cluster_rolemodule",{"_index":1324,"title":{},"body":{"modules/RoleModule.html":{},"index.html":{}}}],["cluster_rolemodule_exports",{"_index":1325,"title":{},"body":{"modules/RoleModule.html":{},"index.html":{}}}],["cluster_rolemodule_providers",{"_index":1326,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_templatemodule",{"_index":1408,"title":{},"body":{"modules/TemplateModule.html":{},"index.html":{}}}],["cluster_templatemodule_exports",{"_index":1410,"title":{},"body":{"modules/TemplateModule.html":{},"index.html":{}}}],["cluster_templatemodule_providers",{"_index":1409,"title":{},"body":{"modules/TemplateModule.html":{},"index.html":{}}}],["cluster_usermodule",{"_index":1482,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_exports",{"_index":1483,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_providers",{"_index":1484,"title":{},"body":{"modules/UserModule.html":{}}}],["code",{"_index":668,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ResponseInterceptor.html":{}}}],["color",{"_index":629,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["color.fgred}${color.bright}${errormessage}${color.reset",{"_index":635,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["common",{"_index":683,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["common/decorators/active",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/UserController.html":{}}}],["common/decorators/public.decorator",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerController.html":{},"controllers/OrderController.html":{},"controllers/RoleController.html":{}}}],["common/decorators/roles.decorator",{"_index":331,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["common/exception/api.exception",{"_index":398,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["common/guard/role.guard",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["common/interfaces/active",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["common/interfaces/query",{"_index":364,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["common/utils/datafilter",{"_index":520,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["common/utils/hash",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["companies",{"_index":337,"title":{},"body":{"controllers/CompanyController.html":{}}}],["company",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"guards/RolesGuard.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["company.controller",{"_index":357,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.interface",{"_index":334,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["company.service",{"_index":335,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.service",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["companycontroller",{"_index":305,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companyentity",{"_index":394,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companyentity().extend",{"_index":410,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companyid",{"_index":11,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["companymodule",{"_index":74,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"index.html":{},"modules.html":{}}}],["companyquery",{"_index":312,"title":{"classes/CompanyQuery.html":{}},"body":{"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["companyrequest",{"_index":316,"title":{"classes/CompanyRequest.html":{}},"body":{"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["companyservice",{"_index":204,"title":{"injectables/CompanyService.html":{}},"body":{"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["compare",{"_index":294,"title":{},"body":{"injectables/BcryptService.html":{}}}],["compare(data",{"_index":296,"title":{},"body":{"injectables/BcryptService.html":{}}}],["compodoc/compodoc",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":823,"title":{},"body":{"classes/MenuBodyRequest.html":{},"miscellaneous/variables.html":{}}}],["components",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/animate/index.tsx",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/chart/index.tsx",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/editor/index.tsx",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/icon/index.tsx",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/markdown/index.tsx",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/multi",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/scroll/index.tsx",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/toast/index.tsx",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/upload/index.tsx",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components_permission",{"_index":1565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":619,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["config/app.config",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database.config",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["config/env.validation",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["config/jwt.config",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config/redis.config",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["configmodule.forroot",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"modules/RedisModule.html":{},"injectables/UserService.html":{}}}],["configservice.get(\"database",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"jwt\").secret",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":731,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":776,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["configure(options",{"_index":788,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["console.log(entities",{"_index":1489,"title":{},"body":{"modules/UserModule.html":{}}}],["const",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"classes/MatchConstraint.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":813,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(log4js_option",{"_index":782,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["constructor(configservice",{"_index":693,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/UserService.html":{}}}],["constructor(em",{"_index":1008,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["constructor(errormsg",{"_index":37,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(logger",{"_index":643,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/ProductService.html":{}}}],["constructor(options",{"_index":756,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["constructor(private",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/OrderController.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(redisclient",{"_index":1269,"title":{},"body":{"injectables/RedisService.html":{}}}],["constructor(reflector",{"_index":1381,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(repo",{"_index":375,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{}}}],["constructor(usersservice",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":474,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{}}}],["context",{"_index":699,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":706,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":705,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp",{"_index":1300,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":707,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":151,"title":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{}}}],["correct",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["cost",{"_index":1102,"title":{},"body":{"classes/ProductBodyRequest.html":{},"classes/ProductQuery.html":{}}}],["count",{"_index":401,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["coverage",{"_index":1557,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1045,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["create",{"_index":307,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":345,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["create(body",{"_index":315,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createoptionprovider",{"_index":736,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createoptionprovider(options",{"_index":744,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"miscellaneous/functions.html":{}}}],["createparamdecorator",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder",{"_index":544,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createquerybuilder(\"product",{"_index":530,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createtime",{"_index":1035,"title":{},"body":{"injectables/OrderService.html":{}}}],["crypto",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["ctx",{"_index":653,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ResponseInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ctx.getnext",{"_index":659,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":657,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":656,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":662,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["customdecorator",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customer",{"_index":527,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{}}}],["customer.controller",{"_index":462,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.discount",{"_index":1054,"title":{},"body":{"injectables/OrderService.html":{}}}],["customer.extend(rest",{"_index":558,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customer.interface",{"_index":441,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["customer.service",{"_index":443,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{}}}],["customer/customer.service",{"_index":1030,"title":{},"body":{"injectables/OrderService.html":{}}}],["customercontroller",{"_index":421,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"coverage.html":{}}}],["customerentity",{"_index":514,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customerentity().extend",{"_index":555,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customerid",{"_index":539,"title":{},"body":{"injectables/CustomerService.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["customermodule",{"_index":75,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"index.html":{},"modules.html":{}}}],["customerprice",{"_index":463,"title":{"classes/CustomerPrice.html":{}},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"coverage.html":{}}}],["customerpricerequest",{"_index":435,"title":{"classes/CustomerPriceRequest.html":{}},"body":{"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"coverage.html":{}}}],["customerquery",{"_index":425,"title":{"classes/CustomerQuery.html":{}},"body":{"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"coverage.html":{}}}],["customerrequest",{"_index":427,"title":{"classes/CustomerRequest.html":{}},"body":{"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"coverage.html":{}}}],["customers",{"_index":444,"title":{},"body":{"controllers/CustomerController.html":{}}}],["customerservice",{"_index":442,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"coverage.html":{},"index.html":{}}}],["dashboard",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard/analysis/index.tsx",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard/workbench/index.tsx",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard_permission",{"_index":1567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":299,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"classes/ResponseInterceptor.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["data.interface",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["data.interface.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["data.menus",{"_index":1375,"title":{},"body":{"injectables/RoleService.html":{}}}],["databaseconfig",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["datafilter",{"_index":519,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["datafilter(this.request.userentity",{"_index":526,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["datafilter(userentity",{"_index":1642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":959,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["date.now",{"_index":673,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["db_host",{"_index":562,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_name",{"_index":563,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_password",{"_index":564,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_port",{"_index":565,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["db_user",{"_index":566,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["debug",{"_index":751,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["debug(message",{"_index":758,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["decorators",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthRequest.html":{},"classes/BaseQuery.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["default",{"_index":381,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/Log4jsService.html":{},"injectables/OrderService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"miscellaneous/variables.html":{}}}],["default_user",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":798,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["defaultmessage(args",{"_index":799,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":329,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"injectables/RedisService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["delete(\"/:id",{"_index":350,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["delete('/:id",{"_index":322,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["delete(key",{"_index":1272,"title":{},"body":{"injectables/RedisService.html":{}}}],["deleteddate",{"_index":531,"title":{},"body":{"injectables/CustomerService.html":{}}}],["deliver",{"_index":475,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{}}}],["delivertype",{"_index":472,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{}}}],["demo1234",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["department",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":478,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":894,"title":{},"body":{"injectables/MenuService.html":{}}}],["detail",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":612,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{}}}],["dfdf",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1623,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discount",{"_index":465,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["documentation",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["duotone",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamicmodule",{"_index":734,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["e",{"_index":1083,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["east",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efaa20ea",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":546,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/RoleService.html":{}}}],["element.children?.length",{"_index":1370,"title":{},"body":{"injectables/RoleService.html":{}}}],["element.discount",{"_index":550,"title":{},"body":{"injectables/CustomerService.html":{}}}],["element.price",{"_index":551,"title":{},"body":{"injectables/CustomerService.html":{}}}],["em",{"_index":895,"title":{},"body":{"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/TemplateService.html":{},"miscellaneous/functions.html":{}}}],["email",{"_index":12,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthService.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1624,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":620,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["encrypted",{"_index":297,"title":{},"body":{"injectables/BcryptService.html":{}}}],["enddate",{"_index":960,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["entities",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["entity",{"_index":417,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["entitymanager",{"_index":513,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"miscellaneous/functions.html":{}}}],["entitymanager.findoneby",{"_index":1445,"title":{},"body":{"injectables/TemplateService.html":{}}}],["entitymanager.findoneby(productentity",{"_index":1449,"title":{},"body":{"injectables/TemplateService.html":{}}}],["entitymanager.findonebyorfail",{"_index":1063,"title":{},"body":{"injectables/OrderService.html":{}}}],["entitymanager.findonebyorfail(productentity",{"_index":1070,"title":{},"body":{"injectables/OrderService.html":{}}}],["entitymanager.save(child",{"_index":1441,"title":{},"body":{"injectables/TemplateService.html":{}}}],["entitymanager.save(order",{"_index":1081,"title":{},"body":{"injectables/OrderService.html":{}}}],["entitymanager.save(orderentity",{"_index":1052,"title":{},"body":{"injectables/OrderService.html":{}}}],["entitymanager.save(pricesentities",{"_index":554,"title":{},"body":{"injectables/CustomerService.html":{}}}],["enum",{"_index":611,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["enumerations",{"_index":1619,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":591,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{}}}],["environmentvariables",{"_index":560,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["equal",{"_index":511,"title":{},"body":{"injectables/CustomerService.html":{}}}],["error",{"_index":663,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"miscellaneous/variables.html":{}}}],["error(errormessage",{"_index":637,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error(message",{"_index":761,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["errorcode",{"_index":29,"title":{},"body":{"classes/ApiException.html":{}}}],["errordata",{"_index":30,"title":{},"body":{"classes/ApiException.html":{}}}],["errormessage",{"_index":624,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errormsg",{"_index":31,"title":{},"body":{"classes/ApiException.html":{}}}],["errors",{"_index":621,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors.length",{"_index":636,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors_permission",{"_index":1569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exception",{"_index":650,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrorcode",{"_index":669,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrordata",{"_index":671,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrormsg",{"_index":670,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":666,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception/api.exception",{"_index":652,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception?.message",{"_index":685,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":641,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["excludeids",{"_index":1185,"title":{},"body":{"injectables/ProductService.html":{}}}],["execute",{"_index":545,"title":{},"body":{"injectables/CustomerService.html":{}}}],["executioncontext",{"_index":697,"title":{},"body":{"guards/JwtAuthGuard.html":{},"classes/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["expired",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired/index.tsx",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["expose",{"_index":678,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["express",{"_index":702,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["extends",{"_index":26,"title":{},"body":{"classes/ApiException.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["external",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["external_link",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":383,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["fgred",{"_index":633,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["field",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["finance",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":413,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(fullname",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["findoptionsrelationbystring",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["findoptionsrelations",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["findtrees",{"_index":907,"title":{},"body":{"injectables/MenuService.html":{}}}],["flushall",{"_index":752,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["flushall(cb",{"_index":764,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["forroot",{"_index":729,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["forroot(options",{"_index":730,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["frame",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framesrc",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullname",{"_index":473,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["function",{"_index":615,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"coverage.html":{}}}],["functions",{"_index":1627,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions/clipboard/index.tsx",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions/token",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions_permission",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateaccesstoken",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateaccesstoken(user",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["gensalt",{"_index":302,"title":{},"body":{"injectables/BcryptService.html":{}}}],["get(\"/:id",{"_index":342,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["get(\"/:id/categories",{"_index":882,"title":{},"body":{"controllers/MenuController-1.html":{},"controllers/OrderController.html":{}}}],["get(\"/:id/permission",{"_index":1321,"title":{},"body":{"controllers/RoleController.html":{}}}],["get(\"/:id/products",{"_index":451,"title":{},"body":{"controllers/CustomerController.html":{}}}],["get(\"profile",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/:id",{"_index":319,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["get('/:id/categories",{"_index":872,"title":{},"body":{"controllers/MenuController-1.html":{},"controllers/OrderController.html":{}}}],["get('/:id/permission",{"_index":1315,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/:id/products",{"_index":431,"title":{},"body":{"controllers/CustomerController.html":{}}}],["get(key",{"_index":1275,"title":{},"body":{"injectables/RedisService.html":{}}}],["getbyid",{"_index":373,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["getbyid(id",{"_index":385,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["getbyidwithcategories",{"_index":1006,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["getbyidwithcategories(id",{"_index":1017,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["getbyidwitherror",{"_index":493,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["getbyidwitherror(id",{"_index":503,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["getbyidwithpermission",{"_index":1337,"title":{},"body":{"injectables/RoleService.html":{}}}],["getbyidwithpermission(id",{"_index":1345,"title":{},"body":{"injectables/RoleService.html":{}}}],["geterrorcode",{"_index":33,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrordata",{"_index":34,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrormsg",{"_index":35,"title":{},"body":{"classes/ApiException.html":{}}}],["getkeys",{"_index":1267,"title":{},"body":{"injectables/RedisService.html":{}}}],["getkeys(pattern",{"_index":1278,"title":{},"body":{"injectables/RedisService.html":{}}}],["getlogger",{"_index":753,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["getlogger(loggername",{"_index":767,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["getmanyandcount",{"_index":540,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getpricebyid",{"_index":494,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getpricebyid(id",{"_index":505,"title":{},"body":{"injectables/CustomerService.html":{}}}],["gettoken",{"_index":692,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["gettoken(request",{"_index":700,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["gettreerepository(menuentity",{"_index":906,"title":{},"body":{"injectables/MenuService.html":{}}}],["getvalidmenus",{"_index":1338,"title":{},"body":{"injectables/RoleService.html":{}}}],["getvalidmenus(menus",{"_index":1347,"title":{},"body":{"injectables/RoleService.html":{}}}],["global",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["guard",{"_index":687,"title":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":688,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["hash",{"_index":295,"title":{},"body":{"injectables/BcryptService.html":{}}}],["hash(data",{"_index":300,"title":{},"body":{"injectables/BcryptService.html":{}}}],["hashpwd",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashpwd(body.password",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpwd(pass",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpwd(password",{"_index":1643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hello",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidetab",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":647,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":654,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpcode",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MenuService.html":{}}}],["httpcode(httpstatus.ok",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@get('profile",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('sign",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@public()@post('sign",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":27,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":638,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ant.design",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["httpstatus.ok",{"_index":416,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["i18n",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ic",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ic_blank",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ic_disabled",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ic_external",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ic_label",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":824,"title":{},"body":{"classes/MenuBodyRequest.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":13,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1401,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["if(!exception",{"_index":660,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["if(exception",{"_index":675,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["if(userentity.role?.label",{"_index":1389,"title":{},"body":{"guards/RolesGuard.html":{}}}],["iframe",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignore",{"_index":740,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["ilike",{"_index":1148,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["ilike(`%${name",{"_index":1150,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["implements",{"_index":640,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"modules/RedisModule.html":{},"classes/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":54,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["in(categories.map((c",{"_index":1041,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["in(menus",{"_index":1379,"title":{},"body":{"injectables/RoleService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":359,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CustomerQuery.html":{},"classes/OrderQuery.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/TemplateQuery.html":{},"classes/UserQuery.html":{}}}],["inject",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/TemplateService.html":{}}}],["inject(iorediskey",{"_index":1285,"title":{},"body":{"injectables/RedisService.html":{}}}],["inject(request",{"_index":525,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["injectable",{"_index":224,"title":{"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectrepository",{"_index":397,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["injectrepository(companyentity",{"_index":399,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectrepository(customerentity",{"_index":522,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectrepository(menuentity",{"_index":903,"title":{},"body":{"injectables/MenuService.html":{}}}],["injectrepository(ordercategoryentity",{"_index":1032,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectrepository(orderentity",{"_index":1031,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectrepository(orderproductentity",{"_index":1033,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectrepository(productcategoryentity",{"_index":1149,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["injectrepository(productentity",{"_index":523,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductService.html":{}}}],["injectrepository(productpriceentity",{"_index":524,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectrepository(productunitentity",{"_index":1242,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["injectrepository(roleentity",{"_index":1357,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(templatecategoryentity",{"_index":1430,"title":{},"body":{"injectables/TemplateService.html":{}}}],["injectrepository(templatecategoryproductentity",{"_index":1431,"title":{},"body":{"injectables/TemplateService.html":{}}}],["injectrepository(templateentity",{"_index":1429,"title":{},"body":{"injectables/TemplateService.html":{}}}],["injectrepository(userentity",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["innerjoinandselect(\"product.category",{"_index":534,"title":{},"body":{"injectables/CustomerService.html":{}}}],["innerjoinandselect(\"product.unit",{"_index":532,"title":{},"body":{"injectables/CustomerService.html":{}}}],["insert",{"_index":1268,"title":{},"body":{"injectables/RedisService.html":{}}}],["insert(key",{"_index":1281,"title":{},"body":{"injectables/RedisService.html":{}}}],["instanceof",{"_index":664,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["intercept",{"_index":1294,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":1295,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveUserData.html":{}}}],["ioredis",{"_index":1254,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{},"miscellaneous/variables.html":{}}}],["iorediskey",{"_index":1257,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":1500,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["isarray",{"_index":471,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{}}}],["isboolean",{"_index":1496,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["isdate",{"_index":947,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["isemail",{"_index":1497,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["isenum",{"_index":607,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isenum(environment",{"_index":592,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isglobal",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":608,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isnotempty()@isnumber",{"_index":588,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isnull",{"_index":512,"title":{},"body":{"injectables/CustomerService.html":{}}}],["isnumber",{"_index":363,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["isnumber()@isnotempty",{"_index":585,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isnumber()@max(100)@min(0",{"_index":834,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["isnumber()@max(2)@min(0",{"_index":1092,"title":{},"body":{"classes/OrderStatusRequest.html":{}}}],["isoptional",{"_index":609,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["ispublic",{"_index":703,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["isstring",{"_index":220,"title":{},"body":{"classes/AuthRequest.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["isstring()@isnotempty",{"_index":581,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isstring()@isoptional",{"_index":598,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isvalidtoken",{"_index":716,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["join(\"\\n",{"_index":628,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["jwt_access_token_ttl",{"_index":567,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["jwt_secret",{"_index":568,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["jwtauthguard",{"_index":114,"title":{"guards/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["kanban",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1274,"title":{},"body":{"injectables/RedisService.html":{},"injectables/RoleService.html":{}}}],["keyof",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":825,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language/index.tsx",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leftjoinandselect",{"_index":536,"title":{},"body":{"injectables/CustomerService.html":{}}}],["legend",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["length",{"_index":1136,"title":{},"body":{"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/RoleService.html":{}}}],["lessthan",{"_index":1026,"title":{},"body":{"injectables/OrderService.html":{}}}],["level",{"_index":476,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["level/menu",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["like(`%${name",{"_index":1187,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{}}}],["link",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link.tsx",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint/complexity/nostaticonlyclass",{"_index":741,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["literal",{"_index":1513,"title":{},"body":{"classes/UserSearchModel.html":{}}}],["load",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["loadrelationids",{"_index":386,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/RoleService.html":{}}}],["lodash",{"_index":392,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/OrderService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{}}}],["log",{"_index":754,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log(message",{"_index":771,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log4js",{"_index":735,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{}}}],["log4js.constants",{"_index":779,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log4js.default.config",{"_index":781,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["log4js.provider",{"_index":737,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["log4js.service",{"_index":738,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["log4js_option",{"_index":778,"title":{},"body":{"injectables/Log4jsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log4jservice",{"_index":339,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["log4jsglobalmodule",{"_index":76,"title":{"modules/Log4jsGlobalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"index.html":{},"modules.html":{}}}],["log4jsglobalmodule.forroot",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["log4jsmodule",{"_index":742,"title":{"modules/Log4jsModule.html":{}},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"index.html":{},"modules.html":{}}}],["log4jsservice",{"_index":332,"title":{"injectables/Log4jsService.html":{}},"body":{"controllers/CompanyController.html":{},"classes/HttpExceptionFilter.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{},"index.html":{}}}],["logger",{"_index":645,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/ProductService.html":{}}}],["loggername",{"_index":769,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["loggers",{"_index":750,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["loggerservice",{"_index":777,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["login",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(body",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":1367,"title":{},"body":{"injectables/RoleService.html":{}}}],["m.showed",{"_index":1368,"title":{},"body":{"injectables/RoleService.html":{}}}],["management",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/system/organization/index.tsx",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/system/permission/index.tsx",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/system/role/index.tsx",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/system/user/detail.tsx",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/system/user/index.tsx",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/user/account/index.tsx",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/user/profile/index.tsx",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management_permission",{"_index":1571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":625,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{}}}],["map((data",{"_index":1302,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["markdown",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marketing",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":815,"title":{},"body":{"classes/MatchConstraint.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["match(property",{"_index":809,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["matchconstraint",{"_index":795,"title":{"classes/MatchConstraint.html":{}},"body":{"classes/MatchConstraint.html":{},"coverage.html":{}}}],["matching",{"_index":21,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":840,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["max(100",{"_index":842,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["max(2",{"_index":956,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["menu",{"_index":909,"title":{},"body":{"injectables/MenuService.html":{},"injectables/RoleService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["menu.children",{"_index":1360,"title":{},"body":{"injectables/RoleService.html":{}}}],["menu.children?.filter((c",{"_index":1364,"title":{},"body":{"injectables/RoleService.html":{}}}],["menu.children?.length",{"_index":1359,"title":{},"body":{"injectables/RoleService.html":{}}}],["menu.children[key",{"_index":1361,"title":{},"body":{"injectables/RoleService.html":{}}}],["menu.controller",{"_index":892,"title":{},"body":{"modules/MenuModule.html":{}}}],["menu.interface",{"_index":853,"title":{},"body":{"controllers/MenuController.html":{},"injectables/MenuService.html":{}}}],["menu.parent",{"_index":912,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.parentid",{"_index":910,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu.service",{"_index":854,"title":{},"body":{"controllers/MenuController.html":{},"modules/MenuModule.html":{}}}],["menu/menu.service",{"_index":1486,"title":{},"body":{"modules/UserModule.html":{}}}],["menu?.parent?.id",{"_index":911,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu_level_permission",{"_index":1572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["menubodyrequest",{"_index":365,"title":{"classes/MenuBodyRequest.html":{}},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"injectables/MenuService.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"coverage.html":{}}}],["menucontroller",{"_index":844,"title":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{}},"body":{"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"modules/TemplateModule.html":{},"coverage.html":{}}}],["menuentity",{"_index":395,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"miscellaneous/functions.html":{}}}],["menuentity().extend",{"_index":915,"title":{},"body":{"injectables/MenuService.html":{},"injectables/RoleService.html":{}}}],["menuids",{"_index":1348,"title":{},"body":{"injectables/RoleService.html":{}}}],["menulevel",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menumodule",{"_index":77,"title":{"modules/MenuModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"index.html":{},"modules.html":{}}}],["menus",{"_index":855,"title":{},"body":{"controllers/MenuController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{}}}],["menus[key",{"_index":1369,"title":{},"body":{"injectables/RoleService.html":{}}}],["menuservice",{"_index":205,"title":{"injectables/MenuService.html":{}},"body":{"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"controllers/MenuController.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"coverage.html":{},"index.html":{}}}],["menutree",{"_index":1374,"title":{},"body":{"injectables/RoleService.html":{}}}],["message",{"_index":626,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"injectables/Log4jsService.html":{},"classes/ResponseInterceptor.html":{}}}],["message.constraints?.[object.keys(message.constraints)[0",{"_index":627,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["methods",{"_index":32,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["migrationexecutor",{"_index":1598,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["migrationexecutor(em",{"_index":1639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["min",{"_index":841,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["min(0",{"_index":843,"title":{},"body":{"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["miscellaneous",{"_index":1618,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["moduleref",{"_index":1256,"title":{},"body":{"modules/RedisModule.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["modules/auth/auth.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/guards/jwt",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/company/company.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/customer/customer.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/log4js",{"_index":333,"title":{},"body":{"controllers/CompanyController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["modules/log4js/log4js.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/menu/menu.interface",{"_index":366,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{}}}],["modules/menu/menu.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/menu/menu.service",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["modules/product/product.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["modules/product/product.service",{"_index":521,"title":{},"body":{"injectables/CustomerService.html":{},"modules/OrderModule.html":{},"modules/TemplateModule.html":{}}}],["modules/productcategory/category.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/productcategory/category.service",{"_index":992,"title":{},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/TemplateModule.html":{}}}],["modules/productunit/unit.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/productunit/unit.service",{"_index":993,"title":{},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/TemplateModule.html":{}}}],["modules/redis/redis.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/redis/redis.service",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["modules/role/role.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/role/role.service",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modules/template/template.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.service",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["modulewithhotreload",{"_index":1593,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["morethan",{"_index":1027,"title":{},"body":{"injectables/OrderService.html":{}}}],["multi",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1293,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["nestjs/common",{"_index":56,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/config",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"modules/RedisModule.html":{},"injectables/UserService.html":{}}}],["nestjs/core",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"modules/MenuModule.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{}}}],["nestjs/jwt",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["nestjs/typeorm",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/ProductUnitModule.html":{},"injectables/ProductUnitService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["new",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newfeature",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":658,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ResponseInterceptor.html":{}}}],["next(exception",{"_index":676,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["next.handle().pipe",{"_index":1301,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["nick1@126.com",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nick@126.com",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node_env",{"_index":569,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["not(in(excludeids",{"_index":1188,"title":{},"body":{"injectables/ProductService.html":{}}}],["not(in(query.ids",{"_index":1436,"title":{},"body":{"injectables/TemplateService.html":{}}}],["null",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":15,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/BaseQuery.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["object",{"_index":292,"title":{},"body":{"classes/BaseQuery.html":{},"classes/MatchConstraint.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["object.constructor",{"_index":812,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["observable",{"_index":1298,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["onapplicationshutdown",{"_index":1249,"title":{},"body":{"modules/RedisModule.html":{}}}],["onapplicationshutdown(signal",{"_index":1250,"title":{},"body":{"modules/RedisModule.html":{}}}],["one",{"_index":308,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["one(@param(\"id",{"_index":343,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["one(id",{"_index":318,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["oneandmenus",{"_index":1308,"title":{},"body":{"controllers/RoleController.html":{}}}],["oneandmenus(@param(\"id",{"_index":1322,"title":{},"body":{"controllers/RoleController.html":{}}}],["oneandmenus(id",{"_index":1314,"title":{},"body":{"controllers/RoleController.html":{}}}],["onewithcategories",{"_index":865,"title":{},"body":{"controllers/MenuController-1.html":{},"controllers/OrderController.html":{}}}],["onewithcategories(@param(\"id",{"_index":883,"title":{},"body":{"controllers/MenuController-1.html":{},"controllers/OrderController.html":{}}}],["onewithcategories(id",{"_index":871,"title":{},"body":{"controllers/MenuController-1.html":{},"controllers/OrderController.html":{}}}],["optional",{"_index":46,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"classes/CustomerQuery.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optionprovider",{"_index":743,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["options",{"_index":733,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":826,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/OrderService.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"miscellaneous/variables.html":{}}}],["order.controller",{"_index":994,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.extend(body",{"_index":1090,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.extend(rest",{"_index":1086,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.id",{"_index":1057,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.interface",{"_index":974,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.service",{"_index":976,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order.status",{"_index":1087,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.totalprice",{"_index":1059,"title":{},"body":{"injectables/OrderService.html":{}}}],["order/order.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercategory",{"_index":937,"title":{"classes/OrderCategory.html":{}},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["ordercategoryentity",{"_index":1028,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordercategoryentity().extend",{"_index":1065,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordercontroller",{"_index":962,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderentity",{"_index":1022,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderentity().extend",{"_index":1084,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderid",{"_index":1038,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordermodule",{"_index":78,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"index.html":{},"modules.html":{}}}],["orderproduct",{"_index":942,"title":{"classes/OrderProduct.html":{}},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["orderproduct.totalprice",{"_index":1078,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderproductentity",{"_index":1029,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderproductentity().extend",{"_index":1072,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderquery",{"_index":961,"title":{"classes/OrderQuery.html":{}},"body":{"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["orderrequest",{"_index":952,"title":{"classes/OrderRequest.html":{}},"body":{"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["orders",{"_index":977,"title":{},"body":{"controllers/OrderController.html":{}}}],["orderservice",{"_index":975,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"index.html":{}}}],["orderstatus",{"_index":948,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["orderstatus.unpayed",{"_index":1055,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderstatusrequest",{"_index":955,"title":{"classes/OrderStatusRequest.html":{}},"body":{"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["orderwhere",{"_index":957,"title":{"classes/OrderWhere.html":{}},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["org_list",{"_index":1573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["organization",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherconditions",{"_index":1186,"title":{},"body":{"injectables/ProductService.html":{}}}],["others_permission",{"_index":1574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["overview",{"_index":1644,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":1068,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["p.count",{"_index":1076,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["p.discount",{"_index":1075,"title":{},"body":{"injectables/OrderService.html":{}}}],["p.price",{"_index":1074,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["p.productid",{"_index":1071,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["package",{"_index":1614,"title":{"dependencies.html":{}},"body":{}}],["packages/.../active",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../assets.ts",{"_index":1621,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/.../auth.controller.ts",{"_index":1655,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../datafilter.ts",{"_index":1632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../env.validation.ts",{"_index":1622,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["packages/.../hash.ts",{"_index":1633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../log4js.constants.ts",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../log4js.default.config.ts",{"_index":1630,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../log4js.provider.ts",{"_index":1631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../main.ts",{"_index":1629,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["packages/.../match.decorator.ts",{"_index":1634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../migrate.ts",{"_index":1628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../public.decorator.ts",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../redis.constants.ts",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../roles.decorator.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/server/src/assets.ts",{"_index":1561,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/common/decorators/active",{"_index":1579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/common/decorators/match.decorator.ts",{"_index":796,"title":{},"body":{"classes/MatchConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/common/decorators/match.decorator.ts:23",{"_index":804,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["packages/server/src/common/decorators/match.decorator.ts:28",{"_index":801,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["packages/server/src/common/decorators/public.decorator.ts",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/common/decorators/roles.decorator.ts",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/common/exception/api.exception.ts",{"_index":25,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["packages/server/src/common/exception/api.exception.ts:22",{"_index":53,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/common/exception/api.exception.ts:26",{"_index":50,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/common/exception/api.exception.ts:30",{"_index":52,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/common/exception/api.exception.ts:5",{"_index":49,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/common/exception/api.exception.ts:6",{"_index":48,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/common/exception/api.exception.ts:7",{"_index":43,"title":{},"body":{"classes/ApiException.html":{}}}],["packages/server/src/common/filter/http.exception.filter.ts",{"_index":639,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["packages/server/src/common/filter/http.exception.filter.ts:15",{"_index":644,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["packages/server/src/common/filter/http.exception.filter.ts:18",{"_index":649,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["packages/server/src/common/guard/role.guard.ts",{"_index":1380,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["packages/server/src/common/guard/role.guard.ts:12",{"_index":1383,"title":{},"body":{"guards/RolesGuard.html":{}}}],["packages/server/src/common/guard/role.guard.ts:9",{"_index":1382,"title":{},"body":{"guards/RolesGuard.html":{}}}],["packages/server/src/common/interceptor/res.interceptor.ts",{"_index":1292,"title":{},"body":{"classes/ResponseInterceptor.html":{},"coverage.html":{}}}],["packages/server/src/common/interceptor/res.interceptor.ts:6",{"_index":1297,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["packages/server/src/common/interfaces/active",{"_index":6,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["packages/server/src/common/interfaces/query.ts",{"_index":283,"title":{},"body":{"classes/BaseQuery.html":{},"coverage.html":{}}}],["packages/server/src/common/interfaces/query.ts:11",{"_index":290,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/common/interfaces/query.ts:5",{"_index":287,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/common/interfaces/query.ts:8",{"_index":288,"title":{},"body":{"classes/BaseQuery.html":{}}}],["packages/server/src/common/utils/datafilter.ts",{"_index":1588,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/common/utils/hash.ts",{"_index":1589,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/config/env.validation.ts",{"_index":561,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/config/env.validation.ts:19",{"_index":593,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:23",{"_index":594,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:27",{"_index":582,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:31",{"_index":586,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:35",{"_index":587,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:39",{"_index":584,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:43",{"_index":583,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:47",{"_index":596,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:51",{"_index":600,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:55",{"_index":601,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:59",{"_index":599,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:63",{"_index":595,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:67",{"_index":597,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:71",{"_index":590,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:75",{"_index":589,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:79",{"_index":605,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:83",{"_index":603,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:87",{"_index":602,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/config/env.validation.ts:91",{"_index":604,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["packages/server/src/main.ts",{"_index":1591,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["packages/server/src/migrate.ts",{"_index":1594,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/modules/app/app.module.ts",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts:29",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts:35",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["packages/server/src/modules/auth/auth.controller.ts:43",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["packages/server/src/modules/auth/auth.interface.ts",{"_index":217,"title":{},"body":{"classes/AuthRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/auth.interface.ts:5",{"_index":222,"title":{},"body":{"classes/AuthRequest.html":{}}}],["packages/server/src/modules/auth/auth.interface.ts:7",{"_index":221,"title":{},"body":{"classes/AuthRequest.html":{}}}],["packages/server/src/modules/auth/auth.module.ts",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["packages/server/src/modules/auth/auth.service.ts",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:16",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:25",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:40",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:56",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:60",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/auth.service.ts:75",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/server/src/modules/auth/bcrypt.service.ts",{"_index":293,"title":{},"body":{"injectables/BcryptService.html":{},"coverage.html":{}}}],["packages/server/src/modules/auth/bcrypt.service.ts:11",{"_index":298,"title":{},"body":{"injectables/BcryptService.html":{}}}],["packages/server/src/modules/auth/bcrypt.service.ts:6",{"_index":301,"title":{},"body":{"injectables/BcryptService.html":{}}}],["packages/server/src/modules/auth/guards/jwt",{"_index":689,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["packages/server/src/modules/company/company.controller.ts",{"_index":306,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["packages/server/src/modules/company/company.controller.ts:31",{"_index":313,"title":{},"body":{"controllers/CompanyController.html":{}}}],["packages/server/src/modules/company/company.controller.ts:36",{"_index":320,"title":{},"body":{"controllers/CompanyController.html":{}}}],["packages/server/src/modules/company/company.controller.ts:41",{"_index":317,"title":{},"body":{"controllers/CompanyController.html":{}}}],["packages/server/src/modules/company/company.controller.ts:46",{"_index":326,"title":{},"body":{"controllers/CompanyController.html":{}}}],["packages/server/src/modules/company/company.controller.ts:51",{"_index":323,"title":{},"body":{"controllers/CompanyController.html":{}}}],["packages/server/src/modules/company/company.interface.ts",{"_index":358,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/company/company.interface.ts:11",{"_index":370,"title":{},"body":{"classes/CompanyRequest.html":{}}}],["packages/server/src/modules/company/company.interface.ts:13",{"_index":369,"title":{},"body":{"classes/CompanyRequest.html":{}}}],["packages/server/src/modules/company/company.interface.ts:15",{"_index":371,"title":{},"body":{"classes/CompanyRequest.html":{}}}],["packages/server/src/modules/company/company.module.ts",{"_index":356,"title":{},"body":{"modules/CompanyModule.html":{}}}],["packages/server/src/modules/company/company.service.ts",{"_index":372,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["packages/server/src/modules/company/company.service.ts:18",{"_index":377,"title":{},"body":{"injectables/CompanyService.html":{}}}],["packages/server/src/modules/company/company.service.ts:23",{"_index":380,"title":{},"body":{"injectables/CompanyService.html":{}}}],["packages/server/src/modules/company/company.service.ts:43",{"_index":387,"title":{},"body":{"injectables/CompanyService.html":{}}}],["packages/server/src/modules/company/company.service.ts:60",{"_index":384,"title":{},"body":{"injectables/CompanyService.html":{}}}],["packages/server/src/modules/company/company.service.ts:69",{"_index":390,"title":{},"body":{"injectables/CompanyService.html":{}}}],["packages/server/src/modules/company/company.service.ts:90",{"_index":389,"title":{},"body":{"injectables/CompanyService.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts",{"_index":422,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:36",{"_index":426,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:41",{"_index":429,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:46",{"_index":428,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:54",{"_index":438,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:63",{"_index":432,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:68",{"_index":437,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.controller.ts:76",{"_index":433,"title":{},"body":{"controllers/CustomerController.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts",{"_index":464,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:11",{"_index":482,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:14",{"_index":490,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:17",{"_index":486,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:20",{"_index":481,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:23",{"_index":483,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:26",{"_index":488,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:29",{"_index":485,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:32",{"_index":491,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:35",{"_index":489,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:38",{"_index":484,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:43",{"_index":469,"title":{},"body":{"classes/CustomerPrice.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:46",{"_index":468,"title":{},"body":{"classes/CustomerPrice.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:49",{"_index":470,"title":{},"body":{"classes/CustomerPrice.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:54",{"_index":480,"title":{},"body":{"classes/CustomerPriceRequest.html":{}}}],["packages/server/src/modules/customer/customer.interface.ts:8",{"_index":487,"title":{},"body":{"classes/CustomerRequest.html":{}}}],["packages/server/src/modules/customer/customer.module.ts",{"_index":461,"title":{},"body":{"modules/CustomerModule.html":{}}}],["packages/server/src/modules/customer/customer.service.ts",{"_index":492,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:111",{"_index":509,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:144",{"_index":501,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:158",{"_index":510,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:167",{"_index":507,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:28",{"_index":499,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:39",{"_index":500,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:60",{"_index":502,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:74",{"_index":504,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/customer/customer.service.ts:92",{"_index":506,"title":{},"body":{"injectables/CustomerService.html":{}}}],["packages/server/src/modules/log4js/log4js.constants.ts",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/modules/log4js/log4js.default.config.ts",{"_index":1604,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/modules/log4js/log4js.module.ts",{"_index":727,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["packages/server/src/modules/log4js/log4js.module.ts:13",{"_index":748,"title":{},"body":{"modules/Log4jsModule.html":{}}}],["packages/server/src/modules/log4js/log4js.module.ts:30",{"_index":732,"title":{},"body":{"modules/Log4jsGlobalModule.html":{}}}],["packages/server/src/modules/log4js/log4js.provider.ts",{"_index":1606,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts",{"_index":749,"title":{},"body":{"injectables/Log4jsService.html":{},"coverage.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:10",{"_index":757,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:21",{"_index":768,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:30",{"_index":772,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:34",{"_index":763,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:38",{"_index":774,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:42",{"_index":759,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/log4js/log4js.service.ts:46",{"_index":765,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts",{"_index":845,"title":{},"body":{"controllers/MenuController.html":{},"coverage.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:20",{"_index":851,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:25",{"_index":848,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:30",{"_index":847,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:35",{"_index":852,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.controller.ts:40",{"_index":849,"title":{},"body":{"controllers/MenuController.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts",{"_index":822,"title":{},"body":{"classes/MenuBodyRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:10",{"_index":833,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:12",{"_index":830,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:14",{"_index":839,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:16",{"_index":837,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:20",{"_index":835,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:21",{"_index":836,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:22",{"_index":829,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:5",{"_index":831,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.interface.ts:8",{"_index":832,"title":{},"body":{"classes/MenuBodyRequest.html":{}}}],["packages/server/src/modules/menu/menu.module.ts",{"_index":891,"title":{},"body":{"modules/MenuModule.html":{}}}],["packages/server/src/modules/menu/menu.service.ts",{"_index":893,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:112",{"_index":902,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:138",{"_index":901,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:17",{"_index":896,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:28",{"_index":897,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:43",{"_index":899,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:71",{"_index":900,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/menu/menu.service.ts:94",{"_index":898,"title":{},"body":{"injectables/MenuService.html":{}}}],["packages/server/src/modules/order/order.controller.ts",{"_index":963,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["packages/server/src/modules/order/order.controller.ts:36",{"_index":965,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.controller.ts:41",{"_index":967,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.controller.ts:46",{"_index":968,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.controller.ts:51",{"_index":966,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.controller.ts:59",{"_index":970,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.controller.ts:68",{"_index":973,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.controller.ts:77",{"_index":969,"title":{},"body":{"controllers/OrderController.html":{}}}],["packages/server/src/modules/order/order.interface.ts",{"_index":938,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"coverage.html":{}}}],["packages/server/src/modules/order/order.interface.ts:16",{"_index":998,"title":{},"body":{"classes/OrderProduct.html":{}}}],["packages/server/src/modules/order/order.interface.ts:18",{"_index":997,"title":{},"body":{"classes/OrderProduct.html":{}}}],["packages/server/src/modules/order/order.interface.ts:20",{"_index":995,"title":{},"body":{"classes/OrderProduct.html":{}}}],["packages/server/src/modules/order/order.interface.ts:22",{"_index":996,"title":{},"body":{"classes/OrderProduct.html":{}}}],["packages/server/src/modules/order/order.interface.ts:27",{"_index":940,"title":{},"body":{"classes/OrderCategory.html":{}}}],["packages/server/src/modules/order/order.interface.ts:30",{"_index":941,"title":{},"body":{"classes/OrderCategory.html":{}}}],["packages/server/src/modules/order/order.interface.ts:34",{"_index":944,"title":{},"body":{"classes/OrderCategory.html":{}}}],["packages/server/src/modules/order/order.interface.ts:39",{"_index":1002,"title":{},"body":{"classes/OrderRequest.html":{}}}],["packages/server/src/modules/order/order.interface.ts:42",{"_index":1001,"title":{},"body":{"classes/OrderRequest.html":{}}}],["packages/server/src/modules/order/order.interface.ts:45",{"_index":1000,"title":{},"body":{"classes/OrderRequest.html":{}}}],["packages/server/src/modules/order/order.interface.ts:47",{"_index":1003,"title":{},"body":{"classes/OrderRequest.html":{}}}],["packages/server/src/modules/order/order.interface.ts:51",{"_index":999,"title":{},"body":{"classes/OrderRequest.html":{}}}],["packages/server/src/modules/order/order.interface.ts:58",{"_index":1093,"title":{},"body":{"classes/OrderStatusRequest.html":{}}}],["packages/server/src/modules/order/order.interface.ts:63",{"_index":1097,"title":{},"body":{"classes/OrderWhere.html":{}}}],["packages/server/src/modules/order/order.interface.ts:66",{"_index":1095,"title":{},"body":{"classes/OrderWhere.html":{}}}],["packages/server/src/modules/order/order.interface.ts:69",{"_index":1094,"title":{},"body":{"classes/OrderWhere.html":{}}}],["packages/server/src/modules/order/order.interface.ts:72",{"_index":1098,"title":{},"body":{"classes/OrderWhere.html":{}}}],["packages/server/src/modules/order/order.interface.ts:75",{"_index":1096,"title":{},"body":{"classes/OrderWhere.html":{}}}],["packages/server/src/modules/order/order.module.ts",{"_index":991,"title":{},"body":{"modules/OrderModule.html":{}}}],["packages/server/src/modules/order/order.service.ts",{"_index":1004,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["packages/server/src/modules/order/order.service.ts:108",{"_index":1018,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:152",{"_index":1023,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:229",{"_index":1015,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:240",{"_index":1024,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:249",{"_index":1014,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:272",{"_index":1020,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:37",{"_index":1011,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:49",{"_index":1012,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:80",{"_index":1016,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/order/order.service.ts:90",{"_index":1019,"title":{},"body":{"injectables/OrderService.html":{}}}],["packages/server/src/modules/product/product.controller.ts",{"_index":1159,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["packages/server/src/modules/product/product.controller.ts:33",{"_index":1160,"title":{},"body":{"controllers/ProductController.html":{}}}],["packages/server/src/modules/product/product.controller.ts:38",{"_index":1162,"title":{},"body":{"controllers/ProductController.html":{}}}],["packages/server/src/modules/product/product.controller.ts:43",{"_index":1161,"title":{},"body":{"controllers/ProductController.html":{}}}],["packages/server/src/modules/product/product.controller.ts:51",{"_index":1164,"title":{},"body":{"controllers/ProductController.html":{}}}],["packages/server/src/modules/product/product.controller.ts:56",{"_index":1163,"title":{},"body":{"controllers/ProductController.html":{}}}],["packages/server/src/modules/product/product.interface.ts",{"_index":1100,"title":{},"body":{"classes/ProductBodyRequest.html":{},"classes/ProductQuery.html":{},"coverage.html":{}}}],["packages/server/src/modules/product/product.interface.ts:12",{"_index":1108,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:15",{"_index":1106,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:18",{"_index":1110,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:21",{"_index":1105,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:24",{"_index":1104,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:27",{"_index":1111,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:6",{"_index":1107,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.interface.ts:9",{"_index":1109,"title":{},"body":{"classes/ProductBodyRequest.html":{}}}],["packages/server/src/modules/product/product.module.ts",{"_index":1175,"title":{},"body":{"modules/ProductModule.html":{}}}],["packages/server/src/modules/product/product.service.ts",{"_index":1177,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["packages/server/src/modules/product/product.service.ts:115",{"_index":1184,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/product/product.service.ts:139",{"_index":1183,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/product/product.service.ts:18",{"_index":1178,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/product/product.service.ts:27",{"_index":1179,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/product/product.service.ts:56",{"_index":1181,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/product/product.service.ts:68",{"_index":1182,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/product/product.service.ts:86",{"_index":1180,"title":{},"body":{"injectables/ProductService.html":{}}}],["packages/server/src/modules/productcategory/category.controller.ts",{"_index":1114,"title":{},"body":{"controllers/ProductCategoryController.html":{},"coverage.html":{}}}],["packages/server/src/modules/productcategory/category.controller.ts:36",{"_index":1116,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["packages/server/src/modules/productcategory/category.controller.ts:44",{"_index":1119,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["packages/server/src/modules/productcategory/category.controller.ts:49",{"_index":1118,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["packages/server/src/modules/productcategory/category.controller.ts:57",{"_index":1121,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["packages/server/src/modules/productcategory/category.controller.ts:62",{"_index":1120,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["packages/server/src/modules/productcategory/category.interface.ts",{"_index":1135,"title":{},"body":{"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/productcategory/category.interface.ts:11",{"_index":1138,"title":{},"body":{"classes/ProductCategoryRequest.html":{}}}],["packages/server/src/modules/productcategory/category.interface.ts:14",{"_index":1137,"title":{},"body":{"classes/ProductCategoryRequest.html":{}}}],["packages/server/src/modules/productcategory/category.interface.ts:8",{"_index":1139,"title":{},"body":{"classes/ProductCategoryRequest.html":{}}}],["packages/server/src/modules/productcategory/category.module.ts",{"_index":1133,"title":{},"body":{"modules/ProductCategoryModule.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts",{"_index":1140,"title":{},"body":{"injectables/ProductCategoryService.html":{},"coverage.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:107",{"_index":1146,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:19",{"_index":1141,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:27",{"_index":1142,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:48",{"_index":1144,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:60",{"_index":1145,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:80",{"_index":1143,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productcategory/category.service.ts:94",{"_index":1147,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["packages/server/src/modules/productunit/unit.controller.ts",{"_index":1215,"title":{},"body":{"controllers/ProductUnitController.html":{},"coverage.html":{}}}],["packages/server/src/modules/productunit/unit.controller.ts:33",{"_index":1216,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["packages/server/src/modules/productunit/unit.controller.ts:41",{"_index":1218,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["packages/server/src/modules/productunit/unit.controller.ts:46",{"_index":1217,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["packages/server/src/modules/productunit/unit.controller.ts:54",{"_index":1220,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["packages/server/src/modules/productunit/unit.controller.ts:59",{"_index":1219,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["packages/server/src/modules/productunit/unit.interface.ts",{"_index":1208,"title":{},"body":{"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"coverage.html":{}}}],["packages/server/src/modules/productunit/unit.interface.ts:12",{"_index":1211,"title":{},"body":{"classes/ProductUnitBodyRequest.html":{}}}],["packages/server/src/modules/productunit/unit.interface.ts:15",{"_index":1209,"title":{},"body":{"classes/ProductUnitBodyRequest.html":{}}}],["packages/server/src/modules/productunit/unit.interface.ts:6",{"_index":1210,"title":{},"body":{"classes/ProductUnitBodyRequest.html":{}}}],["packages/server/src/modules/productunit/unit.interface.ts:9",{"_index":1212,"title":{},"body":{"classes/ProductUnitBodyRequest.html":{}}}],["packages/server/src/modules/productunit/unit.module.ts",{"_index":1232,"title":{},"body":{"modules/ProductUnitModule.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts",{"_index":1234,"title":{},"body":{"injectables/ProductUnitService.html":{},"coverage.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:102",{"_index":1240,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:16",{"_index":1235,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:23",{"_index":1236,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:44",{"_index":1238,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:56",{"_index":1239,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:74",{"_index":1237,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/productunit/unit.service.ts:89",{"_index":1241,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["packages/server/src/modules/redis/redis.constants.ts",{"_index":1611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/server/src/modules/redis/redis.module.ts",{"_index":1248,"title":{},"body":{"modules/RedisModule.html":{}}}],["packages/server/src/modules/redis/redis.module.ts:27",{"_index":1251,"title":{},"body":{"modules/RedisModule.html":{}}}],["packages/server/src/modules/redis/redis.service.ts",{"_index":1266,"title":{},"body":{"injectables/RedisService.html":{},"coverage.html":{}}}],["packages/server/src/modules/redis/redis.service.ts:13",{"_index":1279,"title":{},"body":{"injectables/RedisService.html":{}}}],["packages/server/src/modules/redis/redis.service.ts:17",{"_index":1282,"title":{},"body":{"injectables/RedisService.html":{}}}],["packages/server/src/modules/redis/redis.service.ts:21",{"_index":1277,"title":{},"body":{"injectables/RedisService.html":{}}}],["packages/server/src/modules/redis/redis.service.ts:25",{"_index":1273,"title":{},"body":{"injectables/RedisService.html":{}}}],["packages/server/src/modules/redis/redis.service.ts:29",{"_index":1284,"title":{},"body":{"injectables/RedisService.html":{}}}],["packages/server/src/modules/redis/redis.service.ts:7",{"_index":1270,"title":{},"body":{"injectables/RedisService.html":{}}}],["packages/server/src/modules/role/role.controller.ts",{"_index":1307,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["packages/server/src/modules/role/role.controller.ts:32",{"_index":1310,"title":{},"body":{"controllers/RoleController.html":{}}}],["packages/server/src/modules/role/role.controller.ts:37",{"_index":1313,"title":{},"body":{"controllers/RoleController.html":{}}}],["packages/server/src/modules/role/role.controller.ts:42",{"_index":1316,"title":{},"body":{"controllers/RoleController.html":{}}}],["packages/server/src/modules/role/role.controller.ts:47",{"_index":1312,"title":{},"body":{"controllers/RoleController.html":{}}}],["packages/server/src/modules/role/role.controller.ts:52",{"_index":1318,"title":{},"body":{"controllers/RoleController.html":{}}}],["packages/server/src/modules/role/role.controller.ts:57",{"_index":1317,"title":{},"body":{"controllers/RoleController.html":{}}}],["packages/server/src/modules/role/role.interface.ts",{"_index":1329,"title":{},"body":{"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"coverage.html":{}}}],["packages/server/src/modules/role/role.interface.ts:11",{"_index":1333,"title":{},"body":{"classes/RoleRequest.html":{}}}],["packages/server/src/modules/role/role.interface.ts:13",{"_index":1331,"title":{},"body":{"classes/RoleRequest.html":{}}}],["packages/server/src/modules/role/role.interface.ts:15",{"_index":1330,"title":{},"body":{"classes/RoleRequest.html":{}}}],["packages/server/src/modules/role/role.interface.ts:17",{"_index":1334,"title":{},"body":{"classes/RoleRequest.html":{}}}],["packages/server/src/modules/role/role.interface.ts:19",{"_index":1335,"title":{},"body":{"classes/RoleRequest.html":{}}}],["packages/server/src/modules/role/role.interface.ts:21",{"_index":1332,"title":{},"body":{"classes/RoleRequest.html":{}}}],["packages/server/src/modules/role/role.module.ts",{"_index":1327,"title":{},"body":{"modules/RoleModule.html":{}}}],["packages/server/src/modules/role/role.service.ts",{"_index":1336,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["packages/server/src/modules/role/role.service.ts:115",{"_index":1344,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:133",{"_index":1343,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:148",{"_index":1356,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:15",{"_index":1341,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:175",{"_index":1350,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:21",{"_index":1342,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:44",{"_index":1355,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:66",{"_index":1352,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:80",{"_index":1349,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/role/role.service.ts:94",{"_index":1346,"title":{},"body":{"injectables/RoleService.html":{}}}],["packages/server/src/modules/template/template.controller.ts",{"_index":864,"title":{},"body":{"controllers/MenuController-1.html":{},"coverage.html":{}}}],["packages/server/src/modules/template/template.controller.ts:33",{"_index":867,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:38",{"_index":870,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:43",{"_index":873,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:48",{"_index":869,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:56",{"_index":875,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.controller.ts:61",{"_index":874,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["packages/server/src/modules/template/template.interface.ts",{"_index":1393,"title":{},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"coverage.html":{}}}],["packages/server/src/modules/template/template.interface.ts:12",{"_index":1407,"title":{},"body":{"classes/TemplateCategoryProduct.html":{}}}],["packages/server/src/modules/template/template.interface.ts:14",{"_index":1406,"title":{},"body":{"classes/TemplateCategoryProduct.html":{}}}],["packages/server/src/modules/template/template.interface.ts:16",{"_index":1405,"title":{},"body":{"classes/TemplateCategoryProduct.html":{}}}],["packages/server/src/modules/template/template.interface.ts:21",{"_index":1402,"title":{},"body":{"classes/TemplateCategory.html":{}}}],["packages/server/src/modules/template/template.interface.ts:24",{"_index":1403,"title":{},"body":{"classes/TemplateCategory.html":{}}}],["packages/server/src/modules/template/template.interface.ts:28",{"_index":1404,"title":{},"body":{"classes/TemplateCategory.html":{}}}],["packages/server/src/modules/template/template.interface.ts:32",{"_index":1397,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:35",{"_index":1398,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:38",{"_index":1396,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:41",{"_index":1399,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:45",{"_index":1395,"title":{},"body":{"classes/TemplateBodyRequest.html":{}}}],["packages/server/src/modules/template/template.interface.ts:49",{"_index":1413,"title":{},"body":{"classes/TemplateQuery.html":{}}}],["packages/server/src/modules/template/template.module.ts",{"_index":1411,"title":{},"body":{"modules/TemplateModule.html":{}}}],["packages/server/src/modules/template/template.service.ts",{"_index":1414,"title":{},"body":{"injectables/TemplateService.html":{},"coverage.html":{}}}],["packages/server/src/modules/template/template.service.ts:136",{"_index":1425,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:221",{"_index":1419,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:23",{"_index":1417,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:238",{"_index":1426,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:249",{"_index":1423,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:34",{"_index":1418,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:62",{"_index":1420,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:74",{"_index":1422,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/template/template.service.ts:92",{"_index":1421,"title":{},"body":{"injectables/TemplateService.html":{}}}],["packages/server/src/modules/user/user.controller.ts",{"_index":1460,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["packages/server/src/modules/user/user.controller.ts:33",{"_index":1463,"title":{},"body":{"controllers/UserController.html":{}}}],["packages/server/src/modules/user/user.controller.ts:38",{"_index":1470,"title":{},"body":{"controllers/UserController.html":{}}}],["packages/server/src/modules/user/user.controller.ts:43",{"_index":1469,"title":{},"body":{"controllers/UserController.html":{}}}],["packages/server/src/modules/user/user.controller.ts:48",{"_index":1472,"title":{},"body":{"controllers/UserController.html":{}}}],["packages/server/src/modules/user/user.controller.ts:53",{"_index":1467,"title":{},"body":{"controllers/UserController.html":{}}}],["packages/server/src/modules/user/user.controller.ts:61",{"_index":1471,"title":{},"body":{"controllers/UserController.html":{}}}],["packages/server/src/modules/user/user.interface.ts",{"_index":1490,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"coverage.html":{}}}],["packages/server/src/modules/user/user.interface.ts:16",{"_index":1506,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:19",{"_index":1505,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:22",{"_index":1503,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:25",{"_index":1502,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:28",{"_index":1504,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:31",{"_index":1508,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:34",{"_index":1510,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:37",{"_index":1507,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:40",{"_index":1509,"title":{},"body":{"classes/UserRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:45",{"_index":1493,"title":{},"body":{"classes/UserPasswordRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:47",{"_index":1494,"title":{},"body":{"classes/UserPasswordRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:49",{"_index":1495,"title":{},"body":{"classes/UserPasswordRequest.html":{}}}],["packages/server/src/modules/user/user.interface.ts:54",{"_index":1511,"title":{},"body":{"classes/UserSearchModel.html":{}}}],["packages/server/src/modules/user/user.interface.ts:56",{"_index":1512,"title":{},"body":{"classes/UserSearchModel.html":{}}}],["packages/server/src/modules/user/user.interface.ts:58",{"_index":1514,"title":{},"body":{"classes/UserSearchModel.html":{}}}],["packages/server/src/modules/user/user.module.ts",{"_index":1485,"title":{},"body":{"modules/UserModule.html":{}}}],["packages/server/src/modules/user/user.service.ts",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["packages/server/src/modules/user/user.service.ts:110",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:125",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:138",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:144",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:26",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:34",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:60",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:76",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["packages/server/src/modules/user/user.service.ts:97",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["param",{"_index":327,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["param(\"id",{"_index":449,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":908,"title":{},"body":{"injectables/MenuService.html":{},"miscellaneous/functions.html":{}}}],["parentid",{"_index":827,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{},"injectables/RoleService.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":218,"title":{},"body":{"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["passwordnew",{"_index":1491,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["passwordnewagain",{"_index":1492,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["passwords",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["path",{"_index":336,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["pattern",{"_index":1280,"title":{},"body":{"injectables/RedisService.html":{}}}],["payload",{"_index":713,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["payload.id",{"_index":718,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["payload.tokenid",{"_index":719,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["permission",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission_list",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissiontype",{"_index":838,"title":{},"body":{"classes/MenuBodyRequest.html":{},"injectables/MenuService.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"miscellaneous/enumerations.html":{}}}],["permissiontype.catalogue",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissiontype.menu",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":368,"title":{},"body":{"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{}}}],["pipe(catcherror((err",{"_index":1305,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["plaintoinstance",{"_index":606,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoinstance(environmentvariables",{"_index":618,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["port",{"_index":570,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["post",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["post(\"/:id/products",{"_index":454,"title":{},"body":{"controllers/CustomerController.html":{}}}],["post(\"sign",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/:id/products",{"_index":436,"title":{},"body":{"controllers/CustomerController.html":{}}}],["prefix",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["price",{"_index":466,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductQuery.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["prices",{"_index":479,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{}}}],["prices.customerid",{"_index":538,"title":{},"body":{"injectables/CustomerService.html":{}}}],["pricesentities",{"_index":542,"title":{},"body":{"injectables/CustomerService.html":{}}}],["pricesentities.push",{"_index":548,"title":{},"body":{"injectables/CustomerService.html":{}}}],["private",{"_index":28,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"injectables/Log4jsService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"injectables/RedisService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["product",{"_index":552,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TemplateService.html":{}}}],["product.category",{"_index":1203,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.controller",{"_index":1176,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.cost",{"_index":1197,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.customerprices",{"_index":537,"title":{},"body":{"injectables/CustomerService.html":{}}}],["product.desc",{"_index":1199,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.interface",{"_index":1165,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["product.label",{"_index":1196,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.name",{"_index":1073,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["product.price",{"_index":1201,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":1166,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.unit",{"_index":1204,"title":{},"body":{"injectables/ProductService.html":{}}}],["product/categories",{"_index":1124,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["product/units",{"_index":1223,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["productbodyrequest",{"_index":1099,"title":{"classes/ProductBodyRequest.html":{}},"body":{"classes/ProductBodyRequest.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["productcategory",{"_index":1062,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["productcategorycontroller",{"_index":1113,"title":{"controllers/ProductCategoryController.html":{}},"body":{"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"coverage.html":{}}}],["productcategoryentity",{"_index":515,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/TemplateService.html":{}}}],["productcategoryentity().extend",{"_index":1152,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["productcategoryid",{"_index":939,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["productcategorymodule",{"_index":79,"title":{"modules/ProductCategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductCategoryModule.html":{},"index.html":{},"modules.html":{}}}],["productcategoryquery",{"_index":1115,"title":{"classes/ProductCategoryQuery.html":{}},"body":{"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"coverage.html":{}}}],["productcategoryrequest",{"_index":1117,"title":{"classes/ProductCategoryRequest.html":{}},"body":{"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"coverage.html":{}}}],["productcategoryservice",{"_index":989,"title":{"injectables/ProductCategoryService.html":{}},"body":{"modules/OrderModule.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/TemplateModule.html":{},"coverage.html":{},"index.html":{}}}],["productcontroller",{"_index":1158,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productentity",{"_index":516,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TemplateService.html":{}}}],["productentity().extend",{"_index":1191,"title":{},"body":{"injectables/ProductService.html":{}}}],["productid",{"_index":467,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{}}}],["production",{"_index":613,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{}}}],["productmodule",{"_index":80,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/ProductModule.html":{},"index.html":{},"modules.html":{}}}],["productpriceentity",{"_index":517,"title":{},"body":{"injectables/CustomerService.html":{}}}],["productpriceentity().extend",{"_index":549,"title":{},"body":{"injectables/CustomerService.html":{}}}],["productquery",{"_index":1112,"title":{"classes/ProductQuery.html":{}},"body":{"classes/ProductBodyRequest.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["products",{"_index":423,"title":{},"body":{"controllers/CustomerController.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"controllers/ProductController.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{}}}],["products(@param(\"id",{"_index":452,"title":{},"body":{"controllers/CustomerController.html":{}}}],["products(id",{"_index":430,"title":{},"body":{"controllers/CustomerController.html":{}}}],["products.push(entitymanager.save(orderproduct",{"_index":1079,"title":{},"body":{"injectables/OrderService.html":{}}}],["products.push(entitymanager.save(templatecategoryproduct",{"_index":1451,"title":{},"body":{"injectables/TemplateService.html":{}}}],["products]).catch((e",{"_index":1453,"title":{},"body":{"injectables/TemplateService.html":{}}}],["productservice",{"_index":498,"title":{"injectables/ProductService.html":{}},"body":{"injectables/CustomerService.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/TemplateModule.html":{},"coverage.html":{},"index.html":{}}}],["productunitbodyrequest",{"_index":1207,"title":{"classes/ProductUnitBodyRequest.html":{}},"body":{"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"coverage.html":{}}}],["productunitcontroller",{"_index":1214,"title":{"controllers/ProductUnitController.html":{}},"body":{"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"coverage.html":{}}}],["productunitentity",{"_index":518,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/ProductUnitService.html":{}}}],["productunitentity().extend",{"_index":1243,"title":{},"body":{"injectables/ProductUnitService.html":{}}}],["productunitmodule",{"_index":81,"title":{"modules/ProductUnitModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductUnitModule.html":{},"index.html":{},"modules.html":{}}}],["productunitquery",{"_index":1213,"title":{"classes/ProductUnitQuery.html":{}},"body":{"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"coverage.html":{}}}],["productunitservice",{"_index":990,"title":{"injectables/ProductUnitService.html":{}},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"injectables/ProductUnitService.html":{},"modules/TemplateModule.html":{},"coverage.html":{},"index.html":{}}}],["profile",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["profile(user",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["promise",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["promise((resolve",{"_index":1261,"title":{},"body":{"modules/RedisModule.html":{}}}],["promise.all",{"_index":1080,"title":{},"body":{"injectables/OrderService.html":{}}}],["promise.all([...categories",{"_index":1452,"title":{},"body":{"injectables/TemplateService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"classes/AuthRequest.html":{},"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"injectables/Log4jsService.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["property",{"_index":814,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["propertyname",{"_index":810,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["provide",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["provider",{"_index":1641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["public",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerController.html":{},"controllers/OrderController.html":{},"controllers/RoleController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":328,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["put(\"/:id",{"_index":347,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["put(\"/:id/password",{"_index":1479,"title":{},"body":{"controllers/UserController.html":{}}}],["put(\"/:id/status",{"_index":983,"title":{},"body":{"controllers/OrderController.html":{}}}],["put('/:id",{"_index":325,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["put('/:id/password",{"_index":1466,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/:id/status",{"_index":972,"title":{},"body":{"controllers/OrderController.html":{}}}],["query",{"_index":314,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["query.ids",{"_index":1433,"title":{},"body":{"injectables/TemplateService.html":{}}}],["query.ids.length",{"_index":1434,"title":{},"body":{"injectables/TemplateService.html":{}}}],["query.skip",{"_index":403,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["query.take",{"_index":404,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["query.where",{"_index":405,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{}}}],["query?.where",{"_index":1532,"title":{},"body":{"injectables/UserService.html":{}}}],["queryfailederror",{"_index":651,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["r&d",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["recoed",{"_index":414,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["record",{"_index":41,"title":{},"body":{"classes/ApiException.html":{},"classes/EnvironmentVariables.html":{},"injectables/OrderService.html":{},"miscellaneous/functions.html":{}}}],["redis",{"_index":1253,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{}}}],["redis(configservice.get('redis",{"_index":1260,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.constants",{"_index":1258,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{}}}],["redis.on('end",{"_index":1264,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.quit",{"_index":1263,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.service",{"_index":1259,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis_database",{"_index":571,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["redis_host",{"_index":572,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["redis_key_prefix",{"_index":573,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["redis_password",{"_index":574,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["redis_port",{"_index":575,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["redis_username",{"_index":576,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["redisclient",{"_index":1271,"title":{},"body":{"injectables/RedisService.html":{}}}],["redisconfig",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["rediskey",{"_index":1276,"title":{},"body":{"injectables/RedisService.html":{}}}],["redismodule",{"_index":82,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"index.html":{},"modules.html":{}}}],["redisservice",{"_index":233,"title":{"injectables/RedisService.html":{}},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"coverage.html":{},"index.html":{}}}],["reflector",{"_index":694,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["registerdecorator",{"_index":806,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["relatedpropertyname",{"_index":816,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["relatedvalue",{"_index":818,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["relations",{"_index":406,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["remote",{"_index":309,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["remote(@param(\"id",{"_index":351,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["remote(id",{"_index":321,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["remove",{"_index":374,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":388,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["removeuselessmenu",{"_index":1339,"title":{},"body":{"injectables/RoleService.html":{}}}],["removeuselessmenu(menus",{"_index":1351,"title":{},"body":{"injectables/RoleService.html":{}}}],["repo",{"_index":378,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["repocate",{"_index":1009,"title":{},"body":{"injectables/OrderService.html":{}}}],["repoforprice",{"_index":497,"title":{},"body":{"injectables/CustomerService.html":{}}}],["repoforproduct",{"_index":496,"title":{},"body":{"injectables/CustomerService.html":{}}}],["repopro",{"_index":1010,"title":{},"body":{"injectables/OrderService.html":{}}}],["repository",{"_index":376,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["repotc",{"_index":1415,"title":{},"body":{"injectables/TemplateService.html":{}}}],["repotcp",{"_index":1416,"title":{},"body":{"injectables/TemplateService.html":{}}}],["req",{"_index":439,"title":{},"body":{"controllers/CustomerController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MenuController.html":{},"controllers/OrderController.html":{}}}],["req.url",{"_index":674,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":723,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["request.user",{"_index":721,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.userentity",{"_index":1388,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requestwithuser",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":711,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["requiredroles",{"_index":1385,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1391,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":440,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/OrderController.html":{}}}],["reset",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"classes/EnvironmentVariables.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["resolve",{"_index":1265,"title":{},"body":{"modules/RedisModule.html":{}}}],["resolve(process.cwd",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":655,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(httpstatus.ok).json",{"_index":680,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":667,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responseinterceptor",{"_index":1291,"title":{"classes/ResponseInterceptor.html":{}},"body":{"classes/ResponseInterceptor.html":{},"coverage.html":{}}}],["rest",{"_index":409,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["rest.desc",{"_index":1456,"title":{},"body":{"injectables/TemplateService.html":{}}}],["rest.name",{"_index":1455,"title":{},"body":{"injectables/TemplateService.html":{}}}],["result",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":20,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":1390,"title":{},"body":{"guards/RolesGuard.html":{}}}],["role.controller",{"_index":1328,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.extend(rest",{"_index":418,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["role.id",{"_index":1534,"title":{},"body":{"injectables/UserService.html":{}}}],["role.interface",{"_index":1319,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.menus",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{}}}],["role.service",{"_index":1320,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role/role.service",{"_index":1487,"title":{},"body":{"modules/UserModule.html":{}}}],["role?.id",{"_index":1533,"title":{},"body":{"injectables/UserService.html":{}}}],["role_list",{"_index":1575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolecontroller",{"_index":1306,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roleentity",{"_index":396,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["roleentity().extend",{"_index":1377,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleid",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolemodule",{"_index":83,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"index.html":{},"modules.html":{}}}],["rolequery",{"_index":1309,"title":{"classes/RoleQuery.html":{}},"body":{"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["rolerequest",{"_index":1311,"title":{"classes/RoleRequest.html":{}},"body":{"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["roles",{"_index":330,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/CustomerController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":338,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/MenuController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["roles(role.user",{"_index":445,"title":{},"body":{"controllers/CustomerController.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{}}}],["roles_key",{"_index":1384,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":206,"title":{"injectables/RoleService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["rolesguard",{"_index":101,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/MenuModule.html":{},"modules/RoleModule.html":{},"guards/RolesGuard.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["root",{"_index":1636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route",{"_index":828,"title":{},"body":{"classes/MenuBodyRequest.html":{},"miscellaneous/variables.html":{}}}],["rows",{"_index":400,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["rows.map((u",{"_index":1536,"title":{},"body":{"injectables/UserService.html":{}}}],["rxjs",{"_index":1299,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["salt",{"_index":304,"title":{},"body":{"injectables/BcryptService.html":{}}}],["savedata",{"_index":1007,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["savedata(child",{"_index":1021,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["saveprices",{"_index":495,"title":{},"body":{"injectables/CustomerService.html":{}}}],["saveprices(id",{"_index":508,"title":{},"body":{"injectables/CustomerService.html":{}}}],["saveproducts",{"_index":424,"title":{},"body":{"controllers/CustomerController.html":{}}}],["saveproducts(id",{"_index":434,"title":{},"body":{"controllers/CustomerController.html":{}}}],["scope",{"_index":1255,"title":{},"body":{"modules/RedisModule.html":{}}}],["scroll",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":1535,"title":{},"body":{"injectables/UserService.html":{}}}],["setmetadata('ispublic",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shouldhidemenu",{"_index":1340,"title":{},"body":{"injectables/RoleService.html":{}}}],["shouldhidemenu(menu",{"_index":1353,"title":{},"body":{"injectables/RoleService.html":{}}}],["shutdown",{"_index":775,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["signal",{"_index":1252,"title":{},"body":{"modules/RedisModule.html":{}}}],["signin",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@body",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["signout",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signout(@activeuser(\"id",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["signout(userid",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["skip",{"_index":284,"title":{},"body":{"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"injectables/CompanyService.html":{},"classes/CustomerQuery.html":{},"injectables/CustomerService.html":{},"classes/OrderQuery.html":{},"injectables/OrderService.html":{},"classes/ProductCategoryQuery.html":{},"injectables/ProductCategoryService.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"classes/RoleQuery.html":{},"injectables/RoleService.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"classes/UserQuery.html":{},"injectables/UserService.html":{}}}],["skipmissingproperties",{"_index":623,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["solar:calendar",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solar:clipboard",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solar:plain",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solar:widget",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"modules/MenuModule.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"modules/TemplateModule.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{}}}],["south",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sql",{"_index":677,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["sql_error",{"_index":682,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["startdate",{"_index":958,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["statements",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":728,"title":{},"body":{"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{}}}],["status",{"_index":665,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":39,"title":{},"body":{"classes/ApiException.html":{}}}],["storedvalue",{"_index":1290,"title":{},"body":{"injectables/RedisService.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":1304,"title":{},"body":{"classes/ResponseInterceptor.html":{}}}],["super",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(errormsg",{"_index":57,"title":{},"body":{"classes/ApiException.html":{}}}],["support",{"_index":1650,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1651,"title":{},"body":{"modules.html":{}}}],["swagger_doc_description",{"_index":577,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["swagger_doc_title",{"_index":578,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["swagger_doc_version",{"_index":579,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["swagger_site_title",{"_index":580,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["symbol(\"log4js_option",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["sys.menu.analysis",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.animate",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.blank",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.calendar",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.chart",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.clipboard",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.components",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.dashboard",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.disabled",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.editor",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.error.403",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.error.404",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.error.500",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.error.index",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.external_link",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.frame",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.functions",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.i18n",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.icon",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.iframe",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.kanban",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.label",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.management",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.markdown",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.1a",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.1b.2a",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.1b.2b.3a",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.1b.2b.3b",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.1b.2b.index",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.1b.index",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.menulevel.index",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.scroll",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.system.index",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.system.organization",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.system.permission",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.system.role",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.system.user",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.system.user_detail",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.toast",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.token_expired",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.upload",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.user.account",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.user.index",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.user.profile",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys.menu.workbench",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/error/page403.tsx",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/error/page404.tsx",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/error/page500.tsx",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/others/blank.tsx",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/others/calendar/index.tsx",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/others/iframe/external",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/others/iframe/index.tsx",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sys/others/kanban/index.tsx",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":289,"title":{},"body":{"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"classes/CustomerQuery.html":{},"classes/OrderQuery.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/TemplateQuery.html":{},"classes/UserQuery.html":{}}}],["table",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":285,"title":{},"body":{"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"injectables/CompanyService.html":{},"classes/CustomerQuery.html":{},"injectables/CustomerService.html":{},"classes/OrderQuery.html":{},"injectables/OrderService.html":{},"classes/ProductCategoryQuery.html":{},"injectables/ProductCategoryService.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"classes/RoleQuery.html":{},"injectables/RoleService.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"classes/UserQuery.html":{},"injectables/UserService.html":{}}}],["target",{"_index":811,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["template",{"_index":477,"title":{},"body":{"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/TemplateService.html":{}}}],["template.controller",{"_index":1412,"title":{},"body":{"modules/TemplateModule.html":{}}}],["template.id",{"_index":1443,"title":{},"body":{"injectables/TemplateService.html":{}}}],["template.interface",{"_index":876,"title":{},"body":{"controllers/MenuController-1.html":{},"injectables/TemplateService.html":{}}}],["template.service",{"_index":878,"title":{},"body":{"controllers/MenuController-1.html":{},"modules/TemplateModule.html":{}}}],["templatebodyrequest",{"_index":868,"title":{"classes/TemplateBodyRequest.html":{}},"body":{"controllers/MenuController-1.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["templatecategory",{"_index":1394,"title":{"classes/TemplateCategory.html":{}},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["templatecategoryentity",{"_index":1427,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templatecategoryentity().extend",{"_index":1446,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templatecategoryproduct",{"_index":1400,"title":{"classes/TemplateCategoryProduct.html":{}},"body":{"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["templatecategoryproductentity",{"_index":1428,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templatecategoryproductentity().extend",{"_index":1450,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templateentity",{"_index":1424,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templateentity().extend",{"_index":1454,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templateid",{"_index":1438,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templatemodule",{"_index":84,"title":{"modules/TemplateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TemplateModule.html":{},"index.html":{},"modules.html":{}}}],["templatequery",{"_index":866,"title":{"classes/TemplateQuery.html":{}},"body":{"controllers/MenuController-1.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"coverage.html":{}}}],["templates",{"_index":879,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["templateservice",{"_index":877,"title":{"injectables/TemplateService.html":{}},"body":{"controllers/MenuController-1.html":{},"modules/TemplateModule.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"index.html":{}}}],["test",{"_index":614,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["test_role",{"_index":1576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test_user",{"_index":1577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this.authservice.login(signindto",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(user",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signout(userid",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.companyservice.getbyid(company",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["this.configservice.get(\"app\").secret",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["this.configservice.get(\"jwt",{"_index":715,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.configservice.get(\"jwt\").secret",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.customerservice.all(query",{"_index":446,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.create(body",{"_index":448,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.getbyid(id",{"_index":447,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.getbyidwitherror",{"_index":1049,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.customerservice.getpricebyid(id",{"_index":453,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.remove(id",{"_index":456,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.saveprices(id",{"_index":455,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.update(id",{"_index":450,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.em.save(orderentity",{"_index":1091,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.em.transaction(async",{"_index":1051,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TemplateService.html":{}}}],["this.errorcode",{"_index":58,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errordata",{"_index":59,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errormsg",{"_index":60,"title":{},"body":{"classes/ApiException.html":{}}}],["this.generateaccesstoken(user",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyid(body.parentid",{"_index":935,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.getbyid(id",{"_index":412,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["this.getbyid(parentid",{"_index":917,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.getbyidwitherror(id",{"_index":528,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["this.getbyidwitherror(user.id",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getlogger(context).debug(message",{"_index":794,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.getlogger(context).error(message",{"_index":792,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.getlogger(context).info(message",{"_index":791,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.getlogger(context).warn(message",{"_index":793,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.gettoken(request",{"_index":709,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.getvalidmenus(menutree",{"_index":1376,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.jwtservice.signasync",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":714,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.log4jservice.warn(\"abc",{"_index":856,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.logger.getlogger(\"httpexceptionfilter\").error(exception",{"_index":661,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.loggers",{"_index":783,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.loggers.get(loggername",{"_index":789,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.loggers.set(loggername",{"_index":790,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["this.menuservice.all",{"_index":858,"title":{},"body":{"controllers/MenuController.html":{},"injectables/RoleService.html":{}}}],["this.menuservice.create(body",{"_index":860,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.getbyid(id",{"_index":859,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.remove(id",{"_index":862,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.menuservice.update(id",{"_index":861,"title":{},"body":{"controllers/MenuController.html":{}}}],["this.moduleref.get(iorediskey",{"_index":1262,"title":{},"body":{"modules/RedisModule.html":{}}}],["this.orderservice.all(query",{"_index":978,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.changestatus(id",{"_index":984,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.create(body",{"_index":981,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.getbyid(id",{"_index":979,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.getbyidwithcategories(id",{"_index":980,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(id",{"_index":985,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(id",{"_index":982,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.productcategoryservice.all(query",{"_index":1125,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.create(body",{"_index":1127,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.getbyid(body.categoryid",{"_index":1195,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productcategoryservice.getbyid(body.unitid",{"_index":1194,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productcategoryservice.getbyid(id",{"_index":1126,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.getbyidwitherror",{"_index":1190,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productcategoryservice.remove(id",{"_index":1129,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.update(id",{"_index":1128,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productservice.all(query",{"_index":1167,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.create(body",{"_index":1169,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getbyid(element.productid",{"_index":553,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.productservice.getbyid(id",{"_index":1168,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(id",{"_index":1171,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":1170,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productunitservice.all(query",{"_index":1224,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["this.productunitservice.create(body",{"_index":1226,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["this.productunitservice.getbyid(id",{"_index":1225,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["this.productunitservice.getbyid(unitid",{"_index":1189,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productunitservice.remove(id",{"_index":1228,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["this.productunitservice.update(id",{"_index":1227,"title":{},"body":{"controllers/ProductUnitController.html":{}}}],["this.redisclient.del(key",{"_index":1289,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.get(key",{"_index":1288,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.keys(pattern",{"_index":1286,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.set(key",{"_index":1287,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisservice.delete(`user",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redisservice.insert(`user",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redisservice.validate",{"_index":717,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(\"ispublic",{"_index":704,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1386,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.removeuselessmenu(element.children",{"_index":1371,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.removeuselessmenu(menus",{"_index":1373,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.repo.findandcount",{"_index":402,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["this.repo.findone",{"_index":408,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["this.repo.findoneby",{"_index":1151,"title":{},"body":{"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["this.repo.manager",{"_index":905,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.repo.manager.find(menuentity",{"_index":1378,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.repo.manager.transaction",{"_index":541,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repo.remove(child",{"_index":936,"title":{},"body":{"injectables/MenuService.html":{},"injectables/ProductUnitService.html":{}}}],["this.repo.remove(data",{"_index":1157,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["this.repo.save(category",{"_index":1155,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["this.repo.save(child",{"_index":918,"title":{},"body":{"injectables/MenuService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{}}}],["this.repo.save(company",{"_index":411,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.repo.save(customer",{"_index":557,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repo.save(product",{"_index":1205,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.repo.save(role",{"_index":419,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["this.repo.save(user",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repo.save(userentity",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repo.softremove(child",{"_index":1206,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["this.repo.softremove(customer",{"_index":559,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{}}}],["this.repo.softremove(role",{"_index":420,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["this.repocate.delete",{"_index":1058,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.repocate.find",{"_index":1037,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.repoforprice",{"_index":543,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repoforproduct",{"_index":529,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repopro.delete",{"_index":1056,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.repopro.find",{"_index":1040,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.repotc.delete",{"_index":1444,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.repotc.find",{"_index":1437,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.repotcp.delete",{"_index":1442,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.repotcp.find",{"_index":1439,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.roleservice.all(query",{"_index":341,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/RoleController.html":{}}}],["this.roleservice.create(body",{"_index":346,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/RoleController.html":{}}}],["this.roleservice.getbyid(id",{"_index":344,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/RoleController.html":{}}}],["this.roleservice.getbyid(role",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getbyidwithpermission",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.getbyidwithpermission(id",{"_index":1323,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.remove(id",{"_index":352,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/RoleController.html":{}}}],["this.roleservice.update(id",{"_index":349,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/RoleController.html":{}}}],["this.savedata(child",{"_index":1457,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.savedata(order",{"_index":1085,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.shouldhidemenu",{"_index":1372,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.shouldhidemenu(child",{"_index":1363,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.templateservice.all(query",{"_index":880,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.create(body",{"_index":885,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.getbyid(id",{"_index":881,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.getbyidwithcategories(id",{"_index":884,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.remove(id",{"_index":887,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.templateservice.update(id",{"_index":886,"title":{},"body":{"controllers/MenuController-1.html":{}}}],["this.userservice.all(query",{"_index":1475,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.changepassword(body",{"_index":1480,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(body",{"_index":1477,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyid(id",{"_index":1476,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyidwitherror(user?.id",{"_index":1387,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.userservice.remove(id",{"_index":1481,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":1478,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findone(body.username",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(email",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getbyidwitherror(user.id",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"guards/JwtAuthGuard.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":913,"title":{},"body":{"injectables/MenuService.html":{}}}],["timestamp",{"_index":672,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["toast",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":708,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["tokenid",{"_index":14,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthService.html":{}}}],["totalprice",{"_index":953,"title":{},"body":{"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{}}}],["trace",{"_index":762,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["transformer",{"_index":291,"title":{},"body":{"classes/BaseQuery.html":{},"classes/EnvironmentVariables.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["tree",{"_index":846,"title":{},"body":{"controllers/MenuController.html":{}}}],["tree(@request",{"_index":857,"title":{},"body":{"controllers/MenuController.html":{}}}],["tree(req",{"_index":850,"title":{},"body":{"controllers/MenuController.html":{}}}],["trees",{"_index":904,"title":{},"body":{"injectables/MenuService.html":{}}}],["true",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"guards/JwtAuthGuard.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":712,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ActiveUserData.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/BaseQuery.html":{},"injectables/BcryptService.html":{},"controllers/CompanyController.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"injectables/CustomerService.html":{},"classes/EnvironmentVariables.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"classes/OrderCategory.html":{},"controllers/OrderController.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"injectables/OrderService.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"controllers/ProductCategoryController.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{},"classes/ProductUnitBodyRequest.html":{},"controllers/ProductUnitController.html":{},"classes/ProductUnitQuery.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/ResponseInterceptor.html":{},"controllers/RoleController.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(undefined",{"_index":286,"title":{},"body":{"classes/BaseQuery.html":{},"classes/CompanyQuery.html":{},"classes/CustomerQuery.html":{},"classes/OrderQuery.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/TemplateQuery.html":{},"classes/UserQuery.html":{},"classes/UserSearchModel.html":{}}}],["typealiases",{"_index":1653,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":784,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["typeorm",{"_index":393,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["typeormmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["u",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{}}}],["u.password",{"_index":1537,"title":{},"body":{"injectables/UserService.html":{}}}],["unauthorizedexception",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception(\"authorization",{"_index":710,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception(error.message",{"_index":722,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["undefined",{"_index":786,"title":{},"body":{"injectables/Log4jsService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":533,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TemplateService.html":{}}}],["unit.controller",{"_index":1233,"title":{},"body":{"modules/ProductUnitModule.html":{}}}],["unit.interface",{"_index":1221,"title":{},"body":{"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{}}}],["unit.service",{"_index":1222,"title":{},"body":{"controllers/ProductUnitController.html":{},"modules/ProductUnitModule.html":{}}}],["unitid",{"_index":1103,"title":{},"body":{"classes/ProductBodyRequest.html":{},"classes/ProductQuery.html":{},"injectables/ProductService.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unknown_error",{"_index":686,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["update",{"_index":310,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param(\"id",{"_index":348,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":324,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController.html":{},"controllers/MenuController-1.html":{},"injectables/MenuService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatestatus",{"_index":964,"title":{},"body":{"controllers/OrderController.html":{}}}],["updatestatus(id",{"_index":971,"title":{},"body":{"controllers/OrderController.html":{}}}],["upload",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["user",{"_index":7,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"guards/JwtAuthGuard.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductUnitController.html":{},"injectables/ProductUnitService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.company?.id",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.companyid",{"_index":556,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{}}}],["user.controller",{"_index":1488,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/MenuController-1.html":{},"controllers/OrderController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/ProductUnitController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":1580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.extend",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["user.interface",{"_index":1473,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.permissions",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role?.id",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1474,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/:id",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.[field",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.companyid",{"_index":1153,"title":{},"body":{"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["user?.id",{"_index":1154,"title":{},"body":{"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["user_list",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1459,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"guards/RolesGuard.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["userentity().extend",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["userentity.password",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userentity.permissions",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity.role?.id",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity.role?.label",{"_index":1392,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userid",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"injectables/TemplateService.html":{}}}],["usermodule",{"_index":85,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["username",{"_index":219,"title":{},"body":{"classes/AuthRequest.html":{},"miscellaneous/variables.html":{}}}],["userpasswordrequest",{"_index":1465,"title":{"classes/UserPasswordRequest.html":{}},"body":{"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userquery",{"_index":1462,"title":{"classes/UserQuery.html":{}},"body":{"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userrequest",{"_index":1468,"title":{"classes/UserRequest.html":{}},"body":{"controllers/UserController.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["users",{"_index":679,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UserController.html":{}}}],["usersearchmodel",{"_index":1501,"title":{"classes/UserSearchModel.html":{}},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{},"coverage.html":{}}}],["userservice",{"_index":207,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":720,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["validate",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"classes/MatchConstraint.html":{},"injectables/RedisService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validate(config",{"_index":616,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validate(key",{"_index":1283,"title":{},"body":{"injectables/RedisService.html":{}}}],["validate(value",{"_index":803,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validatedate",{"_index":1499,"title":{},"body":{"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["validatedconfig",{"_index":617,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync",{"_index":610,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":622,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validateuser",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":800,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validationoptions",{"_index":807,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":223,"title":{},"body":{"classes/AuthRequest.html":{},"classes/CompanyQuery.html":{},"classes/CompanyRequest.html":{},"classes/CustomerPrice.html":{},"classes/CustomerPriceRequest.html":{},"classes/CustomerQuery.html":{},"classes/CustomerRequest.html":{},"classes/EnvironmentVariables.html":{},"classes/MatchConstraint.html":{},"classes/MenuBodyRequest.html":{},"classes/OrderCategory.html":{},"classes/OrderProduct.html":{},"classes/OrderQuery.html":{},"classes/OrderRequest.html":{},"classes/OrderStatusRequest.html":{},"classes/OrderWhere.html":{},"classes/ProductBodyRequest.html":{},"classes/ProductCategoryQuery.html":{},"classes/ProductCategoryRequest.html":{},"classes/ProductQuery.html":{},"classes/ProductUnitBodyRequest.html":{},"classes/ProductUnitQuery.html":{},"classes/RoleQuery.html":{},"classes/RoleRequest.html":{},"classes/TemplateBodyRequest.html":{},"classes/TemplateCategory.html":{},"classes/TemplateCategoryProduct.html":{},"classes/TemplateQuery.html":{},"classes/UserPasswordRequest.html":{},"classes/UserQuery.html":{},"classes/UserRequest.html":{},"classes/UserSearchModel.html":{}}}],["validatorconstraint",{"_index":808,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validatorconstraintinterface",{"_index":797,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["value",{"_index":382,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/Log4jsService.html":{},"classes/MatchConstraint.html":{},"injectables/OrderService.html":{},"injectables/RedisService.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1656,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":760,"title":{},"body":{"injectables/Log4jsService.html":{},"injectables/RoleService.html":{}}}],["warn",{"_index":755,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["warn(message",{"_index":773,"title":{},"body":{"injectables/Log4jsService.html":{}}}],["whereclause",{"_index":1034,"title":{},"body":{"injectables/OrderService.html":{}}}],["wherecondition",{"_index":1432,"title":{},"body":{"injectables/TemplateService.html":{}}}],["wherecondition[\"id",{"_index":1435,"title":{},"body":{"injectables/TemplateService.html":{}}}],["withdeleted",{"_index":407,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"injectables/ProductService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["withrelation",{"_index":379,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["workbench",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[0m",{"_index":630,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["x1b[1m",{"_index":632,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["x1b[31m",{"_index":634,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["yes",{"_index":47,"title":{},"body":{"classes/ApiException.html":{},"injectables/CompanyService.html":{},"injectables/CustomerService.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"injectables/Log4jsService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/ProductUnitService.html":{},"modules/RedisModule.html":{},"injectables/RoleService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/CustomerModule.html":{},"modules/Log4jsGlobalModule.html":{},"modules/Log4jsModule.html":{},"modules/MenuModule.html":{},"modules/OrderModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/ProductUnitModule.html":{},"modules/RedisModule.html":{},"modules/RoleModule.html":{},"modules/TemplateModule.html":{},"modules/UserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/common/interfaces/active-user-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            companyId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        companyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        companyId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  id: number;\n  email: string;\n  companyId: number;\n  tokenId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/common/exception/api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorCode\n                            \n                            \n                                    Private\n                                errorData\n                            \n                            \n                                    Private\n                                errorMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorCode\n                            \n                            \n                                getErrorData\n                            \n                            \n                                getErrorMsg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMsg: string, errorCode: ApiStatusCode, statusCode: HttpStatus, errorData?: Record)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/common/exception/api.exception.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMsg\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                    ApiStatusCode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorData\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApiStatusCode\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/common/exception/api.exception.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/common/exception/api.exception.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/common/exception/api.exception.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorCode\n                        \n                    \n                \n            \n            \n                \ngetErrorCode()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/exception/api.exception.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ApiStatusCode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorData\n                        \n                    \n                \n            \n            \n                \ngetErrorData()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/exception/api.exception.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMsg\n                        \n                    \n                \n            \n            \n                \ngetErrorMsg()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/exception/api.exception.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiStatusCode } from \"@bill/database\";\nimport { HttpException, HttpStatus } from \"@nestjs/common\";\n\nexport class ApiException extends HttpException {\n  private errorMsg: string;\n  private errorCode: ApiStatusCode;\n  private errorData: Record;\n\n  constructor(\n    errorMsg: string,\n    errorCode: ApiStatusCode,\n    statusCode: HttpStatus,\n    errorData?: Record\n  ) {\n    super(errorMsg, statusCode);\n\n    this.errorCode = errorCode;\n    this.errorData = errorData || {};\n    this.errorMsg = errorMsg;\n  }\n\n  getErrorMsg() {\n    return this.errorMsg;\n  }\n\n  getErrorCode() {\n    return this.errorCode;\n  }\n\n  getErrorData() {\n    return this.errorData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nLog4jsGlobalModule\n\nLog4jsGlobalModule\n\nAppModule -->\n\nLog4jsGlobalModule->AppModule\n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductCategoryModule\n\nProductCategoryModule\n\nAppModule -->\n\nProductCategoryModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductUnitModule\n\nProductUnitModule\n\nAppModule -->\n\nProductUnitModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nTemplateModule\n\nTemplateModule\n\nAppModule -->\n\nTemplateModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            CustomerModule\n                        \n                        \n                            Log4jsGlobalModule\n                        \n                        \n                            MenuModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            ProductCategoryModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            ProductUnitModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            TemplateModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RolesGuard } from \"@/common/guard/role.guard\";\nimport appConfig from \"@/config/app.config\";\nimport databaseConfig from \"@/config/database.config\";\nimport { validate } from \"@/config/env.validation\";\nimport jwtConfig from \"@/config/jwt.config\";\nimport redisConfig from \"@/config/redis.config\";\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { JwtAuthGuard } from \"@/modules/auth/guards/jwt-auth.guard\";\nimport { CompanyModule } from \"@/modules/company/company.module\";\nimport { CustomerModule } from \"@/modules/customer/customer.module\";\nimport { Log4jsGlobalModule } from \"@/modules/log4js/log4js.module\";\nimport { MenuModule } from \"@/modules/menu/menu.module\";\nimport { ProductModule } from \"@/modules/product/product.module\";\nimport { ProductCategoryModule } from \"@/modules/productCategory/category.module\";\nimport { ProductUnitModule } from \"@/modules/productUnit/unit.module\";\nimport { RedisModule } from \"@/modules/redis/redis.module\";\nimport { RoleModule } from \"@/modules/role/role.module\";\nimport { TemplateModule } from \"@/modules/template/template.module\";\nimport { UserModule } from \"@/modules/user/user.module\";\n\nimport { OrderModule } from \"../order/order.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [\".env\"],\n      load: [appConfig, databaseConfig, jwtConfig, redisConfig],\n      isGlobal: true,\n      validate,\n    }),\n    JwtModule.registerAsync({\n      useFactory: (configService: ConfigService) => {\n        return {\n          global: true,\n          secret: configService.get(\"jwt\").secret,\n          signOptions: { expiresIn: \"60s\" },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: (configService: ConfigService) => {\n        return Object.assign(\n          {\n            entities: entities || [],\n            synchronize: true,\n          },\n          configService.get(\"database\"),\n          {}\n        );\n      },\n      inject: [ConfigService],\n    }),\n    RedisModule,\n    Log4jsGlobalModule.forRoot(),\n    UserModule,\n    AuthModule,\n    MenuModule,\n    TemplateModule,\n    ProductModule,\n    ProductCategoryModule,\n    ProductUnitModule,\n    RoleModule,\n    CompanyModule,\n    CustomerModule,\n    OrderModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                profile\n                            \n                            \n                                    \n                                    \n                                    \n                                signIn\n                            \n                            \n                                    \n                                    \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: AuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Public()@Post('sign-in')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            AuthRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('sign-out')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpCode,\n  HttpStatus,\n  Request,\n  Get,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Public } from \"@/common/decorators/public.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\n\nimport { AuthRequest } from \"./auth.interface\";\nimport { AuthService } from \"./auth.service\";\n\ntype RequestWithUser = Request & {\n  user: unknown;\n};\n\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @HttpCode(HttpStatus.OK)\n  @Public()\n  @Post(\"sign-in\")\n  signIn(@Body() signInDto: AuthRequest) {\n    return this.authService.login(signInDto);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Get(\"profile\")\n  profile(\n    @ActiveUser() user: ActiveUserData\n  ): Promise {\n    return this.authService.profile(user);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post(\"sign-out\")\n  signOut(@ActiveUser(\"id\") userId: string): Promise {\n    return this.authService.signOut(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBcryptService\n\nBcryptService\n\nAuthModule -->\n\nBcryptService->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nAuthModule -->\n\nCompanyService->AuthModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nAuthModule -->\n\nMenuService->AuthModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nAuthModule -->\n\nRoleService->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            BcryptService\n                        \n                        \n                            CompanyService\n                        \n                        \n                            MenuService\n                        \n                        \n                            RoleService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport jwtConfig from \"@/config/jwt.config\";\nimport { MenuService } from \"@/modules/menu/menu.service\";\nimport { RoleService } from \"@/modules/role/role.service\";\nimport { UserService } from \"@/modules/user/user.service\";\n\nimport { CompanyService } from \"../company/company.service\";\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { BcryptService } from \"./bcrypt.service\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature(entities),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    BcryptService,\n    UserService,\n    RoleService,\n    MenuService,\n    CompanyService\n  ],\n  exports: [JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRequest.html":{"url":"classes/AuthRequest.html","title":"class - AuthRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/auth/auth.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/auth/auth.interface.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class AuthRequest {\n  @IsString()\n  username: string;\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateAccessToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, roleService: RoleService, jwtService: JwtService, redisService: RedisService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: AuthRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            AuthRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { randomUUID } from \"crypto\";\nimport { UserEntity } from \"@bill/database/dist/entities\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\n\nimport { PERMISSION_LIST } from \"@/assets\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport { RedisService } from \"@/modules/redis/redis.service\";\nimport { RoleService } from \"@/modules/role/role.service\";\nimport { UserService } from \"@/modules/user/user.service\";\n\nimport { AuthRequest } from \"./auth.interface\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private roleService: RoleService,\n    private jwtService: JwtService,\n    private readonly redisService: RedisService,\n    private configService: ConfigService\n  ) {}\n\n  async validateUser(\n    email: string,\n    pass: string\n  ): Promise | null> {\n    const user = await this.usersService.findOne(email, pass);\n\n    if (user) {\n      const { password, ...result } = user;\n\n      return result;\n    }\n\n    return null;\n  }\n\n  async login(body: AuthRequest) {\n    const user = await this.usersService.findOne(body.username, body.password);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    const role = await this.roleService.getByIdWithPermission(\n      user.role?.id ?? 0\n    );\n\n    user.permissions = role.menus;\n\n    return await this.generateAccessToken(user);\n  }\n\n  async signOut(userId: string): Promise {\n    return this.redisService.delete(`user-${userId}`);\n  }\n\n  async profile(user: ActiveUserData): Promise> {\n    const userEntity = await this.usersService.getByIdWithError(user.id, {\n      role: true,\n      company: true,\n    });\n    const role = await this.roleService.getByIdWithPermission(\n      userEntity.role?.id ?? 0\n    );\n\n    userEntity.permissions = role.menus;\n    userEntity.password = \"\";\n\n    return userEntity;\n  }\n\n  async generateAccessToken(\n    user: UserEntity\n  ): Promise {\n    const tokenId = randomUUID();\n\n    await this.redisService.insert(`user-${user.id}`, tokenId);\n\n    const accessToken = await this.jwtService.signAsync(\n      {\n        id: user.id,\n        email: user.email,\n        companyId: user.company?.id,\n        tokenId,\n      } as ActiveUserData,\n      {\n        secret: this.configService.get(\"jwt\").secret,\n      }\n    );\n\n    return { accessToken, user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseQuery.html":{"url":"classes/BaseQuery.html","title":"class - BaseQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/common/interfaces/query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/common/interfaces/query.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/common/interfaces/query.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/common/interfaces/query.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\n\nexport class BaseQuery> {\n  @Type(() => Number)\n  skip?: number;\n\n  @Type(() => Number)\n  take?: number;\n\n  @Type(() => Object)\n  where?: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptService.html":{"url":"injectables/BcryptService.html","title":"injectable - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/auth/bcrypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(data: string, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/bcrypt.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/bcrypt.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { compare, genSalt, hash } from 'bcrypt';\n\n@Injectable()\nexport class BcryptService {\n  async hash(data: string): Promise {\n    const salt = await genSalt();\n    return hash(data, salt);\n  }\n\n  async compare(data: string, encrypted: string): Promise {\n    return compare(data, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/company/company.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: CompanyQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            CompanyQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CompanyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CompanyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: CompanyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CompanyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { CompanyQuery, CompanyRequest } from \"./company.interface\";\nimport { CompanyService } from \"./company.service\";\n\n@Controller({\n  path: [\"companies\"],\n})\n@Roles(Role.Admin)\nexport class CompanyController {\n  constructor(\n    private roleService: CompanyService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(@Query() query: CompanyQuery) {\n    return this.roleService.all(query);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.roleService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(@Body() body: CompanyRequest) {\n    return this.roleService.create(body);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: CompanyRequest) {\n    return this.roleService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.roleService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService \n\nCompanyService \n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nCompanyModule -->\n\nMenuService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/company/company.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                        \n                            MenuService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { MenuService } from \"@/modules/menu/menu.service\";\n\nimport { CompanyController } from \"./company.controller\";\nimport { CompanyService } from \"./company.service\";\n\n@Module({\n  controllers: [CompanyController],\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [\n    CompanyService,\n    MenuService,\n  ],\n  exports: [CompanyService],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompanyQuery.html":{"url":"classes/CompanyQuery.html","title":"class - CompanyQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompanyQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/company/company.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\nimport { MenuBodyRequest } from \"@/modules/menu/menu.interface\";\n\nexport class CompanyRequest {\n  @IsString()\n  name: string;\n  @IsString()\n  address?: string;\n  @IsString()\n  phone: string;\n}\n\nexport class CompanyQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompanyRequest.html":{"url":"classes/CompanyRequest.html","title":"class - CompanyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompanyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/company/company.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/company/company.interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/company/company.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/company/company.interface.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\nimport { MenuBodyRequest } from \"@/modules/menu/menu.interface\";\n\nexport class CompanyRequest {\n  @IsString()\n  name: string;\n  @IsString()\n  address?: string;\n  @IsString()\n  phone: string;\n}\n\nexport class CompanyQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/company/company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/company/company.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: CompanyQuery, withRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            CompanyQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRelation\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CompanyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CompanyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number, loadRelationIds)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                loadRelationIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: CompanyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/company/company.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CompanyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as _ from \"lodash\";\nimport { In, Repository } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport {\n  CompanyEntity,\n  MenuEntity,\n  RoleEntity,\n} from \"@bill/database/dist/entities\";\nimport { HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\n\nimport { CompanyRequest, CompanyQuery } from \"./company.interface\";\n\n@Injectable()\nexport class CompanyService {\n  constructor(\n    @InjectRepository(CompanyEntity) private repo: Repository\n  ) {}\n\n  async all(\n    query: CompanyQuery,\n    withRelation = false\n  ): Promise {\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...query.where,\n      },\n      relations: {},\n      withDeleted: false,\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  async getById(\n    id?: number,\n    loadRelationIds = false\n  ): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const data = await this.repo.findOne({\n      where: {\n        id,\n      },\n    });\n\n    return data || null;\n  }\n\n  async create(body: CompanyRequest): Promise {\n    const { ...rest } = body;\n    const company = new CompanyEntity().extend({\n      ...rest,\n    });\n\n    return await this.repo.save(company);\n  }\n\n  async update(id: number, body: CompanyRequest): Promise {\n    const role = await this.getById(id);\n    const { ...rest } = body;\n\n    if (!role) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          entity: \"CompanyEntity\",\n        }\n      );\n    }\n\n    role.extend(rest);\n\n    return this.repo.save(role);\n  }\n\n  async remove(id: number) {\n    const role = await this.getById(id);\n\n    if (!role) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    return this.repo.softRemove(role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                products\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                saveProducts\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: CustomerQuery, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            CustomerQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CustomerRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CustomerRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        products\n                        \n                    \n                \n            \n            \n                \n                        \n                    products(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/products')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        saveProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProducts(id: number, body: CustomerPriceRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:id/products')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CustomerPriceRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: CustomerRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CustomerRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n  Req,\n  Res,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Public } from \"@/common/decorators/public.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\n\nimport {\n  CustomerPriceRequest,\n  CustomerQuery,\n  CustomerRequest,\n} from \"./customer.interface\";\nimport { CustomerService } from \"./customer.service\";\n\n@Controller({\n  path: [\"customers\"],\n})\n@Roles(Role.User)\nexport class CustomerController {\n  constructor(private customerService: CustomerService) {}\n\n  @Get(\"/\")\n  async all(@Query() query: CustomerQuery, @ActiveUser() user: ActiveUserData) {\n    return this.customerService.all(query, user);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.customerService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(\n    @Body() body: CustomerRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.customerService.create(body, user);\n  }\n\n  @Put(\"/:id\")\n  async update(\n    @Param(\"id\") id: number,\n    @Body() body: CustomerRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.customerService.update(id, body);\n  }\n\n  @Get(\"/:id/products\")\n  async products(@Param(\"id\") id: number) {\n    return this.customerService.getPriceById(id);\n  }\n\n  @Post(\"/:id/products\")\n  async saveProducts(\n    @Param(\"id\") id: number,\n    @Body() body: CustomerPriceRequest\n  ) {\n    return this.customerService.savePrices(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.customerService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_imports\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerModule -->\n\nProductModule->CustomerModule\n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Global, Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { MenuService } from \"@/modules/menu/menu.service\";\nimport { ProductModule } from \"@/modules/product/product.module\";\n\nimport { CustomerController } from \"./customer.controller\";\nimport { CustomerService } from \"./customer.service\";\n\n@Module({\n  controllers: [CustomerController],\n  imports: [TypeOrmModule.forFeature(entities), ProductModule],\n  providers: [CustomerService],\n  exports: [CustomerService],\n})\n@Global()\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerPrice.html":{"url":"classes/CustomerPrice.html","title":"class - CustomerPrice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerPrice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsString } from \"class-validator\";\nimport { DeliverType } from \"@bill/database\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class CustomerRequest {\n  @IsString()\n  fullname: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  phone: string;\n\n  @IsString()\n  email: string;\n\n  @IsString()\n  address: string;\n\n  @IsNumber()\n  deliver: DeliverType;\n\n  @IsNumber()\n  level: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  template: number;\n\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class CustomerPrice {\n  @IsNumber()\n  price: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  productId: number;\n}\n\nexport class CustomerPriceRequest {\n  @IsArray()\n  prices: CustomerPrice[];\n}\n\nexport class CustomerQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerPriceRequest.html":{"url":"classes/CustomerPriceRequest.html","title":"class - CustomerPriceRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerPriceRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                prices\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomerPrice[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsString } from \"class-validator\";\nimport { DeliverType } from \"@bill/database\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class CustomerRequest {\n  @IsString()\n  fullname: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  phone: string;\n\n  @IsString()\n  email: string;\n\n  @IsString()\n  address: string;\n\n  @IsNumber()\n  deliver: DeliverType;\n\n  @IsNumber()\n  level: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  template: number;\n\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class CustomerPrice {\n  @IsNumber()\n  price: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  productId: number;\n}\n\nexport class CustomerPriceRequest {\n  @IsArray()\n  prices: CustomerPrice[];\n}\n\nexport class CustomerQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerQuery.html":{"url":"classes/CustomerQuery.html","title":"class - CustomerQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsString } from \"class-validator\";\nimport { DeliverType } from \"@bill/database\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class CustomerRequest {\n  @IsString()\n  fullname: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  phone: string;\n\n  @IsString()\n  email: string;\n\n  @IsString()\n  address: string;\n\n  @IsNumber()\n  deliver: DeliverType;\n\n  @IsNumber()\n  level: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  template: number;\n\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class CustomerPrice {\n  @IsNumber()\n  price: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  productId: number;\n}\n\nexport class CustomerPriceRequest {\n  @IsArray()\n  prices: CustomerPrice[];\n}\n\nexport class CustomerQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerRequest.html":{"url":"classes/CustomerRequest.html","title":"class - CustomerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                contact\n                            \n                            \n                                    \n                                deliver\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullname\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                no\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DeliverType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        no\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/customer/customer.interface.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsString } from \"class-validator\";\nimport { DeliverType } from \"@bill/database\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class CustomerRequest {\n  @IsString()\n  fullname: string;\n\n  @IsString()\n  contact: string;\n\n  @IsString()\n  phone: string;\n\n  @IsString()\n  email: string;\n\n  @IsString()\n  address: string;\n\n  @IsNumber()\n  deliver: DeliverType;\n\n  @IsNumber()\n  level: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  template: number;\n\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class CustomerPrice {\n  @IsNumber()\n  price: number;\n\n  @IsNumber()\n  discount: number;\n\n  @IsNumber()\n  productId: number;\n}\n\nexport class CustomerPriceRequest {\n  @IsArray()\n  prices: CustomerPrice[];\n}\n\nexport class CustomerQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                getPriceById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                savePrices\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, repoForProduct: Repository, repoForPrice: Repository, productService: ProductService, request)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/customer/customer.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoForProduct\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoForPrice\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: CustomerQuery, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            CustomerQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CustomerRequest, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CustomerRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number, loadRelationIds)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                loadRelationIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPriceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        savePrices\n                        \n                    \n                \n            \n            \n                \n                        \n                    savePrices(id: number, body: CustomerPriceRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CustomerPriceRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: CustomerRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/customer/customer.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CustomerRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Repository, Not, Equal, IsNull, EntityManager } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport {\n  CustomerEntity,\n  ProductCategoryEntity,\n  ProductEntity,\n  ProductPriceEntity,\n  ProductUnitEntity,\n  UserEntity,\n} from \"@bill/database/dist/entities\";\nimport { HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport dataFilter from \"@/common/utils/dataFilter\";\nimport { ProductService } from \"@/modules/product/product.service\";\n\nimport {\n  CustomerPriceRequest,\n  CustomerQuery,\n  CustomerRequest,\n} from \"./customer.interface\";\n\n@Injectable()\nexport class CustomerService {\n  constructor(\n    @InjectRepository(CustomerEntity) private repo: Repository,\n    @InjectRepository(ProductEntity)\n    private repoForProduct: Repository,\n    @InjectRepository(ProductPriceEntity)\n    private repoForPrice: Repository,\n    private productService: ProductService,\n    @Inject(REQUEST) private request: Request & {userEntity: UserEntity}\n  ) {}\n\n  async all(\n    query: CustomerQuery,\n    user: ActiveUserData\n  ): Promise {\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...query.where,\n        ...dataFilter(this.request.userEntity)\n      },\n      loadRelationIds: true,\n      withDeleted: false,\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  async getById(\n    id?: number,\n    loadRelationIds = false\n  ): Promise {\n    const data = await this.repo.findOne({\n      where: {\n        id,\n      },\n      loadRelationIds: loadRelationIds,\n    });\n\n    return data || null;\n  }\n\n  async getByIdWithError(id?: number): Promise {\n    const customer = await this.getById(id);\n\n    if (!customer) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"CustomerEntity\",\n        }\n      );\n    }\n\n    return customer;\n  }\n\n  async getPriceById(id?: number) {\n    const customer = await this.getByIdWithError(id);\n\n    return this.repoForProduct\n      .createQueryBuilder(\"product\")\n      .where({\n        deletedDate: IsNull(),\n      })\n      .innerJoinAndSelect(\"product.unit\", \"unit\")\n      .innerJoinAndSelect(\"product.category\", \"category\")\n      .leftJoinAndSelect(\n        \"product.customerPrices\",\n        \"prices\",\n        \"prices.customerId = :customerId\",\n        { customerId: id }\n      )\n      .getManyAndCount();\n  }\n\n  async savePrices(id: number, body: CustomerPriceRequest) {\n    const customer = await this.getByIdWithError(id);\n\n    return this.repo.manager.transaction(\n      async (entityManager: EntityManager) => {\n        const pricesEntities: ProductPriceEntity[] = [];\n\n        await this.repoForPrice\n          .createQueryBuilder()\n          .delete()\n          .where({\n            customer: {\n              id,\n            },\n          })\n          .execute();\n\n        for (const element of body.prices) {\n          pricesEntities.push(\n            new ProductPriceEntity().extend({\n              customer,\n              discount: element.discount,\n              price: element.price,\n              product: await this.productService.getById(element.productId),\n            })\n          );\n        }\n\n        return await entityManager.save(pricesEntities);\n      }\n    );\n  }\n\n  async create(\n    body: CustomerRequest,\n    user: ActiveUserData\n  ): Promise {\n    const { ...rest } = body;\n    const customer = new CustomerEntity().extend({\n      ...rest,\n      companyId: user.companyId,\n      userId: user.id,\n    });\n\n    return await this.repo.save(customer);\n  }\n\n  async update(id: number, body: CustomerRequest): Promise {\n    const customer = await this.getByIdWithError(id);\n    const { ...rest } = body;\n\n    customer.extend(rest);\n\n    return this.repo.save(customer);\n  }\n\n  async remove(id: number) {\n    const customer = await this.getByIdWithError(id);\n\n    return this.repo.softRemove(customer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/config/env.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                DB_HOST\n                            \n                            \n                                    \n                                    \n                                DB_NAME\n                            \n                            \n                                    \n                                    \n                                DB_PASSWORD\n                            \n                            \n                                    \n                                    \n                                DB_PORT\n                            \n                            \n                                    \n                                    \n                                DB_USER\n                            \n                            \n                                    \n                                    \n                                JWT_ACCESS_TOKEN_TTL\n                            \n                            \n                                    \n                                    \n                                JWT_SECRET\n                            \n                            \n                                    \n                                NODE_ENV\n                            \n                            \n                                    \n                                    \n                                PORT\n                            \n                            \n                                    \n                                    \n                                REDIS_DATABASE\n                            \n                            \n                                    \n                                    \n                                REDIS_HOST\n                            \n                            \n                                    \n                                    \n                                REDIS_KEY_PREFIX\n                            \n                            \n                                    \n                                    \n                                REDIS_PASSWORD\n                            \n                            \n                                    \n                                    \n                                REDIS_PORT\n                            \n                            \n                                    \n                                    \n                                REDIS_USERNAME\n                            \n                            \n                                    \n                                    \n                                SWAGGER_DOC_DESCRIPTION\n                            \n                            \n                                    \n                                    \n                                SWAGGER_DOC_TITLE\n                            \n                            \n                                    \n                                    \n                                SWAGGER_DOC_VERSION\n                            \n                            \n                                    \n                                    \n                                SWAGGER_SITE_TITLE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JWT_ACCESS_TOKEN_TTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        JWT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Environment)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_KEY_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_DOC_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_DOC_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_DOC_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_SITE_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/config/env.validation.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToInstance } from \"class-transformer\";\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  validateSync,\n} from \"class-validator\";\n\nexport enum Environment {\n  Development = \"development\",\n  Production = \"production\",\n  Test = \"test\",\n}\n\nclass EnvironmentVariables {\n  @IsEnum(Environment)\n  NODE_ENV: Environment;\n\n  @IsNumber()\n  @IsNotEmpty()\n  PORT: number;\n\n  @IsString()\n  @IsNotEmpty()\n  DB_HOST: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  DB_PORT: number;\n\n  @IsString()\n  @IsNotEmpty()\n  DB_USER: string;\n\n  @IsString()\n  @IsNotEmpty()\n  DB_PASSWORD: string;\n\n  @IsString()\n  @IsNotEmpty()\n  DB_NAME: string;\n\n  @IsString()\n  @IsNotEmpty()\n  REDIS_HOST: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  REDIS_PORT: number;\n\n  @IsString()\n  @IsOptional()\n  REDIS_USERNAME: string;\n\n  @IsString()\n  @IsOptional()\n  REDIS_PASSWORD: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  REDIS_DATABASE: number;\n\n  @IsString()\n  @IsNotEmpty()\n  REDIS_KEY_PREFIX: string;\n\n  @IsString()\n  @IsNotEmpty()\n  JWT_SECRET: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  JWT_ACCESS_TOKEN_TTL: number;\n\n  @IsString()\n  @IsNotEmpty()\n  SWAGGER_SITE_TITLE: string;\n\n  @IsString()\n  @IsNotEmpty()\n  SWAGGER_DOC_TITLE: string;\n\n  @IsString()\n  @IsNotEmpty()\n  SWAGGER_DOC_DESCRIPTION: string;\n\n  @IsString()\n  @IsNotEmpty()\n  SWAGGER_DOC_VERSION: string;\n}\n\nexport function validate(config: Record) {\n  const validatedConfig = plainToInstance(EnvironmentVariables, config, {\n    enableImplicitConversion: true,\n  });\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties: false,\n  });\n\n  let errorMessage = errors\n    .map(\n      (message) => message.constraints?.[Object.keys(message.constraints)[0]]\n    )\n    .join(\"\\n\");\n\n  const COLOR = {\n    reset: \"\\x1b[0m\",\n    bright: \"\\x1b[1m\",\n    fgRed: \"\\x1b[31m\",\n  };\n\n  errorMessage = `${COLOR.fgRed}${COLOR.bright}${errorMessage}${COLOR.reset}`;\n\n  if (errors.length > 0) {\n    throw new Error(errorMessage);\n  }\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/common/filter/http.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Log4jsService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/common/filter/http.exception.filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Log4jsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/filter/http.exception.filter.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QueryFailedError } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport {\n  ArgumentsHost,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  UnauthorizedException,\n} from \"@nestjs/common\";\n\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { ApiException } from \"../exception/api.exception\";\n\nexport class HttpExceptionFilter implements ExceptionFilter {\n  constructor(private readonly logger: Log4jsService) {}\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const req = ctx.getRequest();\n    const next = ctx.getNext();\n\n    if(!exception){\n      return next();\n    }\n\n    this.logger.getLogger(\"HttpExceptionFilter\").error(exception);\n\n    // custom error\n    if (exception instanceof ApiException) {\n      const status = exception.getStatus();\n\n      return response.status(status).json({\n        code: exception.getErrorCode(),\n        message: exception.getErrorMsg(),\n        data: exception.getErrorData() || {\n          timestamp: Date.now(),\n          path: req.url,\n        },\n      });\n    }\n\n    if(exception instanceof UnauthorizedException){\n      return next(exception);\n    }\n\n    // sql error can not expose to users\n    if (exception instanceof QueryFailedError) {\n      return response.status(HttpStatus.OK).json({\n        code: ApiStatusCode.SQL_ERROR,\n        data: {\n          timestamp: Date.now(),\n          path: req.url,\n        },\n        message: \"SQL_ERROR\",\n      });\n    }\n\n    // common error\n    response.status(HttpStatus.OK).json({\n      code: ApiStatusCode.UNKOWN_ERROR,\n      data: {\n        timestamp: Date.now(),\n        path: req.url,\n      },\n      message: exception?.message || \"UNKNOWN_ERROR\",\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/server/src/modules/auth/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, jwtService: JwtService, redisService: RedisService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/auth/guards/jwt-auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/guards/jwt-auth.guard.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/auth/guards/jwt-auth.guard.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Request } from \"express\";\nimport {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\nimport { JwtService } from \"@nestjs/jwt\";\n\nimport { RedisService } from \"@/modules/redis/redis.service\";\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly redisService: RedisService,\n    private reflector: Reflector\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(\"isPublic\", [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.getToken(request);\n    if (!token) {\n      throw new UnauthorizedException(\"Authorization token is required\");\n    }\n\n    try {\n      const payload = await this.jwtService.verifyAsync(token, this.configService.get(\"jwt\"));\n\n      const isValidToken = await this.redisService.validate(\n        `user-${payload.id}`,\n        payload.tokenId\n      );\n      if (!isValidToken) {\n        throw new UnauthorizedException(\"Authorization token is not valid\");\n      }\n\n      request.user = payload;\n    } catch (error) {\n      throw new UnauthorizedException(error.message);\n    }\n\n    return true;\n  }\n\n  private getToken(request: Request) {\n    const [_, token] = request.headers.authorization?.split(\" \") ?? [];\n    return token;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Log4jsGlobalModule.html":{"url":"modules/Log4jsGlobalModule.html","title":"module - Log4jsGlobalModule","body":"\n                   \n\n\n\n\n    Modules\n    Log4jsGlobalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Log4jsGlobalModule\n\n\n\ncluster_Log4jsGlobalModule_exports\n\n\n\ncluster_Log4jsGlobalModule_providers\n\n\n\n\nLog4jsService \n\nLog4jsService \n\n\n\nLog4jsGlobalModule\n\nLog4jsGlobalModule\n\nLog4jsService  -->\n\nLog4jsGlobalModule->Log4jsService \n\n\n\n\n\nLog4jsService\n\nLog4jsService\n\nLog4jsGlobalModule -->\n\nLog4jsService->Log4jsGlobalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/log4js/log4js.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options?: Configuration | string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Configuration | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Configuration } from \"log4js\";\nimport { Global, Module, DynamicModule } from \"@nestjs/common\";\n\nimport { createOptionProvider } from \"./log4js.provider\";\nimport { Log4jsService } from \"./log4js.service\";\n\n@Module({\n  providers: [Log4jsService, createOptionProvider()],\n  exports: [Log4jsService],\n})\n// biome-ignore lint/complexity/noStaticOnlyClass: \nexport class Log4jsModule {\n  static forRoot(options?: Configuration | string): DynamicModule {\n    const optionProvider = createOptionProvider(options);\n    return {\n      module: Log4jsModule,\n      providers: [Log4jsService, optionProvider],\n      exports: [Log4jsService],\n    };\n  }\n}\n\n@Global()\n@Module({\n  providers: [Log4jsService, createOptionProvider()],\n  exports: [Log4jsService],\n})\n// biome-ignore lint/complexity/noStaticOnlyClass: \nexport class Log4jsGlobalModule {\n  static forRoot(options?: Configuration | string): DynamicModule {\n    const optionProvider = createOptionProvider(options);\n    return {\n      module: Log4jsGlobalModule,\n      providers: [Log4jsService, optionProvider],\n      exports: [Log4jsService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Log4jsModule.html":{"url":"modules/Log4jsModule.html","title":"module - Log4jsModule","body":"\n                   \n\n\n\n\n    Modules\n    Log4jsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Log4jsModule\n\n\n\ncluster_Log4jsModule_exports\n\n\n\ncluster_Log4jsModule_providers\n\n\n\n\nLog4jsService \n\nLog4jsService \n\n\n\nLog4jsModule\n\nLog4jsModule\n\nLog4jsService  -->\n\nLog4jsModule->Log4jsService \n\n\n\n\n\nLog4jsService\n\nLog4jsService\n\nLog4jsModule -->\n\nLog4jsService->Log4jsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/log4js/log4js.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Log4jsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options?: Configuration | string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        Configuration | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Configuration } from \"log4js\";\nimport { Global, Module, DynamicModule } from \"@nestjs/common\";\n\nimport { createOptionProvider } from \"./log4js.provider\";\nimport { Log4jsService } from \"./log4js.service\";\n\n@Module({\n  providers: [Log4jsService, createOptionProvider()],\n  exports: [Log4jsService],\n})\n// biome-ignore lint/complexity/noStaticOnlyClass: \nexport class Log4jsModule {\n  static forRoot(options?: Configuration | string): DynamicModule {\n    const optionProvider = createOptionProvider(options);\n    return {\n      module: Log4jsModule,\n      providers: [Log4jsService, optionProvider],\n      exports: [Log4jsService],\n    };\n  }\n}\n\n@Global()\n@Module({\n  providers: [Log4jsService, createOptionProvider()],\n  exports: [Log4jsService],\n})\n// biome-ignore lint/complexity/noStaticOnlyClass: \nexport class Log4jsGlobalModule {\n  static forRoot(options?: Configuration | string): DynamicModule {\n    const optionProvider = createOptionProvider(options);\n    return {\n      module: Log4jsGlobalModule,\n      providers: [Log4jsService, optionProvider],\n      exports: [Log4jsService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Log4jsService.html":{"url":"injectables/Log4jsService.html","title":"injectable - Log4jsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Log4jsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/log4js/log4js.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                flushall\n                            \n                            \n                                getLogger\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: Configuration | string)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/log4js/log4js.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    Configuration | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message, trace?: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flushall\n                        \n                    \n                \n            \n            \n                \nflushall(cb?: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cb\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLogger\n                        \n                    \n                \n            \n            \n                \ngetLogger(loggerName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                loggerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"APP\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/log4js/log4js.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/log4js/log4js.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { getLogger, Logger, shutdown, configure, Configuration } from \"log4js\";\nimport { Inject, LoggerService, Injectable, Global } from \"@nestjs/common\";\n\nimport { LOG4JS_OPTION } from \"./log4js.constants\";\nimport { buildDefaultConfig } from \"./log4js.default.config\";\n\n@Global()\n@Injectable()\nexport class Log4jsService implements LoggerService {\n    private loggers: Map;\n    constructor(@Inject(LOG4JS_OPTION) options?: Configuration | string) {\n        this.loggers = new Map();\n        if (typeof options === \"string\") {\n            options = buildDefaultConfig(options);\n        } else if (typeof options === \"undefined\") {\n            options = buildDefaultConfig(\"all\");\n        }\n        configure(options);\n    }\n\n    getLogger(loggerName = \"APP\") {\n        let logger = this.loggers.get(loggerName);\n        if (!logger) {\n            logger = getLogger(loggerName);\n            this.loggers.set(loggerName, logger);\n        }\n        return logger;\n    }\n\n    log(message: unknown, context?: string) {\n        this.getLogger(context).info(message);\n    }\n\n    error(message: unknown, trace?: string, context?: string) {\n        this.getLogger(context).error(message, trace);\n    }\n\n    warn(message: unknown, context?: string) {\n        this.getLogger(context).warn(message);\n    }\n\n    debug(message: unknown, context?: string) {\n        this.getLogger(context).debug(message);\n    }\n\n    flushall(cb?: () => void) {\n        shutdown(() => {\n            cb?.();\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchConstraint.html":{"url":"classes/MatchConstraint.html","title":"class - MatchConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/common/decorators/match.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/decorators/match.decorator.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/decorators/match.decorator.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  type ValidationArguments,\n  type ValidationOptions,\n  ValidatorConstraint,\n  type ValidatorConstraintInterface,\n} from \"class-validator\";\n\nexport function Match(property: string, validationOptions?: ValidationOptions) {\n  return (object: object, propertyName: string) => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints: [property],\n      validator: MatchConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ name: \"Match\" })\nexport class MatchConstraint implements ValidatorConstraintInterface {\n  validate(value: unknown, args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    const relatedValue = args.object[relatedPropertyName];\n    return value === relatedValue;\n  }\n  defaultMessage(args: ValidationArguments) {\n    return `${args.property} must match ${args.constraints[0]}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBodyRequest.html":{"url":"classes/MenuBodyRequest.html","title":"class - MenuBodyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBodyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                component\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                order\n                            \n                            \n                                    Optional\n                                parentId\n                            \n                            \n                                    \n                                route\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Max(100)@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/menu/menu.interface.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Max, Min } from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\n\nexport class MenuBodyRequest {\n  id?: number;\n\n  @IsString()\n  label: string;\n  @IsString()\n  name: string;\n  @IsString()\n  icon: string;\n  @IsNumber()\n  type: PermissionType;\n  @IsString()\n  route: string;\n  @IsNumber()\n  @Max(100)\n  @Min(0)\n  order: number;\n  parentId?: number;\n  component?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController.html":{"url":"controllers/MenuController.html","title":"controller - MenuController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                tree\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: MenuBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        tree\n                        \n                    \n                \n            \n            \n                \n                        \n                    tree(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: MenuBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport { Controller, Request, Get, Post, Body, Param, Put, Delete } from \"@nestjs/common\";\n\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { MenuBodyRequest } from \"./menu.interface\";\nimport { MenuService } from \"./menu.service\";\n\n@Controller({\n  path: [\"menus\"],\n})\n@Roles(Role.Admin)\nexport class MenuController {\n  constructor(private menuService: MenuService, private readonly log4jService: Log4jsService) {\n    this.log4jService.warn(\"abc\");\n  }\n\n  @Get(\"/\")\n  async tree(@Request() req) {\n    return this.menuService.all();\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.menuService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(@Body() body: MenuBodyRequest) {\n    return this.menuService.create(body);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: MenuBodyRequest) {\n    return this.menuService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.menuService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MenuController-1.html":{"url":"controllers/MenuController-1.html","title":"controller - MenuController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                oneWithCategories\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: TemplateQuery, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            TemplateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: TemplateBodyRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        oneWithCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    oneWithCategories(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/categories')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: TemplateBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { TemplateBodyRequest, TemplateQuery } from \"./template.interface\";\nimport { TemplateService } from \"./template.service\";\n\n@Controller({\n  path: [\"templates\"],\n})\n@Roles(Role.User)\nexport class MenuController {\n  constructor(\n    private templateService: TemplateService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(@Query() query: TemplateQuery, @ActiveUser() user: ActiveUserData) {\n    return this.templateService.all(query, user);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.templateService.getById(id);\n  }\n\n  @Get(\"/:id/categories\")\n  async oneWithCategories(@Param(\"id\") id: number) {\n    return this.templateService.getByIdWithCategories(id);\n  }\n\n  @Post(\"/\")\n  async create(\n    @Body() body: TemplateBodyRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.templateService.create(body, user);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: TemplateBodyRequest) {\n    return this.templateService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.templateService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuModule.html":{"url":"modules/MenuModule.html","title":"module - MenuModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_providers\n\n\n\ncluster_MenuModule_exports\n\n\n\n\nMenuService \n\nMenuService \n\n\n\nMenuModule\n\nMenuModule\n\nMenuService  -->\n\nMenuModule->MenuService \n\n\n\n\n\nMenuService\n\nMenuService\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MenuService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MenuService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RolesGuard } from \"@/common/guard/role.guard\";\n\nimport { MenuController } from \"./menu.controller\";\nimport { MenuService } from \"./menu.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [MenuService],\n  exports: [MenuService],\n  controllers: [MenuController],\n})\nexport class MenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/menu/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                菜单服务\n用于管理系统的菜单树结构，包括菜单的增删改查等操作\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Log4jsService, repo: Repository, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/menu/menu.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Log4jsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all()\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:28\n                        \n                    \n\n\n            \n                \n                        获取所有菜单\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回完整的菜单树结构\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: MenuBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:94\n                        \n                    \n\n\n            \n                \n                        创建新菜单\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    菜单创建请求体\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回新创建的菜单实体\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:43\n                        \n                    \n\n\n            \n                \n                        根据ID获取菜单\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    菜单ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回菜单实体，如果不存在返回 null\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:71\n                        \n                    \n\n\n            \n                \n                        根据ID获取菜单，如果不存在则抛出异常\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    菜单ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回菜单实体\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:138\n                        \n                    \n\n\n            \n                \n                        删除菜单\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    要删除的菜单ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                返回删除的菜单实体\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: MenuBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/menu/menu.service.ts:112\n                        \n                    \n\n\n            \n                \n                        更新菜单\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    要更新的菜单ID\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            MenuBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    菜单更新请求体\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                返回更新后的菜单实体\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, Repository } from \"typeorm\";\nimport { ApiStatusCode, PermissionType } from \"@bill/database\";\nimport { MenuEntity, UserEntity } from \"@bill/database/dist/entities\";\nimport { HttpCode, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { MenuBodyRequest } from \"./menu.interface\";\n\n/**\n * 菜单服务\n * 用于管理系统的菜单树结构，包括菜单的增删改查等操作\n */\n@Injectable()\nexport class MenuService {\n  constructor(\n    private logger: Log4jsService,\n    @InjectRepository(MenuEntity) private repo: Repository,\n    private em: EntityManager\n  ) {}\n\n  /**\n   * 获取所有菜单\n   * @returns 返回完整的菜单树结构\n   */\n  async all(): Promise {\n    const trees = await this.repo.manager\n      .getTreeRepository(MenuEntity)\n      .findTrees({\n        relations: [\"parent\"],\n      });\n\n    return trees;\n  }\n\n  /**\n   * 根据ID获取菜单\n   * @param id 菜单ID\n   * @returns 返回菜单实体，如果不存在返回 null\n   */\n  async getById(id?: number): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const menu = await this.repo.findOne({\n      where: {\n        id,\n      },\n      relations: {\n        parent: true,\n      },\n    });\n\n    if (menu) {\n      menu.parentId = menu?.parent?.id;\n      menu.parent = null;\n    }\n\n    return menu || null;\n  }\n\n  /**\n   * 根据ID获取菜单，如果不存在则抛出异常\n   * @param id 菜单ID\n   * @returns 返回菜单实体\n   * @throws ApiException 当菜单不存在时\n   */\n  async getByIdWithError(id?: number): Promise {\n    const menu = await this.getById(id);\n\n    if (!menu) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"MenuEntity\",\n        }\n      );\n    }\n\n    return menu;\n  }\n\n  /**\n   * 创建新菜单\n   * @param body 菜单创建请求体\n   * @returns 返回新创建的菜单实体\n   */\n  async create(body: MenuBodyRequest): Promise {\n    const { id, parentId, ...rest } = body;\n\n    const child = new MenuEntity().extend({\n      ...rest,\n      children: [],\n      parent: await this.getById(parentId || 0),\n    });\n\n    return await this.repo.save(child);\n  }\n\n  /**\n   * 更新菜单\n   * @param id 要更新的菜单ID\n   * @param body 菜单更新请求体\n   * @returns 返回更新后的菜单实体\n   */\n  async update(id: number, body: MenuBodyRequest): Promise {\n    const child = await this.getByIdWithError(id);\n\n    child.icon = body.icon;\n    child.label = body.label;\n    child.name = body.name;\n    child.order = body.order;\n    child.route = body.route;\n    child.type = body.type;\n    child.component = body.component;\n\n    child.parent = null;\n\n    if (body.parentId) {\n      child.parent = await this.getById(body.parentId);\n    }\n\n    return this.repo.save(child);\n  }\n\n  /**\n   * 删除菜单\n   * @param id 要删除的菜单ID\n   * @returns 返回删除的菜单实体\n   * @throws ApiException 当菜单不存在时\n   */\n  async remove(id: number) {\n    const child = await this.getById(id);\n\n    if (!child) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    return this.repo.remove(child);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderCategory.html":{"url":"classes/OrderCategory.html","title":"class - OrderCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                productCategoryId\n                            \n                            \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderProduct[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayMinSize(1)@ArrayMaxSize(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsDate,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class OrderProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n  @IsNumber()\n  discount: number;\n}\n\nexport class OrderCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: OrderProduct[];\n}\n\nexport class OrderRequest {\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  customerId?: number;\n\n  totalPrice?: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: OrderCategory[];\n}\n\nexport class OrderStatusRequest {\n  @IsNumber()\n  @Max(2)\n  @Min(0)\n  status?: OrderStatus;\n}\n\nexport class OrderWhere {\n  @IsDate()\n  startDate?: Date;\n  \n  @IsDate()\n  endDate?: Date;\n\n  @IsNumber()\n  customerId?: number;\n\n  @IsNumber()\n  status?: OrderStatus;\n\n  @IsString()\n  no?: string;\n}\n\nexport class OrderQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                oneWithCategories\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: OrderQuery, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            OrderQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: OrderRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            OrderRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        oneWithCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    oneWithCategories(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/categories')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: OrderRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            OrderRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: number, body: OrderStatusRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/status')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            OrderStatusRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n  Req,\n  Res,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Public } from \"@/common/decorators/public.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\n\nimport {\n  OrderQuery,\n  OrderRequest,\n  OrderStatusRequest,\n} from \"./order.interface\";\nimport { OrderService } from \"./order.service\";\n\n@Controller({\n  path: [\"orders\"],\n})\n@Roles(Role.User)\nexport class OrderController {\n  constructor(private orderService: OrderService) {}\n\n  @Get(\"/\")\n  async all(@Query() query: OrderQuery, @ActiveUser() user: ActiveUserData) {\n    return this.orderService.all(query, user);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.orderService.getById(id);\n  }\n\n  @Get(\"/:id/categories\")\n  async oneWithCategories(@Param(\"id\") id: number) {\n    return this.orderService.getByIdWithCategories(id);\n  }\n\n  @Post(\"/\")\n  async create(\n    @Body() body: OrderRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.orderService.create(body, user);\n  }\n\n  @Put(\"/:id\")\n  async update(\n    @Param(\"id\") id: number,\n    @Body() body: OrderRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.orderService.update(id, body);\n  }\n\n  @Put(\"/:id/status\")\n  async updateStatus(\n    @Param(\"id\") id: number,\n    @Body() body: OrderStatusRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.orderService.changeStatus(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.orderService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_exports\n\n\n\n\nOrderService \n\nOrderService \n\n\n\nOrderModule\n\nOrderModule\n\nOrderService  -->\n\nOrderModule->OrderService \n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\nOrderModule -->\n\nProductCategoryService->OrderModule\n\n\n\n\n\nProductService\n\nProductService\n\nOrderModule -->\n\nProductService->OrderModule\n\n\n\n\n\nProductUnitService\n\nProductUnitService\n\nOrderModule -->\n\nProductUnitService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                        \n                            ProductCategoryService\n                        \n                        \n                            ProductService\n                        \n                        \n                            ProductUnitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrderService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ProductService } from \"@/modules/product/product.service\";\nimport { ProductCategoryService } from \"@/modules/productCategory/category.service\";\nimport { ProductUnitService } from \"@/modules/productUnit/unit.service\";\n\nimport { OrderController } from \"./order.controller\";\nimport { OrderService } from \"./order.service\";\n\n@Module({\n  controllers: [OrderController],\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [\n    OrderService,\n    ProductCategoryService,\n    ProductService,\n    ProductUnitService,\n  ],\n  exports: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProduct.html":{"url":"classes/OrderProduct.html","title":"class - OrderProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsDate,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class OrderProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n  @IsNumber()\n  discount: number;\n}\n\nexport class OrderCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: OrderProduct[];\n}\n\nexport class OrderRequest {\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  customerId?: number;\n\n  totalPrice?: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: OrderCategory[];\n}\n\nexport class OrderStatusRequest {\n  @IsNumber()\n  @Max(2)\n  @Min(0)\n  status?: OrderStatus;\n}\n\nexport class OrderWhere {\n  @IsDate()\n  startDate?: Date;\n  \n  @IsDate()\n  endDate?: Date;\n\n  @IsNumber()\n  customerId?: number;\n\n  @IsNumber()\n  status?: OrderStatus;\n\n  @IsString()\n  no?: string;\n}\n\nexport class OrderQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderQuery.html":{"url":"classes/OrderQuery.html","title":"class - OrderQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsDate,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class OrderProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n  @IsNumber()\n  discount: number;\n}\n\nexport class OrderCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: OrderProduct[];\n}\n\nexport class OrderRequest {\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  customerId?: number;\n\n  totalPrice?: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: OrderCategory[];\n}\n\nexport class OrderStatusRequest {\n  @IsNumber()\n  @Max(2)\n  @Min(0)\n  status?: OrderStatus;\n}\n\nexport class OrderWhere {\n  @IsDate()\n  startDate?: Date;\n  \n  @IsDate()\n  endDate?: Date;\n\n  @IsNumber()\n  customerId?: number;\n\n  @IsNumber()\n  status?: OrderStatus;\n\n  @IsString()\n  no?: string;\n}\n\nexport class OrderQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderRequest.html":{"url":"classes/OrderRequest.html","title":"class - OrderRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categories\n                            \n                            \n                                    \n                                    Optional\n                                customerId\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                no\n                            \n                            \n                                    Optional\n                                totalPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderCategory[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayMinSize(1)@ArrayMaxSize(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        customerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        no\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsDate,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class OrderProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n  @IsNumber()\n  discount: number;\n}\n\nexport class OrderCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: OrderProduct[];\n}\n\nexport class OrderRequest {\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  customerId?: number;\n\n  totalPrice?: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: OrderCategory[];\n}\n\nexport class OrderStatusRequest {\n  @IsNumber()\n  @Max(2)\n  @Min(0)\n  status?: OrderStatus;\n}\n\nexport class OrderWhere {\n  @IsDate()\n  startDate?: Date;\n  \n  @IsDate()\n  endDate?: Date;\n\n  @IsNumber()\n  customerId?: number;\n\n  @IsNumber()\n  status?: OrderStatus;\n\n  @IsString()\n  no?: string;\n}\n\nexport class OrderQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                changeStatus\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithCategories\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                saveData\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, repo: Repository, repoCate: Repository, repoPro: Repository, customerService: CustomerService, request)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/order/order.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoCate\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoPro\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: OrderQuery, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            OrderQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeStatus(id: number, body: OrderStatusRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            OrderStatusRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: OrderRequest, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            OrderRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithCategories(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:272\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveData(child: OrderEntity, body: OrderRequest, remove)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                child\n                                            \n                                                        OrderEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            OrderRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                remove\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: OrderRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/order/order.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            OrderRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from \"lodash\";\nimport {\n  Between,\n  EntityManager,\n  In,\n  LessThan,\n  MoreThan,\n  Repository,\n} from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport {\n  OrderCategoryEntity,\n  OrderEntity,\n  OrderProductEntity,\n  ProductCategoryEntity,\n  ProductEntity,\n  UserEntity,\n} from \"@bill/database/dist/entities\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\nimport { HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport dataFilter from \"@/common/utils/dataFilter\";\n\nimport { CustomerService } from \"../customer/customer.service\";\nimport {\n  OrderProduct,\n  OrderQuery,\n  OrderRequest,\n  OrderStatusRequest,\n} from \"./order.interface\";\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    private em: EntityManager,\n    @InjectRepository(OrderEntity) private repo: Repository,\n    @InjectRepository(OrderCategoryEntity)\n    private repoCate: Repository,\n    @InjectRepository(OrderProductEntity)\n    private repoPro: Repository,\n    private customerService: CustomerService,\n    @Inject(REQUEST) private request: Request & { userEntity: UserEntity }\n  ) {}\n\n  async all(\n    query: OrderQuery,\n    user: ActiveUserData\n  ): Promise {\n    const { startDate, endDate, ...rest } = query.where ?? {};\n    const whereClause = {\n      ...rest,\n\n      ...(startDate && endDate\n        ? {\n            createTime: Between(startDate, endDate),\n          }\n        : {}),\n\n      ...dataFilter(this.request.userEntity),\n    };\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: whereClause,\n      relations: {\n        customer: true,\n      },\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  async getById(id?: number): Promise {\n    const data = await this.repo.findOne({\n      where: {\n        id,\n      },\n    });\n\n    return data || null;\n  }\n\n  async getByIdWithError(id?: number): Promise {\n    const order = await this.getById(id);\n\n    if (!order) {\n      throw new ApiException(\n        \"can not find record\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"OrderEntity\",\n        }\n      );\n    }\n\n    return order;\n  }\n\n  async getByIdWithCategories(id?: number) {\n    await this.getByIdWithError(id);\n\n    const categories = (await this.repoCate.find({\n      where: {\n        orderId: id,\n      },\n      relations: {\n        category: true,\n      },\n    })) as (OrderCategoryEntity & {\n      products: OrderProduct[];\n    })[];\n\n    const categoryProducts = await this.repoPro.find({\n      where: {\n        orderCategory: {\n          id: In(categories.map((c) => c.id)),\n        },\n      },\n      relations: {\n        orderCategory: true,\n        product: {\n          unit: true,\n        },\n      },\n    });\n\n    const categoryMap = _.keyBy(categories, \"id\");\n\n    for (const cp of categoryProducts) {\n      const category = categoryMap[cp.orderCategory.id];\n\n      if (category) {\n        if (!category.products) {\n          category.products = [];\n        }\n        category.products.push(cp);\n      }\n    }\n\n    return categories;\n  }\n\n  async saveData(child: OrderEntity, body: OrderRequest, remove = false) {\n    const customer = await this.customerService.getByIdWithError(\n      body.customerId\n    );\n    return await this.em.transaction(async (entityManager: EntityManager) => {\n      const order = await entityManager.save(OrderEntity, {\n        ...child,\n        totalPrice: 0,\n        no: body.no,\n        discount: customer.discount,\n        status: OrderStatus.UNPAYED,\n        customer: customer,\n      });\n      const categories: Promise[] = [];\n      const products: Promise[] = [];\n\n      if (remove) {\n        await this.repoPro.delete({\n          orderId: order.id,\n        });\n        await this.repoCate.delete({\n          orderId: order.id,\n        });\n      }\n\n      order.totalPrice = 0;\n\n      for (const c of body.categories) {\n        const productCategory =\n          await entityManager.findOneByOrFail(\n            ProductCategoryEntity,\n            {\n              id: c.productCategoryId,\n            }\n          );\n\n        const orderCategory = new OrderCategoryEntity().extend({\n          category: productCategory,\n          orderId: order.id,\n          name: c.name,\n        });\n        categories.push(entityManager.save(orderCategory));\n\n        for (const p of c.products) {\n          const product = await entityManager.findOneByOrFail(ProductEntity, {\n            id: p.productId,\n          });\n\n          const orderProduct = new OrderProductEntity().extend({\n            productId: p.productId,\n            name: product.name,\n            price: p.price,\n            discount: p.discount,\n            count: p.count,\n            orderCategory: orderCategory,\n            orderId: order.id,\n            totalPrice: p.count * p.price * (p.discount / 100),\n          });\n\n          order.totalPrice += orderProduct.totalPrice;\n\n          products.push(entityManager.save(orderProduct));\n        }\n      }\n      await entityManager.save(OrderEntity, order);\n      await Promise.all([\n        ...categories,\n        ...products,\n        // entityManager.save(order),\n      ]).catch((e) => {\n        throw e;\n      });\n\n      return order;\n    });\n  }\n\n  async create(body: OrderRequest, user: ActiveUserData): Promise {\n    const { categories, ...rest } = body;\n    const order = new OrderEntity().extend({\n      ...rest,\n      companyId: user.companyId,\n      userId: user.id,\n    });\n\n    return this.saveData(order, body);\n  }\n\n  async update(id: number, body: OrderRequest): Promise {\n    const order = await this.getByIdWithError(id);\n    const { categories, ...rest } = body;\n\n    order.extend(rest);\n\n    return this.saveData(order, body, true);\n  }\n\n  async changeStatus(\n    id: number,\n    body: OrderStatusRequest\n  ): Promise {\n    const order = await this.getByIdWithError(id);\n\n    if (order.status !== OrderStatus.UNPAYED) {\n      throw new ApiException(\n        \"Status has been closed.\",\n        ApiStatusCode.UNKOWN_ERROR,\n        HttpStatus.OK\n      );\n    }\n\n    if (body.status === OrderStatus.UNPAYED) {\n      return order;\n    }\n\n    order.extend(body);\n\n    return this.em.save(OrderEntity, order);\n  }\n\n  async remove(id: number) {\n    const customer = await this.getByIdWithError(id);\n\n    return this.repo.softRemove(customer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderStatusRequest.html":{"url":"classes/OrderStatusRequest.html","title":"class - OrderStatusRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderStatusRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Max(2)@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsDate,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class OrderProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n  @IsNumber()\n  discount: number;\n}\n\nexport class OrderCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: OrderProduct[];\n}\n\nexport class OrderRequest {\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  customerId?: number;\n\n  totalPrice?: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: OrderCategory[];\n}\n\nexport class OrderStatusRequest {\n  @IsNumber()\n  @Max(2)\n  @Min(0)\n  status?: OrderStatus;\n}\n\nexport class OrderWhere {\n  @IsDate()\n  startDate?: Date;\n  \n  @IsDate()\n  endDate?: Date;\n\n  @IsNumber()\n  customerId?: number;\n\n  @IsNumber()\n  status?: OrderStatus;\n\n  @IsString()\n  no?: string;\n}\n\nexport class OrderQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderWhere.html":{"url":"classes/OrderWhere.html","title":"class - OrderWhere","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderWhere\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/order/order.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                customerId\n                            \n                            \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    Optional\n                                no\n                            \n                            \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        customerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        no\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/order/order.interface.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsDate,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\nimport { OrderStatus } from \"@bill/database/dist/enums/OrderStatus\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class OrderProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n  @IsNumber()\n  discount: number;\n}\n\nexport class OrderCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: OrderProduct[];\n}\n\nexport class OrderRequest {\n  @IsString()\n  no: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  customerId?: number;\n\n  totalPrice?: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: OrderCategory[];\n}\n\nexport class OrderStatusRequest {\n  @IsNumber()\n  @Max(2)\n  @Min(0)\n  status?: OrderStatus;\n}\n\nexport class OrderWhere {\n  @IsDate()\n  startDate?: Date;\n  \n  @IsDate()\n  endDate?: Date;\n\n  @IsNumber()\n  customerId?: number;\n\n  @IsNumber()\n  status?: OrderStatus;\n\n  @IsString()\n  no?: string;\n}\n\nexport class OrderQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductBodyRequest.html":{"url":"classes/ProductBodyRequest.html","title":"class - ProductBodyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductBodyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/product/product.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                cost\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                unitId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unitId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/product/product.interface.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Max, Min } from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class ProductBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  label: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsNumber()\n  cost: number;\n\n  @IsNumber()\n  categoryId: number;\n\n  @IsNumber()\n  unitId: number;\n}\n\nexport class ProductQuery extends BaseQuery {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductCategoryController.html":{"url":"controllers/ProductCategoryController.html","title":"controller - ProductCategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductCategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productCategory/category.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: ProductCategoryQuery, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductCategoryQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: ProductCategoryRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ProductCategoryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: ProductCategoryRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ProductCategoryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport {\n  ProductCategoryRequest,\n  ProductCategoryQuery,\n} from \"./category.interface\";\nimport { ProductCategoryService } from \"./category.service\";\n\n@Controller({\n  path: [\"product/categories\"],\n})\n@Roles(Role.User)\nexport class ProductCategoryController {\n  constructor(\n    private productCategoryService: ProductCategoryService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(\n    @Query() query: ProductCategoryQuery,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.productCategoryService.all(query, user);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.productCategoryService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(\n    @Body() body: ProductCategoryRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.productCategoryService.create(body, user);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: ProductCategoryRequest) {\n    return this.productCategoryService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.productCategoryService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductCategoryModule.html":{"url":"modules/ProductCategoryModule.html","title":"module - ProductCategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductCategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductCategoryModule\n\n\n\ncluster_ProductCategoryModule_exports\n\n\n\ncluster_ProductCategoryModule_providers\n\n\n\n\nProductCategoryService \n\nProductCategoryService \n\n\n\nProductCategoryModule\n\nProductCategoryModule\n\nProductCategoryService  -->\n\nProductCategoryModule->ProductCategoryService \n\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\nProductCategoryModule -->\n\nProductCategoryService->ProductCategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/productCategory/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductCategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductCategoryController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductCategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ProductCategoryController } from \"./category.controller\";\nimport { ProductCategoryService } from \"./category.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [ProductCategoryService],\n  exports: [ProductCategoryService],\n  controllers: [ProductCategoryController],\n})\nexport class ProductCategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductCategoryQuery.html":{"url":"classes/ProductCategoryQuery.html","title":"class - ProductCategoryQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductCategoryQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productCategory/category.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Length, Max, Min } from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class ProductCategoryRequest {\n  @IsString()\n  name: string;\n\n  @IsString()\n  label: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class ProductCategoryQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductCategoryRequest.html":{"url":"classes/ProductCategoryRequest.html","title":"class - ProductCategoryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductCategoryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productCategory/category.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productCategory/category.interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productCategory/category.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productCategory/category.interface.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Length, Max, Min } from \"class-validator\";\nimport { PermissionType } from \"@bill/database\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class ProductCategoryRequest {\n  @IsString()\n  name: string;\n\n  @IsString()\n  label: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class ProductCategoryQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductCategoryService.html":{"url":"injectables/ProductCategoryService.html","title":"injectable - ProductCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productCategory/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, request)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/productCategory/category.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: ProductCategoryQuery, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductCategoryQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: ProductCategoryRequest, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ProductCategoryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: ProductCategoryRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productCategory/category.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ProductCategoryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ILike, Like, Repository } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { ProductCategoryEntity, UserEntity } from \"@bill/database/dist/entities\";\nimport { HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport dataFilter from \"@/common/utils/dataFilter\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport {\n  ProductCategoryQuery,\n  ProductCategoryRequest,\n} from \"./category.interface\";\n\n@Injectable()\nexport class ProductCategoryService {\n  constructor(\n    @InjectRepository(ProductCategoryEntity)\n    private repo: Repository,\n    @Inject(REQUEST) private request: Request & { userEntity: UserEntity }\n\n  ) {}\n\n  async all(\n    query: ProductCategoryQuery,\n    user?: ActiveUserData\n  ): Promise {\n    const { name, ...rest } = query.where || {};\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...rest,\n        ...(name ? { name: ILike(`%${name}%`) } : {}),\n        ...dataFilter(this.request.userEntity),\n      },\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  async getById(id?: number): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const data = await this.repo.findOneBy({\n      id,\n    });\n\n    return data || null;\n  }\n\n  async getByIdWithError(\n    id?: number\n  ): Promise {\n    const category = await this.getById(id);\n\n    if (!category) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"ProductCategoryEntity\",\n        }\n      );\n    }\n\n    return category;\n  }\n\n  async create(\n    body: ProductCategoryRequest,\n    user?: ActiveUserData\n  ): Promise {\n    const { ...rest } = body;\n    const category = new ProductCategoryEntity().extend({\n      ...rest,\n      companyId: user?.companyId,\n      userId: user?.id,\n    });\n\n    return await this.repo.save(category);\n  }\n\n  async update(\n    id: number,\n    body: ProductCategoryRequest\n  ): Promise {\n    const category = await this.getByIdWithError(id);\n\n    category.extend({\n      ...body,\n    });\n\n    return this.repo.save(category);\n  }\n\n  async remove(id: number) {\n    const data = await this.getByIdWithError(id);\n\n    return this.repo.remove(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/product/product.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: ProductQuery, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: ProductBodyRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ProductBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: ProductBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ProductBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { ProductBodyRequest, ProductQuery } from \"./product.interface\";\nimport { ProductService } from \"./product.service\";\n\n@Controller({\n  path: [\"products\"],\n})\n@Roles(Role.User)\nexport class ProductController {\n  constructor(\n    private productService: ProductService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(@Query() query: ProductQuery, @ActiveUser() user: ActiveUserData) {\n    return this.productService.all(query, user);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.productService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(\n    @Body() body: ProductBodyRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.productService.create(body, user);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: ProductBodyRequest) {\n    return this.productService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.productService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\nProductModule -->\n\nProductCategoryService->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nProductUnitService\n\nProductUnitService\n\nProductModule -->\n\nProductUnitService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductCategoryService\n                        \n                        \n                            ProductService\n                        \n                        \n                            ProductUnitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ProductCategoryService } from \"@/modules/productCategory/category.service\";\nimport { ProductUnitService } from \"@/modules/productUnit/unit.service\";\n\nimport { ProductController } from \"./product.controller\";\nimport { ProductService } from \"./product.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [ProductService, ProductCategoryService, ProductUnitService],\n  exports: [ProductService],\n  controllers: [ProductController],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductQuery.html":{"url":"classes/ProductQuery.html","title":"class - ProductQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/product/product.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Max, Min } from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class ProductBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  label: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsNumber()\n  cost: number;\n\n  @IsNumber()\n  categoryId: number;\n\n  @IsNumber()\n  unitId: number;\n}\n\nexport class ProductQuery extends BaseQuery {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Log4jsService, repo: Repository, productCategoryService: ProductCategoryService, productUnitService: ProductUnitService, request)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/product/product.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Log4jsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productCategoryService\n                                                  \n                                                        \n                                                                        ProductCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productUnitService\n                                                  \n                                                        \n                                                                        ProductUnitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: ProductQuery, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: ProductBodyRequest, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ProductBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: ProductBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/product/product.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ProductBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Like, Repository, Not, In } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { ProductEntity, UserEntity } from \"@bill/database/dist/entities\";\nimport { HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport dataFilter from \"@/common/utils/dataFilter\";\nimport { Log4jsService } from \"@/modules/log4js\";\nimport { ProductCategoryService } from \"@/modules/productCategory/category.service\";\nimport { ProductUnitService } from \"@/modules/productUnit/unit.service\";\n\nimport { ProductBodyRequest, ProductQuery } from \"./product.interface\";\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    private logger: Log4jsService,\n    @InjectRepository(ProductEntity) private repo: Repository,\n    private productCategoryService: ProductCategoryService,\n    private productUnitService: ProductUnitService,\n    @Inject(REQUEST) private request: Request & { userEntity: UserEntity }\n  ) {}\n\n  async all(\n    query: ProductQuery,\n    user: ActiveUserData\n  ): Promise {\n    const { name, excludeIds, ...otherConditions } = query.where || {};\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...otherConditions,\n        ...(name ? { name: Like(`%${name}%`) } : {}),\n        ...(excludeIds ? { id: Not(In(excludeIds)) } : {}),\n        ...dataFilter(this.request.userEntity),\n        // companyId: user?.companyId,\n        // userId: user.id,\n      },\n      relations: {\n        category: true,\n        unit: true,\n      },\n      withDeleted: false,\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  async getById(id?: number): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const data = await this.repo.findOneBy({\n      id,\n    });\n\n    return data || null;\n  }\n\n  async getByIdWithError(id?: number): Promise {\n    const category = await this.getById(id);\n\n    if (!category) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"ProductEntity\",\n        }\n      );\n    }\n\n    return category;\n  }\n\n  async create(\n    body: ProductBodyRequest,\n    user?: ActiveUserData\n  ): Promise {\n    const { unitId, categoryId, id, ...rest } = body;\n    const unit = await this.productUnitService.getById(unitId);\n    const category = await this.productCategoryService.getByIdWithError(\n      categoryId\n    );\n    const child = new ProductEntity().extend({\n      ...rest,\n      companyId: user?.companyId,\n      userId: user?.id,\n    });\n\n    if (!unit || !category) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    child.category = category;\n    child.unit = unit;\n\n    return await this.repo.save(child);\n  }\n\n  async update(id: number, body: ProductBodyRequest): Promise {\n    const product = await this.getById(id);\n    const unit = await this.productCategoryService.getById(body.unitId);\n    const category = await this.productCategoryService.getById(body.categoryId);\n\n    if (!product || !unit || !category) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    product.label = body.label;\n    product.name = body.name;\n    product.cost = body.cost;\n    product.desc = body.desc;\n    product.price = body.price;\n    product.category = category;\n    product.unit = unit;\n\n    return this.repo.save(product);\n  }\n\n  async remove(id: number) {\n    const child = await this.getById(id);\n\n    if (!child) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    return this.repo.softRemove(child);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductUnitBodyRequest.html":{"url":"classes/ProductUnitBodyRequest.html","title":"class - ProductUnitBodyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductUnitBodyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productUnit/unit.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productUnit/unit.interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productUnit/unit.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productUnit/unit.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/productUnit/unit.interface.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Max, Min } from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class ProductUnitBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  label: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class ProductUnitQuery extends BaseQuery {\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductUnitController.html":{"url":"controllers/ProductUnitController.html","title":"controller - ProductUnitController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductUnitController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productUnit/unit.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: ProductUnitQuery, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductUnitQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: ProductUnitBodyRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ProductUnitBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: ProductUnitBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ProductUnitBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { ProductUnitBodyRequest, ProductUnitQuery } from \"./unit.interface\";\nimport { ProductUnitService } from \"./unit.service\";\n\n@Controller({\n  path: [\"product/units\"],\n})\n@Roles(Role.User)\nexport class ProductUnitController {\n  constructor(\n    private ProductUnitService: ProductUnitService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(\n    @Query() query: ProductUnitQuery,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.ProductUnitService.all(query, user);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.ProductUnitService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(\n    @Body() body: ProductUnitBodyRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.ProductUnitService.create(body, user);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: ProductUnitBodyRequest) {\n    return this.ProductUnitService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.ProductUnitService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductUnitModule.html":{"url":"modules/ProductUnitModule.html","title":"module - ProductUnitModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductUnitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductUnitModule\n\n\n\ncluster_ProductUnitModule_exports\n\n\n\ncluster_ProductUnitModule_providers\n\n\n\n\nProductUnitService \n\nProductUnitService \n\n\n\nProductUnitModule\n\nProductUnitModule\n\nProductUnitService  -->\n\nProductUnitModule->ProductUnitService \n\n\n\n\n\nProductUnitService\n\nProductUnitService\n\nProductUnitModule -->\n\nProductUnitService->ProductUnitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/productUnit/unit.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductUnitService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductUnitController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductUnitService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ProductUnitController } from \"./unit.controller\";\nimport { ProductUnitService } from \"./unit.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [ProductUnitService],\n  exports: [ProductUnitService],\n  controllers: [ProductUnitController],\n})\nexport class ProductUnitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductUnitQuery.html":{"url":"classes/ProductUnitQuery.html","title":"class - ProductUnitQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductUnitQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productUnit/unit.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString, Max, Min } from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class ProductUnitBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  label: string;\n\n  @IsString()\n  desc: string;\n}\n\nexport class ProductUnitQuery extends BaseQuery {\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductUnitService.html":{"url":"injectables/ProductUnitService.html","title":"injectable - ProductUnitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductUnitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/productUnit/unit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, request)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/productUnit/unit.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: ProductUnitQuery, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            ProductUnitQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: ProductUnitBodyRequest, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ProductUnitBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: ProductUnitBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/productUnit/unit.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ProductUnitBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, Like, Repository } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { ProductUnitEntity, UserEntity } from \"@bill/database/dist/entities\";\nimport { HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport dataFilter from \"@/common/utils/dataFilter\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { ProductUnitBodyRequest, ProductUnitQuery } from \"./unit.interface\";\n\n@Injectable()\nexport class ProductUnitService {\n  constructor(\n    @InjectRepository(ProductUnitEntity)\n    private repo: Repository,\n    @Inject(REQUEST) private request: Request & { userEntity: UserEntity }\n  ) {}\n\n  async all(\n    query: ProductUnitQuery,\n    user?: ActiveUserData\n  ): Promise {\n    const { name, ...rest } = query.where || {};\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...rest,\n        ...(name ? { name: Like(`%${name}%`) } : {}),\n        ...dataFilter(this.request.userEntity),\n      },\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  async getById(id?: number): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const data = await this.repo.findOneBy({\n      id,\n    });\n\n    return data || null;\n  }\n\n  async getByIdWithError(id?: number): Promise {\n    const category = await this.getById(id);\n\n    if (!category) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"ProductUnitEntity\",\n        }\n      );\n    }\n\n    return category;\n  }\n\n  async create(\n    body: ProductUnitBodyRequest,\n    user?: ActiveUserData\n  ): Promise {\n    const { ...rest } = body;\n\n    const child = new ProductUnitEntity().extend({\n      ...rest,\n      companyId: user?.companyId,\n      userId: user?.id,\n    });\n\n    return await this.repo.save(child);\n  }\n\n  async update(\n    id: number,\n    body: ProductUnitBodyRequest\n  ): Promise {\n    const child = await this.getByIdWithError(id);\n\n    child.label = body.label;\n    child.name = body.name;\n    child.desc = body.desc;\n\n    return this.repo.save(child);\n  }\n\n  async remove(id: number) {\n    const child = await this.getByIdWithError(id);\n\n    return this.repo.remove(child);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown(signal?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/redis/redis.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Redis } from 'ioredis';\nimport { Global, Module, OnApplicationShutdown, Scope } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ModuleRef } from '@nestjs/core';\n\nimport { IORedisKey } from './redis.constants';\nimport { RedisService } from './redis.service';\n\n@Global()\n@Module({\n  imports: [ConfigModule],\n  providers: [\n    {\n      provide: IORedisKey,\n      useFactory: async (configService: ConfigService) => {\n        return new Redis(configService.get('redis') as any);\n      },\n      inject: [ConfigService],\n    },\n    RedisService,\n  ],\n  exports: [RedisService],\n})\nexport class RedisModule implements OnApplicationShutdown {\n  constructor(private readonly moduleRef: ModuleRef) {}\n\n  async onApplicationShutdown(signal?: string): Promise {\n    return new Promise((resolve) => {\n      const redis = this.moduleRef.get(IORedisKey);\n      redis.quit();\n      redis.on('end', () => {\n        resolve();\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getKeys\n                            \n                            \n                                    Async\n                                insert\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redisClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/redis/redis.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/redis/redis.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: RedisKey)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/redis/redis.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        RedisKey\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getKeys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getKeys(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/redis/redis.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        insert\n                        \n                    \n                \n            \n            \n                \n                        \n                    insert(key: string, value: string | number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/redis/redis.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/redis/redis.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Redis, RedisKey } from \"ioredis\";\nimport { Inject, Injectable } from \"@nestjs/common\";\n\nimport { IORedisKey } from \"./redis.constants\";\n\n@Injectable()\nexport class RedisService {\n  constructor(\n    @Inject(IORedisKey)\n    private readonly redisClient: Redis\n  ) {}\n\n  async getKeys(pattern: string): Promise {\n    return await this.redisClient.keys(pattern);\n  }\n\n  async insert(key: string, value: string | number): Promise {\n    await this.redisClient.set(key, value);\n  }\n\n  async get(key: RedisKey): Promise {\n    return this.redisClient.get(key);\n  }\n\n  async delete(key: string): Promise {\n    await this.redisClient.del(key);\n  }\n\n  async validate(key: string, value: string): Promise {\n    const storedValue = await this.redisClient.get(key);\n    return storedValue === value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseInterceptor.html":{"url":"classes/ResponseInterceptor.html","title":"class - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/common/interceptor/res.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler<>)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/interceptor/res.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { map, Observable } from \"rxjs\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { CallHandler, ExecutionContext, NestInterceptor } from \"@nestjs/common\";\n\nexport class ResponseInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable | Promise> {\n    // const ctx = context.switchToHttp();\n\n    return next.handle().pipe(\n      map((data, ...args) => {\n        return {\n          data,\n          code: ApiStatusCode.SUCCESS,\n          message: \"SUCCESS\",\n        };\n      })\n    );\n    // .pipe(catchError((err) => ));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/role/role.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                oneAndMenus\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: RoleQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            RoleQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: RoleRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RoleRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        oneAndMenus\n                        \n                    \n                \n            \n            \n                \n                        \n                    oneAndMenus(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/permission')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: RoleRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            RoleRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { Public } from \"@/common/decorators/public.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { RoleQuery, RoleRequest } from \"./role.interface\";\nimport { RoleService } from \"./role.service\";\n\n@Controller({\n  path: [\"roles\"],\n})\n@Roles(Role.Admin)\nexport class RoleController {\n  constructor(\n    private roleService: RoleService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(@Query() query: RoleQuery) {\n    return this.roleService.all(query);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.roleService.getById(id);\n  }\n\n  @Get(\"/:id/permission\")\n  async oneAndMenus(@Param(\"id\") id: number) {\n    return this.roleService.getByIdWithPermission(id);\n  }\n\n  @Post(\"/\")\n  async create(@Body() body: RoleRequest) {\n    return this.roleService.create(body);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: RoleRequest) {\n    return this.roleService.update(id, body);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.roleService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nMenuService\n\nMenuService\n\nRoleModule -->\n\nMenuService->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MenuService\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RolesGuard } from \"@/common/guard/role.guard\";\nimport { MenuService } from \"@/modules/menu/menu.service\";\n\nimport { RoleController } from \"./role.controller\";\nimport { RoleService } from \"./role.service\";\n\n@Module({\n  controllers: [RoleController],\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [\n    RoleService,\n    MenuService,\n  ],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleQuery.html":{"url":"classes/RoleQuery.html","title":"class - RoleQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/role/role.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\nimport { MenuBodyRequest } from \"@/modules/menu/menu.interface\";\n\nexport class RoleRequest {\n  @IsString()\n  name: string;\n  @IsString()\n  label: string;\n  @IsString()\n  desc: string;\n  @IsNumber()\n  order: number;\n  @IsNumber()\n  status: number;\n  \n  menus?: number[];\n}\n\nexport class RoleQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleRequest.html":{"url":"classes/RoleRequest.html","title":"class - RoleRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/role/role.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    Optional\n                                menus\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                order\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/role/role.interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/role/role.interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        menus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/role/role.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/role/role.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/role/role.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/role/role.interface.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\nimport { MenuBodyRequest } from \"@/modules/menu/menu.interface\";\n\nexport class RoleRequest {\n  @IsString()\n  name: string;\n  @IsString()\n  label: string;\n  @IsString()\n  desc: string;\n  @IsNumber()\n  order: number;\n  @IsNumber()\n  status: number;\n  \n  menus?: number[];\n}\n\nexport class RoleQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithPermission\n                            \n                            \n                                getValidMenus\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                removeUselessMenu\n                            \n                            \n                                shouldHideMenu\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/role/role.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: RoleQuery, withRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            RoleQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                withRelation\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: RoleRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RoleRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number, loadRelationIds)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                loadRelationIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithPermission\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithPermission(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidMenus\n                        \n                    \n                \n            \n            \n                \ngetValidMenus(menus: MenuEntity[], menuIds: number[], parentId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                menus\n                                            \n                                                        MenuEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                menuIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                parentId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUselessMenu\n                        \n                    \n                \n            \n            \n                \nremoveUselessMenu(menus: MenuEntity[])\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menus\n                                            \n                                                        MenuEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldHideMenu\n                        \n                    \n                \n            \n            \n                \nshouldHideMenu(menu: MenuEntity, checkIds: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        MenuEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: RoleRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/role/role.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            RoleRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as _ from \"lodash\";\nimport { In, Repository } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { MenuEntity, RoleEntity } from \"@bill/database/dist/entities\";\nimport { HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { MenuService } from \"@/modules/menu/menu.service\";\n\nimport { RoleQuery, RoleRequest } from \"./role.interface\";\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(RoleEntity) private repo: Repository,\n    private menuService: MenuService\n  ) {}\n\n  async all(\n    query: RoleQuery,\n    withRelation = false\n  ): Promise {\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...query.where,\n      },\n      relations: {\n        menus: true,\n      },\n      loadRelationIds: true,\n      withDeleted: false,\n    });\n\n    return {\n      rows,\n      count,\n    };\n  }\n\n  shouldHideMenu(menu: MenuEntity, checkIds: number[]) {\n    if (checkIds.indexOf(menu.id) >= 0) {\n      return true;\n    }\n\n    if (!menu.children?.length) {\n      return false;\n    }\n\n    for (const key in menu.children) {\n      const child = menu.children[key];\n\n      child.showed = this.shouldHideMenu(child, checkIds);\n    }\n\n    return (\n      menu.children?.filter((c) => {\n        return c.showed;\n      }).length > 0\n    );\n  }\n\n  removeUselessMenu(menus: MenuEntity[]) {\n    _.remove(menus, (m) => {\n      return m.showed === false;\n    });\n\n    for (const key in menus) {\n      const element = menus[key];\n\n      if (element.children?.length) {\n        this.removeUselessMenu(element.children);\n      }\n    }\n  }\n\n  getValidMenus(menus: MenuEntity[], menuIds: number[], parentId = 0) {\n    this.shouldHideMenu(\n      new MenuEntity().extend({\n        id: -1,\n        children: menus,\n      }),\n      menuIds\n    );\n\n    this.removeUselessMenu(menus);\n\n    return menus;\n  }\n\n  async getByIdWithPermission(id: number): Promise {\n    const data = await this.getById(id, true);\n    const menuTree = await this.menuService.all();\n\n    if (!data || !menuTree) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          entity: \"RoleEntity\",\n        }\n      );\n    }\n\n    data.menus = this.getValidMenus(menuTree, data.menus as any);\n\n    return data;\n  }\n\n  async getById(\n    id?: number,\n    loadRelationIds = false\n  ): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const data = await this.repo.findOne({\n      where: {\n        id,\n      },\n      loadRelationIds: loadRelationIds,\n    });\n\n    return data || null;\n  }\n\n  async create(body: RoleRequest): Promise {\n    const { menus, ...rest } = body;\n    const role = new RoleEntity().extend({\n      ...rest,\n    });\n\n    role.menus = await this.repo.manager.find(MenuEntity, {\n      where: {\n        id: In(menus || []),\n      },\n    });\n\n    return await this.repo.save(role);\n  }\n\n  async update(id: number, body: RoleRequest): Promise {\n    const role = await this.getById(id);\n    const { menus, ...rest } = body;\n\n    if (!role) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          entity: \"RoleEntity\",\n        }\n      );\n    }\n\n    role.extend(rest);\n\n    role.menus = await this.repo.manager.find(MenuEntity, {\n      where: {\n        id: In(menus || []),\n      },\n    });\n\n    return this.repo.save(role);\n  }\n\n  async remove(id: number) {\n    const role = await this.getById(id);\n\n    if (!role) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK\n      );\n    }\n\n    return this.repo.softRemove(role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/server/src/common/guard/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/common/guard/role.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/common/guard/role.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Role } from \"@bill/database\";\nimport { Injectable, CanActivate, ExecutionContext } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\n\nimport { ROLES_KEY } from \"@/common/decorators/roles.decorator\";\nimport { UserService } from \"@/modules/user/user.service\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector, private userService: UserService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    const request = context.switchToHttp().getRequest();\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = request;\n\n    const userEntity = await this.userService.getByIdWithError(user?.id, {\n      role: true,\n      company: true,\n    });\n\n    request.userEntity = userEntity;\n\n    if(userEntity.role?.label === Role.Admin) {\n      return true;\n    }\n\n    return requiredRoles.some((role) => userEntity.role?.label === role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateBodyRequest.html":{"url":"classes/TemplateBodyRequest.html","title":"class - TemplateBodyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateBodyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categories\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateCategory[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayMinSize(1)@ArrayMaxSize(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class TemplateCategoryProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n}\n\nexport class TemplateCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: TemplateCategoryProduct[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {\n  ids?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateCategory.html":{"url":"classes/TemplateCategory.html","title":"class - TemplateCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                productCategoryId\n                            \n                            \n                                    \n                                    \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateCategoryProduct[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayMinSize(1)@ArrayMaxSize(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class TemplateCategoryProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n}\n\nexport class TemplateCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: TemplateCategoryProduct[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {\n  ids?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateCategoryProduct.html":{"url":"classes/TemplateCategoryProduct.html","title":"class - TemplateCategoryProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateCategoryProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class TemplateCategoryProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n}\n\nexport class TemplateCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: TemplateCategoryProduct[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {\n  ids?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplateModule.html":{"url":"modules/TemplateModule.html","title":"module - TemplateModule","body":"\n                   \n\n\n\n\n    Modules\n    TemplateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplateModule\n\n\n\ncluster_TemplateModule_providers\n\n\n\ncluster_TemplateModule_exports\n\n\n\n\nTemplateService \n\nTemplateService \n\n\n\nTemplateModule\n\nTemplateModule\n\nTemplateService  -->\n\nTemplateModule->TemplateService \n\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\nTemplateModule -->\n\nProductCategoryService->TemplateModule\n\n\n\n\n\nProductService\n\nProductService\n\nTemplateModule -->\n\nProductService->TemplateModule\n\n\n\n\n\nProductUnitService\n\nProductUnitService\n\nTemplateModule -->\n\nProductUnitService->TemplateModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nTemplateModule -->\n\nTemplateService->TemplateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/template/template.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductCategoryService\n                        \n                        \n                            ProductService\n                        \n                        \n                            ProductUnitService\n                        \n                        \n                            TemplateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MenuController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TemplateService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ProductService } from \"@/modules/product/product.service\";\nimport { ProductCategoryService } from \"@/modules/productCategory/category.service\";\nimport { ProductUnitService } from \"@/modules/productUnit/unit.service\";\n\nimport { MenuController } from \"./template.controller\";\nimport { TemplateService } from \"./template.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [TemplateService, ProductCategoryService, ProductService, ProductUnitService],\n  exports: [TemplateService],\n  controllers: [MenuController],\n})\nexport class TemplateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateQuery.html":{"url":"classes/TemplateQuery.html","title":"class - TemplateQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/template/template.interface.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsNumber,\n  IsString,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class TemplateCategoryProduct {\n  @IsNumber()\n  productId: number;\n  @IsNumber()\n  price: number;\n  @IsNumber()\n  count: number;\n}\n\nexport class TemplateCategory {\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  productCategoryId: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  products: TemplateCategoryProduct[];\n}\n\nexport class TemplateBodyRequest {\n  id?: number;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsNumber()\n  status: number;\n\n  @ArrayMinSize(1)\n  @ArrayMaxSize(100)\n  categories: TemplateCategory[];\n}\n\nexport class TemplateQuery extends BaseQuery {\n  ids?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateService.html":{"url":"injectables/TemplateService.html","title":"injectable - TemplateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/template/template.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithCategories\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                saveData\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, repo: Repository, repoTC: Repository, repoTCP: Repository, request)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/template/template.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoTC\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repoTCP\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: TemplateQuery, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            TemplateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: TemplateBodyRequest, user?: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithCategories(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveData(child: TemplateEntity, body: TemplateBodyRequest, remove)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                child\n                                            \n                                                        TemplateEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                remove\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: TemplateBodyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/template/template.service.ts:238\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            TemplateBodyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as _ from \"lodash\";\nimport { EntityManager, In, Not, Repository } from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport {\n  ProductCategoryEntity,\n  ProductEntity,\n  TemplateCategoryEntity,\n  TemplateCategoryProductEntity,\n  TemplateEntity,\n  UserEntity,\n} from \"@bill/database/dist/entities\";\nimport { HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport dataFilter from \"@/common/utils/dataFilter\";\n\nimport { TemplateBodyRequest, TemplateQuery } from \"./template.interface\";\n\n@Injectable()\nexport class TemplateService {\n  constructor(\n    private em: EntityManager,\n    @InjectRepository(TemplateEntity) private repo: Repository,\n    @InjectRepository(TemplateCategoryEntity)\n    private repoTC: Repository,\n    @InjectRepository(TemplateCategoryProductEntity)\n    private repoTCP: Repository,\n    @Inject(REQUEST) private request: Request & { userEntity: UserEntity }\n  ) {}\n\n  async all(\n    query: TemplateQuery,\n    user?: ActiveUserData\n  ): Promise {\n    const whereCondition = {\n      ...query.where,\n      ...dataFilter(this.request.userEntity),\n    };\n\n    if (query.ids && query.ids.length > 0) {\n      whereCondition[\"id\"] = Not(In(query.ids));\n    }\n\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: whereCondition,\n    });\n\n    return {\n      count,\n      rows,\n    };\n  }\n\n  async getById(id?: number): Promise {\n    if (!id) {\n      return undefined;\n    }\n\n    const data = await this.repo.findOneBy({\n      id,\n    });\n\n    return data || undefined;\n  }\n\n  async getByIdWithError(id?: number): Promise {\n    const category = await this.getById(id);\n\n    if (!category) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"TemplateEntity\",\n        }\n      );\n    }\n\n    return category;\n  }\n\n  async getByIdWithCategories(id?: number) {\n    await this.getByIdWithError(id);\n\n    const categories = (await this.repoTC.find({\n      where: {\n        templateId: id,\n      },\n      relations: {\n        category: true,\n      },\n    })) as (TemplateCategoryEntity & {\n      products: TemplateCategoryProductEntity[];\n    })[];\n\n    const categoryProducts = await this.repoTCP.find({\n      where: {\n        templateCategory: {\n          id: In(categories.map((c) => c.id)),\n        },\n      },\n      relations: {\n        templateCategory: true,\n        product: {\n          unit: true,\n        },\n      },\n    });\n\n    const categoryMap = _.keyBy(categories, \"id\");\n\n    for (const cp of categoryProducts) {\n      const category = categoryMap[cp.templateCategory.id];\n\n      if (category) {\n        if (!category.products) {\n          category.products = [];\n        }\n        category.products.push(cp);\n      }\n    }\n\n    return categories;\n  }\n\n  async saveData(\n    child: TemplateEntity,\n    body: TemplateBodyRequest,\n    remove = false\n  ) {\n    return await this.em.transaction(async (entityManager: EntityManager) => {\n      const template = await entityManager.save(child);\n      const categories: Promise[] = [];\n      const products: Promise[] = [];\n\n      if (remove) {\n        await this.repoTCP.delete({\n          templateId: template.id,\n        });\n        await this.repoTC.delete({\n          templateId: template.id,\n        });\n      }\n\n      for (const c of body.categories) {\n        const productCategory =\n          await entityManager.findOneBy(\n            ProductCategoryEntity,\n            {\n              id: c.productCategoryId,\n            }\n          );\n\n        if (!productCategory) {\n          throw new ApiException(\n            \"can not find recoed\",\n            ApiStatusCode.KEY_NOT_EXIST,\n            HttpStatus.OK,\n            {\n              id: c.productCategoryId,\n              type: \"ProductCategory\",\n            }\n          );\n        }\n\n        const templateCategory = new TemplateCategoryEntity().extend({\n          category: productCategory,\n          templateId: child.id,\n          name: c.name,\n        });\n        categories.push(entityManager.save(templateCategory));\n\n        for (const p of c.products) {\n          const product = await entityManager.findOneBy(ProductEntity, {\n            id: p.productId,\n          });\n\n          if (!product) {\n            throw new ApiException(\n              \"can not find recoed\",\n              ApiStatusCode.KEY_NOT_EXIST,\n              HttpStatus.OK,\n              {\n                id: p,\n                type: \"Product\",\n              }\n            );\n          }\n\n          const templateCategoryProduct =\n            new TemplateCategoryProductEntity().extend({\n              product: product,\n              price: p.price,\n              count: p.count,\n              templateCategory: templateCategory,\n              templateId: child.id,\n            });\n\n          products.push(entityManager.save(templateCategoryProduct));\n        }\n      }\n\n      await Promise.all([...categories, ...products]).catch((e) => {\n        throw e;\n      });\n\n      return template;\n    });\n  }\n\n  async create(\n    body: TemplateBodyRequest,\n    user?: ActiveUserData\n  ): Promise {\n    const { categories, ...rest } = body;\n    const child = new TemplateEntity().extend({\n      // ...rest,\n      name: rest.name,\n      desc: rest.desc,\n      companyId: user?.companyId,\n      userId: user?.id,\n      status: 1,\n    });\n\n    return this.saveData(child, body);\n  }\n\n  async update(id: number, body: TemplateBodyRequest): Promise {\n    const child = await this.getByIdWithError(id);\n\n    child.extend({\n      desc: body.desc,\n      name: body.name,\n    });\n\n    return this.saveData(child, body, true);\n  }\n\n  async remove(id: number) {\n    const child = await this.getByIdWithError(id);\n\n    return this.repo.softRemove(child);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                all\n                            \n                            \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                one\n                            \n                            \n                                    \n                                    Async\n                                remote\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: UserQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            UserQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(body: UserPasswordRequest, user: ActiveUserData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id/password')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserPasswordRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: UserRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        one\n                        \n                    \n                \n            \n            \n                \n                        \n                    one(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remote\n                        \n                    \n                \n            \n            \n                \n                        \n                    remote(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: UserRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Role } from \"@bill/database\";\nimport {\n  Controller,\n  Request,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  Delete,\n  Query,\n} from \"@nestjs/common\";\n\nimport { ActiveUser } from \"@/common/decorators/active-user.decorator\";\nimport { Roles } from \"@/common/decorators/roles.decorator\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport { Log4jsService } from \"@/modules/log4js\";\n\nimport { UserPasswordRequest, UserQuery, UserRequest } from \"./user.interface\";\nimport { UserService } from \"./user.service\";\n\n@Controller({\n  path: [\"users\"],\n})\n@Roles(Role.Admin)\nexport class UserController {\n  constructor(\n    private userService: UserService,\n    private readonly log4jService: Log4jsService\n  ) {}\n\n  @Get(\"/\")\n  async all(@Query() query: UserQuery) {\n    return this.userService.all(query);\n  }\n\n  @Get(\"/:id\")\n  async one(@Param(\"id\") id: number) {\n    return this.userService.getById(id);\n  }\n\n  @Post(\"/\")\n  async create(@Body() body: UserRequest) {\n    return this.userService.create(body);\n  }\n\n  @Put(\"/:id\")\n  async update(@Param(\"id\") id: number, @Body() body: UserRequest) {\n    return this.userService.update(id, body);\n  }\n\n  @Put(\"/:id/password\")\n  async changePassword(\n    @Body() body: UserPasswordRequest,\n    @ActiveUser() user: ActiveUserData\n  ) {\n    return this.userService.changePassword(body, user);\n  }\n\n  @Delete(\"/:id\")\n  async remote(@Param(\"id\") id: number) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCompanyService\n\nCompanyService\n\nUserModule -->\n\nCompanyService->UserModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nUserModule -->\n\nMenuService->UserModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nUserModule -->\n\nRoleService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                        \n                            MenuService\n                        \n                        \n                            RoleService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import entities from \"@bill/database\";\nimport { Global, Module } from \"@nestjs/common\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { RolesGuard } from \"@/common/guard/role.guard\";\n\nimport { CompanyService } from \"../company/company.service\";\nimport { MenuService } from \"../menu/menu.service\";\nimport { RoleService } from \"../role/role.service\";\nimport { UserController } from \"./user.controller\";\nimport { UserService } from \"./user.service\";\n\nconsole.log(entities);\n\n@Module({\n  controllers: [UserController],\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [\n    UserService,\n    CompanyService,\n    RoleService,\n    MenuService,\n  ],\n  exports: [UserService],\n})\n@Global()\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPasswordRequest.html":{"url":"classes/UserPasswordRequest.html","title":"class - UserPasswordRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPasswordRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                passwordNew\n                            \n                            \n                                    \n                                passwordNewAgain\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordNewAgain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {\n  IsBoolean,\n  isBoolean,\n  IsEmail,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class UserRequest {\n  @IsString()\n  fullname: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  avatar?: string;\n\n  @IsString()\n  address?: string;\n\n  @IsNumber()\n  company: number;\n\n  @IsString()\n  password: string;\n\n  @IsNumber()\n  validateDate?: number;\n\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsNumber()\n  role: number;\n}\n\nexport class UserPasswordRequest {\n  @IsString()\n  password: string;\n  @IsString()\n  passwordNew: string;\n  @IsString()\n  passwordNewAgain: string;\n}\n\nclass UserSearchModel {\n  @Type(() => Boolean)\n  isActive?: boolean;\n  @Type(() => String)\n  name?: string;\n\n  role?: {\n    id: number;\n  };\n}\n\nexport class UserQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserQuery.html":{"url":"classes/UserQuery.html","title":"class - UserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        where\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseQuery:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {\n  IsBoolean,\n  isBoolean,\n  IsEmail,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class UserRequest {\n  @IsString()\n  fullname: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  avatar?: string;\n\n  @IsString()\n  address?: string;\n\n  @IsNumber()\n  company: number;\n\n  @IsString()\n  password: string;\n\n  @IsNumber()\n  validateDate?: number;\n\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsNumber()\n  role: number;\n}\n\nexport class UserPasswordRequest {\n  @IsString()\n  password: string;\n  @IsString()\n  passwordNew: string;\n  @IsString()\n  passwordNewAgain: string;\n}\n\nclass UserSearchModel {\n  @Type(() => Boolean)\n  isActive?: boolean;\n  @Type(() => String)\n  name?: string;\n\n  role?: {\n    id: number;\n  };\n}\n\nexport class UserQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRequest.html":{"url":"classes/UserRequest.html","title":"class - UserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullname\n                            \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                validateDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validateDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {\n  IsBoolean,\n  isBoolean,\n  IsEmail,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class UserRequest {\n  @IsString()\n  fullname: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  avatar?: string;\n\n  @IsString()\n  address?: string;\n\n  @IsNumber()\n  company: number;\n\n  @IsString()\n  password: string;\n\n  @IsNumber()\n  validateDate?: number;\n\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsNumber()\n  role: number;\n}\n\nexport class UserPasswordRequest {\n  @IsString()\n  password: string;\n  @IsString()\n  passwordNew: string;\n  @IsString()\n  passwordNewAgain: string;\n}\n\nclass UserSearchModel {\n  @Type(() => Boolean)\n  isActive?: boolean;\n  @Type(() => String)\n  name?: string;\n\n  role?: {\n    id: number;\n  };\n}\n\nexport class UserQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSearchModel.html":{"url":"classes/UserSearchModel.html","title":"class - UserSearchModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSearchModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in packages/server/src/modules/user/user.interface.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {\n  IsBoolean,\n  isBoolean,\n  IsEmail,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from \"class-validator\";\n\nimport { BaseQuery } from \"@/common/interfaces/query\";\n\nexport class UserRequest {\n  @IsString()\n  fullname: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  avatar?: string;\n\n  @IsString()\n  address?: string;\n\n  @IsNumber()\n  company: number;\n\n  @IsString()\n  password: string;\n\n  @IsNumber()\n  validateDate?: number;\n\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsNumber()\n  role: number;\n}\n\nexport class UserPasswordRequest {\n  @IsString()\n  password: string;\n  @IsString()\n  passwordNew: string;\n  @IsString()\n  passwordNewAgain: string;\n}\n\nclass UserSearchModel {\n  @Type(() => Boolean)\n  isActive?: boolean;\n  @Type(() => String)\n  name?: string;\n\n  role?: {\n    id: number;\n  };\n}\n\nexport class UserQuery extends BaseQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/server/src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByIdWithError\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RoleService, companyService: CompanyService, repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in packages/server/src/modules/user/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all(query: UserQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            UserQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(body: UserPasswordRequest, user: ActiveUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserPasswordRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ActiveUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: UserRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(fullname: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fullname\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id?: number, relations?: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                        FindOptionsRelations\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByIdWithError\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByIdWithError(id?: number, relations?: FindOptionsRelations)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                relations\n                                            \n                                                        FindOptionsRelations\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, body: UserRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in packages/server/src/modules/user/user.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type {\n  FindOptionsRelationByString,\n  FindOptionsRelations,\n  Repository,\n} from \"typeorm\";\nimport { ApiStatusCode } from \"@bill/database\";\nimport { UserEntity } from \"@bill/database/dist/entities\";\nimport { Global, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\n\nimport { ApiException } from \"@/common/exception/api.exception\";\nimport { ActiveUserData } from \"@/common/interfaces/active-user-data.interface\";\nimport hashPwd from \"@/common/utils/hash\";\nimport { RoleService } from \"@/modules/role/role.service\";\n\nimport { CompanyService } from \"../company/company.service\";\nimport type {\n  UserPasswordRequest,\n  UserQuery,\n  UserRequest,\n} from \"./user.interface\";\n\n@Injectable()\n@Global()\nexport class UserService {\n  constructor(\n    private configService: ConfigService,\n    private roleService: RoleService,\n    private companyService: CompanyService,\n    @InjectRepository(UserEntity) private repo: Repository\n  ) {}\n\n  async all(query: UserQuery): Promise {\n    const { role, ...rest } = query?.where || {};\n    const [rows, count] = await this.repo.findAndCount({\n      skip: query.skip,\n      take: query.take,\n      where: {\n        ...rest,\n        role: role?.id ? { id: ~~role.id } : undefined,\n      },\n      relations: {\n        role: true,\n        company: true,\n      },\n      select: [\"role\", \"company\"],\n      withDeleted: false,\n    });\n\n    return {\n      rows: rows.map((u) => {\n        u.password = \"\";\n        return u;\n      }),\n      count,\n    };\n  }\n\n  async getById(\n    id?: number,\n    relations?: FindOptionsRelations\n  ): Promise {\n    if (!id) {\n      return null;\n    }\n\n    const data = await this.repo.findOne({\n      where: { id },\n      relations,\n    });\n\n    return data || null;\n  }\n\n  async getByIdWithError(\n    id?: number,\n    relations?: FindOptionsRelations\n  ): Promise {\n    const user = await this.getById(id, relations);\n\n    if (!user) {\n      throw new ApiException(\n        \"can not find recoed\",\n        ApiStatusCode.KEY_NOT_EXIST,\n        HttpStatus.OK,\n        {\n          id: id,\n          type: \"UserEntity\",\n        }\n      );\n    }\n\n    return user;\n  }\n\n  async findOne(fullname: string, pass: string): Promise {\n    return this.repo.findOne({\n      where: {\n        fullname: fullname,\n        password: hashPwd(pass, this.configService.get(\"app\").secret),\n      },\n      relations: {\n        role: true,\n        company: true,\n      },\n    });\n  }\n\n  async create(body: UserRequest): Promise {\n    const { password, company, role, ...rest } = body;\n    const user = new UserEntity().extend({\n      ...rest,\n      password: hashPwd(\n        password ?? \"123456789\",\n        this.configService.get(\"app\").secret\n      ),\n      role: (await this.roleService.getById(role)) ?? undefined,\n      company: (await this.companyService.getById(company)) ?? undefined,\n    });\n\n    return await this.repo.save(user);\n  }\n\n  async update(id: number, body: UserRequest): Promise {\n    const user = await this.getByIdWithError(id);\n    const { password, company, role, ...rest } = body;\n\n    user.extend({\n      ...rest,\n      role: await this.roleService.getById(role),\n      company: await this.companyService.getById(company),\n    });\n\n    return this.repo.save(user);\n  }\n\n  async remove(id: number) {\n    const child = await this.getByIdWithError(id);\n\n    return this.repo.softRemove(child);\n  }\n\n  async changePassword(body: UserPasswordRequest, user: ActiveUserData) {\n    const userEntity = await this.getByIdWithError(user.id);\n\n    if (\n      userEntity.password !==\n      hashPwd(body.password, this.configService.get(\"app\").secret)\n    ) {\n      throw new ApiException(\n        \"password not correct\",\n        ApiStatusCode.PASSWORD_NOT_CORRECT,\n        HttpStatus.OK\n      );\n    }\n\n    if (body.passwordNew !== body.passwordNewAgain) {\n      throw new ApiException(\n        \"2 passwords are not match.\",\n        ApiStatusCode.TWO_PASSWORDS_NOT_MATCH,\n        HttpStatus.OK\n      );\n    }\n\n    userEntity.password = hashPwd(\n      body.passwordNew,\n      this.configService.get(\"app\").secret\n    );\n\n    return this.repo.save(userEntity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            COMPONENTS_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            DASHBOARD_PERMISSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            DEFAULT_USER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            ERRORS_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            FUNCTIONS_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            MANAGEMENT_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            MENU_LEVEL_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            ORG_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            OTHERS_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            PERMISSION_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            ROLE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            TEST_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            TEST_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/assets.ts\n            \n            variable\n            USER_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/common/decorators/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/common/decorators/match.decorator.ts\n            \n            class\n            MatchConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        packages/server/src/common/decorators/match.decorator.ts\n            \n            function\n            Match\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/common/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/common/exception/api.exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/common/filter/http.exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/common/guard/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/common/interceptor/res.interceptor.ts\n            \n            class\n            ResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/server/src/common/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/server/src/common/interfaces/query.ts\n            \n            class\n            BaseQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        packages/server/src/common/utils/dataFilter.ts\n            \n            function\n            dataFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/common/utils/hash.ts\n            \n            function\n            hashPwd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/config/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        packages/server/src/config/env.validation.ts\n            \n            function\n            validate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/main.ts\n            \n            type alias\n            ModuleWithHotReload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/migrate.ts\n            \n            function\n            addPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/migrate.ts\n            \n            function\n            addRoleData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/migrate.ts\n            \n            function\n            addUserData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/migrate.ts\n            \n            function\n            migrationExecutor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/auth/auth.controller.ts\n            \n            type alias\n            RequestWithUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/auth.interface.ts\n            \n            class\n            AuthRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/bcrypt.service.ts\n            \n            injectable\n            BcryptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/server/src/modules/auth/guards/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/company/company.interface.ts\n            \n            class\n            CompanyQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/company/company.interface.ts\n            \n            class\n            CompanyRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/modules/customer/customer.interface.ts\n            \n            class\n            CustomerPrice\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/customer/customer.interface.ts\n            \n            class\n            CustomerPriceRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/server/src/modules/customer/customer.interface.ts\n            \n            class\n            CustomerQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/customer/customer.interface.ts\n            \n            class\n            CustomerRequest\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                packages/server/src/modules/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.constants.ts\n            \n            variable\n            LOG4JS_OPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.default.config.ts\n            \n            function\n            buildDefaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.default.config.ts\n            \n            variable\n            basePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/log4js/log4js.provider.ts\n            \n            function\n            createOptionProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/modules/log4js/log4js.service.ts\n            \n            injectable\n            Log4jsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                packages/server/src/modules/menu/menu.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/menu/menu.interface.ts\n            \n            class\n            MenuBodyRequest\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/server/src/modules/menu/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.interface.ts\n            \n            class\n            OrderCategory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.interface.ts\n            \n            class\n            OrderProduct\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.interface.ts\n            \n            class\n            OrderQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.interface.ts\n            \n            class\n            OrderRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.interface.ts\n            \n            class\n            OrderStatusRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.interface.ts\n            \n            class\n            OrderWhere\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                packages/server/src/modules/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/product/product.interface.ts\n            \n            class\n            ProductBodyRequest\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                packages/server/src/modules/product/product.interface.ts\n            \n            class\n            ProductQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productCategory/category.controller.ts\n            \n            controller\n            ProductCategoryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productCategory/category.interface.ts\n            \n            class\n            ProductCategoryQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productCategory/category.interface.ts\n            \n            class\n            ProductCategoryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productCategory/category.service.ts\n            \n            injectable\n            ProductCategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productUnit/unit.controller.ts\n            \n            controller\n            ProductUnitController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productUnit/unit.interface.ts\n            \n            class\n            ProductUnitBodyRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productUnit/unit.interface.ts\n            \n            class\n            ProductUnitQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/productUnit/unit.service.ts\n            \n            injectable\n            ProductUnitService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        packages/server/src/modules/redis/redis.constants.ts\n            \n            variable\n            IORedisKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/server/src/modules/redis/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/role/role.interface.ts\n            \n            class\n            RoleQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/role/role.interface.ts\n            \n            class\n            RoleRequest\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.controller.ts\n            \n            controller\n            MenuController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateBodyRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateCategory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateCategoryProduct\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.interface.ts\n            \n            class\n            TemplateQuery\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                packages/server/src/modules/template/template.service.ts\n            \n            injectable\n            TemplateService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.interface.ts\n            \n            class\n            UserPasswordRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.interface.ts\n            \n            class\n            UserQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.interface.ts\n            \n            class\n            UserRequest\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.interface.ts\n            \n            class\n            UserSearchModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                packages/server/src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @bill/database : ^1.0.0\n        \n            @compodoc/compodoc : ^1.1.26\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BasicStatus   (packages/.../assets.ts)\n                        \n                        \n                            Environment   (packages/.../env.validation.ts)\n                        \n                        \n                            PermissionType   (packages/.../assets.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/server/src/assets.ts\n    \n        \n            \n                \n                    \n                        \n                        BasicStatus\n                    \n                \n                        \n                            \n                                 DISABLE\n                            \n                        \n                        \n                            \n                                 ENABLE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PermissionType\n                    \n                \n                        \n                            \n                                 CATALOGUE\n                            \n                        \n                        \n                            \n                                 MENU\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    packages/server/src/config/env.validation.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPermission   (packages/.../migrate.ts)\n                        \n                        \n                            addRoleData   (packages/.../migrate.ts)\n                        \n                        \n                            addUserData   (packages/.../migrate.ts)\n                        \n                        \n                            bootstrap   (packages/.../main.ts)\n                        \n                        \n                            buildDefaultConfig   (packages/.../log4js.default.config.ts)\n                        \n                        \n                            createOptionProvider   (packages/.../log4js.provider.ts)\n                        \n                        \n                            dataFilter   (packages/.../dataFilter.ts)\n                        \n                        \n                            hashPwd   (packages/.../hash.ts)\n                        \n                        \n                            Match   (packages/.../match.decorator.ts)\n                        \n                        \n                            migrationExecutor   (packages/.../migrate.ts)\n                        \n                        \n                            validate   (packages/.../env.validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/server/src/migrate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addPermission\n                        \n                    \n                \n            \n            \n                \naddPermission(em: EntityManager, root?, parent?: MenuEntity)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                em\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                root\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                parent\n                                            \n                                                        MenuEntity\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addRoleData\n                        \n                    \n                \n            \n            \n                \naddRoleData(em: EntityManager)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                em\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserData\n                        \n                    \n                \n            \n            \n                \naddUserData(em: EntityManager, secret: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                em\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secret\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        migrationExecutor\n                        \n                    \n                \n            \n            \n                \nmigrationExecutor(em: EntityManager, secret: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                em\n                                            \n                                                        EntityManager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secret\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    packages/server/src/modules/log4js/log4js.default.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildDefaultConfig\n                        \n                    \n                \n            \n            \n                \nbuildDefaultConfig(level: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                level\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Configuration\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/modules/log4js/log4js.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOptionProvider\n                        \n                    \n                \n            \n            \n                \ncreateOptionProvider(options?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/common/utils/dataFilter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataFilter\n                        \n                    \n                \n            \n            \n                \ndataFilter(userEntity: UserEntity)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userEntity\n                                            \n                                                        UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/common/utils/hash.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hashPwd\n                        \n                    \n                \n            \n            \n                \nhashPwd(password: string, secret: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                secret\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/common/decorators/match.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Match\n                        \n                    \n                \n            \n            \n                \nMatch(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                property\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    packages/server/src/config/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(config: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_Log4jsGlobalModule\n\n\n\ncluster_Log4jsGlobalModule_exports\n\n\n\ncluster_Log4jsGlobalModule_providers\n\n\n\ncluster_Log4jsModule\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_exports\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_exports\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_ProductCategoryModule\n\n\n\ncluster_ProductCategoryModule_exports\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductUnitModule\n\n\n\ncluster_ProductUnitModule_exports\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_TemplateModule\n\n\n\ncluster_TemplateModule_exports\n\n\n\ncluster_TemplateModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nCompanyService \n\nCompanyService \n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nLog4jsGlobalModule\n\nLog4jsGlobalModule\n\nAppModule -->\n\nLog4jsGlobalModule->AppModule\n\n\n\n\n\nLog4jsService \n\nLog4jsService \n\nLog4jsService  -->\n\nLog4jsGlobalModule->Log4jsService \n\n\n\n\n\nMenuModule\n\nMenuModule\n\nAppModule -->\n\nMenuModule->AppModule\n\n\n\n\n\nMenuService \n\nMenuService \n\nMenuService  -->\n\nMenuModule->MenuService \n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nOrderService \n\nOrderService \n\nOrderService  -->\n\nOrderModule->OrderService \n\n\n\n\n\nProductCategoryModule\n\nProductCategoryModule\n\nAppModule -->\n\nProductCategoryModule->AppModule\n\n\n\n\n\nProductCategoryService \n\nProductCategoryService \n\nProductCategoryService  -->\n\nProductCategoryModule->ProductCategoryService \n\n\n\n\n\nProductModule\n\nProductModule\n\nCustomerModule -->\n\nProductModule->CustomerModule\n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductUnitModule\n\nProductUnitModule\n\nAppModule -->\n\nProductUnitModule->AppModule\n\n\n\n\n\nProductUnitService \n\nProductUnitService \n\nProductUnitService  -->\n\nProductUnitModule->ProductUnitService \n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nTemplateModule\n\nTemplateModule\n\nAppModule -->\n\nTemplateModule->AppModule\n\n\n\n\n\nTemplateService \n\nTemplateService \n\nTemplateService  -->\n\nTemplateModule->TemplateService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBcryptService\n\nBcryptService\n\nAuthModule -->\n\nBcryptService->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nAuthModule -->\n\nCompanyService->AuthModule\n\n\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\nUserModule -->\n\nCompanyService->UserModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nAuthModule -->\n\nMenuService->AuthModule\n\n\n\nCompanyModule -->\n\nMenuService->CompanyModule\n\n\n\nMenuModule -->\n\nMenuService->MenuModule\n\n\n\nRoleModule -->\n\nMenuService->RoleModule\n\n\n\nUserModule -->\n\nMenuService->UserModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nAuthModule -->\n\nRoleService->AuthModule\n\n\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\nUserModule -->\n\nRoleService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nLog4jsService\n\nLog4jsService\n\nLog4jsGlobalModule -->\n\nLog4jsService->Log4jsGlobalModule\n\n\n\n\n\nLog4jsModule\n\nLog4jsModule\n\nLog4jsModule -->\n\nLog4jsService->Log4jsModule\n\n\n\nLog4jsService  -->\n\nLog4jsModule->Log4jsService \n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\nOrderModule -->\n\nProductCategoryService->OrderModule\n\n\n\nProductCategoryModule -->\n\nProductCategoryService->ProductCategoryModule\n\n\n\nProductModule -->\n\nProductCategoryService->ProductModule\n\n\n\nTemplateModule -->\n\nProductCategoryService->TemplateModule\n\n\n\n\n\nProductService\n\nProductService\n\nOrderModule -->\n\nProductService->OrderModule\n\n\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\nTemplateModule -->\n\nProductService->TemplateModule\n\n\n\n\n\nProductUnitService\n\nProductUnitService\n\nOrderModule -->\n\nProductUnitService->OrderModule\n\n\n\nProductModule -->\n\nProductUnitService->ProductModule\n\n\n\nProductUnitModule -->\n\nProductUnitService->ProductUnitModule\n\n\n\nTemplateModule -->\n\nProductUnitService->TemplateModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nTemplateModule -->\n\nTemplateService->TemplateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    36 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Log4jsGlobalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Log4jsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductCategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductUnitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TemplateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ModuleWithHotReload   (packages/.../main.ts)\n                        \n                        \n                            RequestWithUser   (packages/.../auth.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/server/src/main.ts\n    \n    \n        \n            \n                \n                    \n                    ModuleWithHotReload\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    packages/server/src/modules/auth/auth.controller.ts\n    \n    \n        \n            \n                \n                    \n                    RequestWithUser\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (packages/.../active-user.decorator.ts)\n                        \n                        \n                            ADMIN_ROLE   (packages/.../assets.ts)\n                        \n                        \n                            basePath   (packages/.../log4js.default.config.ts)\n                        \n                        \n                            COMPONENTS_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            DASHBOARD_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            DEFAULT_USER   (packages/.../assets.ts)\n                        \n                        \n                            ERRORS_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            FUNCTIONS_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            IORedisKey   (packages/.../redis.constants.ts)\n                        \n                        \n                            LOG4JS_OPTION   (packages/.../log4js.constants.ts)\n                        \n                        \n                            MANAGEMENT_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            MENU_LEVEL_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            ORG_LIST   (packages/.../assets.ts)\n                        \n                        \n                            OTHERS_PERMISSION   (packages/.../assets.ts)\n                        \n                        \n                            PERMISSION_LIST   (packages/.../assets.ts)\n                        \n                        \n                            Public   (packages/.../public.decorator.ts)\n                        \n                        \n                            ROLE_LIST   (packages/.../assets.ts)\n                        \n                        \n                            Roles   (packages/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (packages/.../roles.decorator.ts)\n                        \n                        \n                            TEST_ROLE   (packages/.../assets.ts)\n                        \n                        \n                            TEST_USER   (packages/.../assets.ts)\n                        \n                        \n                            USER_LIST   (packages/.../assets.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/server/src/common/decorators/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData | undefined = request.user;\n\n    return field ? user?.[field] : user;\n  }\n)\n                    \n                \n\n\n        \n    \n\n    packages/server/src/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"4281707933534332\",\n  name: \"Admin\",\n  label: \"admin\",\n  status: BasicStatus.ENABLE,\n  order: 1,\n  desc: \"Super Admin\",\n  permission: PERMISSION_LIST,\n}\n                    \n                \n\n            \n                \n                    User role mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMPONENTS_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"2271615060673773\",\n  parentId: \"\",\n  label: \"sys.menu.components\",\n  name: \"Components\",\n  icon: \"solar:widget-5-bold-duotone\",\n  type: PermissionType.CATALOGUE,\n  route: \"components\",\n  order: 3,\n  children: [\n    {\n      id: \"2478488238255411\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.icon\",\n      name: \"Icon\",\n      type: PermissionType.MENU,\n      route: \"icon\",\n      component: \"/components/icon/index.tsx\",\n    },\n    {\n      id: \"6755238352318767\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.animate\",\n      name: \"Animate\",\n      type: PermissionType.MENU,\n      route: \"animate\",\n      component: \"/components/animate/index.tsx\",\n    },\n    {\n      id: \"9992476513546805\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.scroll\",\n      name: \"Scroll\",\n      type: PermissionType.MENU,\n      route: \"scroll\",\n      component: \"/components/scroll/index.tsx\",\n    },\n    {\n      id: \"1755562695856395\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.markdown\",\n      name: \"Markdown\",\n      type: PermissionType.MENU,\n      route: \"markdown\",\n      component: \"/components/markdown/index.tsx\",\n    },\n    {\n      id: \"2122547769468069\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.editor\",\n      name: \"Editor\",\n      type: PermissionType.MENU,\n      route: \"editor\",\n      component: \"/components/editor/index.tsx\",\n    },\n    {\n      id: \"2501920741714350\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.i18n\",\n      name: \"Multi Language\",\n      type: PermissionType.MENU,\n      route: \"i18n\",\n      component: \"/components/multi-language/index.tsx\",\n    },\n    {\n      id: \"2013577074467956\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.upload\",\n      name: \"upload\",\n      type: PermissionType.MENU,\n      route: \"Upload\",\n      component: \"/components/upload/index.tsx\",\n    },\n    {\n      id: \"7749726274771764\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.chart\",\n      name: \"Chart\",\n      type: PermissionType.MENU,\n      route: \"chart\",\n      component: \"/components/chart/index.tsx\",\n    },\n    {\n      id: \"2013577074467957\",\n      parentId: \"2271615060673773\",\n      label: \"sys.menu.toast\",\n      name: \"Toast\",\n      type: PermissionType.MENU,\n      route: \"toast\",\n      component: \"/components/toast/index.tsx\",\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DASHBOARD_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"9100714781927703\",\n  parentId: \"\",\n  label: \"sys.menu.dashboard\",\n  name: \"Dashboard\",\n  icon: \"ic-analysis\",\n  type: PermissionType.CATALOGUE,\n  route: \"dashboard\",\n  order: 1,\n  children: [\n    {\n      id: \"8426999229400979\",\n      parentId: \"9100714781927703\",\n      label: \"sys.menu.workbench\",\n      name: \"Workbench\",\n      type: PermissionType.MENU,\n      route: \"workbench\",\n      component: \"/dashboard/workbench/index.tsx\",\n    },\n    {\n      id: \"9710971640510357\",\n      parentId: \"9100714781927703\",\n      label: \"sys.menu.analysis\",\n      name: \"Analysis\",\n      type: PermissionType.MENU,\n      route: \"analysis\",\n      component: \"/dashboard/analysis/index.tsx\",\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    User permission mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"b34719e1-ce46-457e-9575-99505ecee828\",\n  username: \"admin\",\n  email: \"nick@126.com\",\n  avatar: \"\",\n  password: \"demo1234\",\n  roleId: 1,\n}\n                    \n                \n\n            \n                \n                    User data mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERRORS_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"9406067785553476\",\n  parentId: \"\",\n  label: \"sys.menu.error.index\",\n  name: \"Error\",\n  icon: \"bxs:error-alt\",\n  type: PermissionType.CATALOGUE,\n  route: \"error\",\n  order: 6,\n  children: [\n    {\n      id: \"8557056851997154\",\n      parentId: \"9406067785553476\",\n      label: \"sys.menu.error.403\",\n      name: \"403\",\n      type: PermissionType.MENU,\n      route: \"403\",\n      component: \"/sys/error/Page403.tsx\",\n    },\n    {\n      id: \"5095669208159005\",\n      parentId: \"9406067785553476\",\n      label: \"sys.menu.error.404\",\n      name: \"404\",\n      type: PermissionType.MENU,\n      route: \"404\",\n      component: \"/sys/error/Page404.tsx\",\n    },\n    {\n      id: \"0225992135973772\",\n      parentId: \"9406067785553476\",\n      label: \"sys.menu.error.500\",\n      name: \"500\",\n      type: PermissionType.MENU,\n      route: \"500\",\n      component: \"/sys/error/Page500.tsx\",\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FUNCTIONS_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"8132044808088488\",\n  parentId: \"\",\n  label: \"sys.menu.functions\",\n  name: \"functions\",\n  icon: \"solar:plain-2-bold-duotone\",\n  type: PermissionType.CATALOGUE,\n  route: \"functions\",\n  order: 4,\n  children: [\n    {\n      id: \"3667930780705750\",\n      parentId: \"8132044808088488\",\n      label: \"sys.menu.clipboard\",\n      name: \"Clipboard\",\n      type: PermissionType.MENU,\n      route: \"clipboard\",\n      component: \"/functions/clipboard/index.tsx\",\n    },\n    {\n      id: \"3667930780705751\",\n      parentId: \"8132044808088488\",\n      label: \"sys.menu.token_expired\",\n      name: \"Token Expired\",\n      type: PermissionType.MENU,\n      route: \"token-expired\",\n      component: \"/functions/token-expired/index.tsx\",\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MANAGEMENT_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"0901673425580518\",\n  parentId: \"\",\n  label: \"sys.menu.management\",\n  name: \"Management\",\n  icon: \"ic-management\",\n  type: PermissionType.CATALOGUE,\n  route: \"management\",\n  order: 2,\n  children: [\n    {\n      id: \"2781684678535711\",\n      parentId: \"0901673425580518\",\n      label: \"sys.menu.user.index\",\n      name: \"User\",\n      type: PermissionType.CATALOGUE,\n      route: \"user\",\n      children: [\n        {\n          id: \"4754063958766648\",\n          parentId: \"2781684678535711\",\n          label: \"sys.menu.user.profile\",\n          name: \"Profile\",\n          type: PermissionType.MENU,\n          route: \"profile\",\n          component: \"/management/user/profile/index.tsx\",\n        },\n        {\n          id: \"2516598794787938\",\n          parentId: \"2781684678535711\",\n          label: \"sys.menu.user.account\",\n          name: \"Account\",\n          type: PermissionType.MENU,\n          route: \"account\",\n          component: \"/management/user/account/index.tsx\",\n        },\n      ],\n    },\n    {\n      id: \"0249937641030250\",\n      parentId: \"0901673425580518\",\n      label: \"sys.menu.system.index\",\n      name: \"System\",\n      type: PermissionType.CATALOGUE,\n      route: \"system\",\n      children: [\n        {\n          id: \"1985890042972842\",\n          parentId: \"0249937641030250\",\n          label: \"sys.menu.system.organization\",\n          name: \"Organization\",\n          type: PermissionType.MENU,\n          route: \"organization\",\n          component: \"/management/system/organization/index.tsx\",\n        },\n        {\n          id: \"4359580910369984\",\n          parentId: \"0249937641030250\",\n          label: \"sys.menu.system.permission\",\n          name: \"Permission\",\n          type: PermissionType.MENU,\n          route: \"permission\",\n          component: \"/management/system/permission/index.tsx\",\n        },\n        {\n          id: \"1689241785490759\",\n          parentId: \"0249937641030250\",\n          label: \"sys.menu.system.role\",\n          name: \"Role\",\n          type: PermissionType.MENU,\n          route: \"role\",\n          component: \"/management/system/role/index.tsx\",\n        },\n        {\n          id: \"0157880245365433\",\n          parentId: \"0249937641030250\",\n          label: \"sys.menu.system.user\",\n          name: \"User\",\n          type: PermissionType.MENU,\n          route: \"user\",\n          component: \"/management/system/user/index.tsx\",\n        },\n        {\n          id: \"0157880245365434\",\n          parentId: \"0249937641030250\",\n          label: \"sys.menu.system.user_detail\",\n          name: \"User Detail\",\n          type: PermissionType.MENU,\n          route: \"user/:id\",\n          component: \"/management/system/user/detail.tsx\",\n          hide: true,\n        },\n      ],\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MENU_LEVEL_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"0194818428516575\",\n  parentId: \"\",\n  label: \"sys.menu.menulevel.index\",\n  name: \"Menu Level\",\n  icon: \"ic-menulevel\",\n  type: PermissionType.CATALOGUE,\n  route: \"menu-level\",\n  order: 5,\n  children: [\n    {\n      id: \"0144431332471389\",\n      parentId: \"0194818428516575\",\n      label: \"sys.menu.menulevel.1a\",\n      name: \"Menu Level 1a\",\n      type: PermissionType.MENU,\n      route: \"menu-level-1a\",\n      component: \"/menu-level/menu-level-1a/index.tsx\",\n    },\n    {\n      id: \"7572529636800586\",\n      parentId: \"0194818428516575\",\n      label: \"sys.menu.menulevel.1b.index\",\n      name: \"Menu Level 1b\",\n      type: PermissionType.CATALOGUE,\n      route: \"menu-level-1b\",\n      children: [\n        {\n          id: \"3653745576583237\",\n          parentId: \"7572529636800586\",\n          label: \"sys.menu.menulevel.1b.2a\",\n          name: \"Menu Level 2a\",\n          type: PermissionType.MENU,\n          route: \"menu-level-2a\",\n          component: \"/menu-level/menu-level-1b/menu-level-2a/index.tsx\",\n        },\n        {\n          id: \"4873136353891364\",\n          parentId: \"7572529636800586\",\n          label: \"sys.menu.menulevel.1b.2b.index\",\n          name: \"Menu Level 2b\",\n          type: PermissionType.CATALOGUE,\n          route: \"menu-level-2b\",\n          children: [\n            {\n              id: \"4233029726998055\",\n              parentId: \"4873136353891364\",\n              label: \"sys.menu.menulevel.1b.2b.3a\",\n              name: \"Menu Level 3a\",\n              type: PermissionType.MENU,\n              route: \"menu-level-3a\",\n              component:\n                \"/menu-level/menu-level-1b/menu-level-2b/menu-level-3a/index.tsx\",\n            },\n            {\n              id: \"3298034742548454\",\n              parentId: \"4873136353891364\",\n              label: \"sys.menu.menulevel.1b.2b.3b\",\n              name: \"Menu Level 3b\",\n              type: PermissionType.MENU,\n              route: \"menu-level-3b\",\n              component:\n                \"/menu-level/menu-level-1b/menu-level-2b/menu-level-3b/index.tsx\",\n            },\n          ],\n        },\n      ],\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORG_LIST\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: \"1\",\n    name: \"East China Branch\",\n    status: \"enable\",\n    desc: \"hello\",\n    order: 1,\n    children: [\n      {\n        id: \"1-1\",\n        name: \"R&D Department\",\n        status: \"disable\",\n        desc: \"\",\n        order: 1,\n      },\n      {\n        id: \"1-2\",\n        name: \"Marketing Department\",\n        status: \"enable\",\n        desc: \"\",\n        order: 2,\n      },\n      {\n        id: \"1-3\",\n        name: \"Finance Department\",\n        status: \"enable\",\n        desc: \"\",\n        order: 3,\n      },\n    ],\n  },\n  {\n    id: \"2\",\n    name: \"South China Branch\",\n    status: \"enable\",\n    desc: \"dfdf\",\n    order: 2,\n    children: [\n      {\n        id: \"2-1\",\n        name: \"R&D Department\",\n        status: \"disable\",\n        desc: \"\",\n        order: 1,\n      },\n      {\n        id: \"2-2\",\n        name: \"Marketing Department\",\n        status: \"enable\",\n        desc: \"\",\n        order: 2,\n      },\n      {\n        id: \"2-3\",\n        name: \"Finance Department\",\n        status: \"enable\",\n        desc: \"\",\n        order: 3,\n      },\n    ],\n  },\n]\n                    \n                \n\n            \n                \n                    Organization data mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTHERS_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: \"3981225257359246\",\n    parentId: \"\",\n    label: \"sys.menu.calendar\",\n    name: \"Calendar\",\n    icon: \"solar:calendar-bold-duotone\",\n    type: PermissionType.MENU,\n    route: \"calendar\",\n    component: \"/sys/others/calendar/index.tsx\",\n  },\n  {\n    id: \"3513985683886393\",\n    parentId: \"\",\n    label: \"sys.menu.kanban\",\n    name: \"kanban\",\n    icon: \"solar:clipboard-bold-duotone\",\n    type: PermissionType.MENU,\n    route: \"kanban\",\n    component: \"/sys/others/kanban/index.tsx\",\n  },\n  {\n    id: \"5455837930804461\",\n    parentId: \"\",\n    label: \"sys.menu.disabled\",\n    name: \"Disabled\",\n    icon: \"ic_disabled\",\n    type: PermissionType.MENU,\n    route: \"disabled\",\n    status: BasicStatus.DISABLE,\n    component: \"/sys/others/calendar/index.tsx\",\n  },\n  {\n    id: \"7728048658221587\",\n    parentId: \"\",\n    label: \"sys.menu.label\",\n    name: \"Label\",\n    icon: \"ic_label\",\n    type: PermissionType.MENU,\n    route: \"label\",\n    newFeature: true,\n    component: \"/sys/others/blank.tsx\",\n  },\n  {\n    id: \"5733704222120995\",\n    parentId: \"\",\n    label: \"sys.menu.frame\",\n    name: \"Frame\",\n    icon: \"ic_external\",\n    type: PermissionType.CATALOGUE,\n    route: \"frame\",\n    children: [\n      {\n        id: \"9884486809510480\",\n        parentId: \"5733704222120995\",\n        label: \"sys.menu.external_link\",\n        name: \"External Link\",\n        type: PermissionType.MENU,\n        route: \"external_link\",\n        hideTab: true,\n        component: \"/sys/others/iframe/external-link.tsx\",\n        frameSrc: \"https://ant.design/\",\n      },\n      {\n        id: \"9299640886731819\",\n        parentId: \"5733704222120995\",\n        label: \"sys.menu.iframe\",\n        name: \"Iframe\",\n        type: PermissionType.MENU,\n        route: \"frame\",\n        component: \"/sys/others/iframe/index.tsx\",\n        frameSrc: \"https://ant.design/\",\n      },\n    ],\n  },\n  {\n    id: \"0941594969900756\",\n    parentId: \"\",\n    label: \"sys.menu.blank\",\n    name: \"Disabled\",\n    icon: \"ic_blank\",\n    type: PermissionType.MENU,\n    route: \"blank\",\n    component: \"/sys/others/blank.tsx\",\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERMISSION_LIST\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  DASHBOARD_PERMISSION,\n  MANAGEMENT_PERMISSION,\n  COMPONENTS_PERMISSION,\n  FUNCTIONS_PERMISSION,\n  MENU_LEVEL_PERMISSION,\n  ERRORS_PERMISSION,\n  ...OTHERS_PERMISSION,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLE_LIST\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ADMIN_ROLE, TEST_ROLE]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEST_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"9931665660771476\",\n  name: \"Test\",\n  label: \"test\",\n  status: BasicStatus.ENABLE,\n  order: 2,\n  desc: \"test\",\n  permission: [\n    DASHBOARD_PERMISSION,\n    COMPONENTS_PERMISSION,\n    FUNCTIONS_PERMISSION,\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEST_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: \"efaa20ea-4dc5-47ee-a200-8a899be29494\",\n  username: \"Test\",\n  email: \"nick1@126.com\",\n  avatar: \"\",\n  roleId: 2,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_LIST\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [DEFAULT_USER, TEST_USER]\n                    \n                \n\n\n        \n    \n\n    packages/server/src/modules/log4js/log4js.default.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(process.cwd(), \"logs\")\n                    \n                \n\n\n        \n    \n\n    packages/server/src/modules/redis/redis.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IORedisKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'IORedis'\n                    \n                \n\n\n        \n    \n\n    packages/server/src/modules/log4js/log4js.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOG4JS_OPTION\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOG4JS_OPTION\")\n                    \n                \n\n\n        \n    \n\n    packages/server/src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): CustomDecorator => SetMetadata('isPublic', true)\n                    \n                \n\n\n        \n    \n\n    packages/server/src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"roles\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
