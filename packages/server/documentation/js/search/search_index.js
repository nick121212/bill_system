var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.978,1,1.516]],["body/modules/AppModule.html",[0,1.369,1,2.673,2,0.95,3,0.95,4,1.276,5,1.276,6,0.95,7,1.82,8,1.276,9,1.797,10,1.797,11,2.187,12,0.056,13,1.892,14,1.82,15,1.276,16,1.099,17,0.526,18,0.445,19,0.445,20,2.25,21,2.137,22,1.101,23,0.445,24,1.797,25,1.276,26,2.25,27,2.491,28,1.276,29,2.986,30,1.499,31,3.208,32,2.25,33,3.208,34,2.25,35,2.25,36,1.797,37,2.25,38,2.25,39,2.25,40,2.25,41,2.25,42,2.137,43,2.25,44,1.797,45,1.797,46,2.25,47,0.614,48,2.25,49,2.25,50,2.25,51,1.797,52,0.526,53,0.445,54,0.034,55,0.034]],["title/injectables/AppService.html",[56,0.36,57,1.781]],["body/injectables/AppService.html",[12,0.054,17,0.769,18,0.651,19,0.651,22,0.769,23,0.651,47,0.898,52,0.769,53,0.651,54,0.043,55,0.043,56,0.557,57,2.759,58,1.205,59,2.629,60,0.769,61,1.516,62,4.756,63,1.205,64,3.291,65,1.205,66,2.022,67,3.291,68,3.291]],["title/controllers/AuthController.html",[69,1.516,70,1.516]],["body/controllers/AuthController.html",[12,0.056,17,0.5,18,0.423,19,0.423,22,0.987,23,0.423,47,0.993,52,0.5,53,0.423,54,0.033,55,0.033,60,0.5,61,1.133,63,1.331,65,1.331,69,1.756,70,1.756,71,1.71,72,1.71,73,3.096,74,2.151,75,2.473,76,3.096,77,2.141,78,3.636,79,2.141,80,2.141,81,1.536,82,1.536,83,1.536,84,3.519,85,2.141,86,2.141,87,2.141,88,2.063,89,2.141,90,2.141,91,2.141,92,2.141,93,2.141,94,1.71,95,1.71,96,0.905,97,1.331,98,1.427,99,1.045,100,1.215,101,1.71,102,2.063,103,1.71,104,2.141,105,2.141,106,1.427,107,3.096,108,2.141,109,2.141,110,2.141,111,2.141,112,2.141,113,2.141,114,2.141,115,2.141,116,2.141,117,2.141]],["title/modules/AuthModule.html",[0,0.978,11,1.305]],["body/modules/AuthModule.html",[0,1.247,2,0.808,3,0.808,4,1.086,5,1.086,6,0.808,7,1.933,8,1.086,11,2.351,12,0.056,13,1.788,14,1.617,15,1.086,16,0.934,17,0.447,18,0.378,19,0.378,21,1.899,22,1.111,23,0.378,27,2.27,28,1.086,36,1.529,44,1.529,45,1.529,47,0.522,51,1.529,52,0.447,53,0.378,54,0.03,55,0.03,70,1.933,71,2.277,96,0.808,97,1.549,98,1.275,99,1.392,100,1.086,101,1.529,118,1.529,119,1.529,120,1.914,121,2.066,122,2.066,123,1.914,124,2.851,125,1.914,126,1.914,127,1.914,128,1.275,129,1.914,130,2.851,131,1.275,132,1.914,133,1.086,134,1.914,135,1.914,136,1.914,137,1.914,138,1.914,139,1.914,140,1.914,141,1.914,142,1.914]],["title/injectables/AuthService.html",[56,0.36,97,0.978]],["body/injectables/AuthService.html",[12,0.056,17,0.461,18,0.39,19,0.39,22,0.895,23,0.39,47,0.947,52,0.461,53,0.39,54,0.031,55,0.031,56,0.392,58,0.722,60,0.461,61,1.067,63,1.27,65,1.067,66,2.089,74,2.089,75,2.329,81,1.465,82,1.465,83,1.465,84,1.576,88,1.314,94,1.576,97,1.067,128,1.314,133,1.967,143,1.576,144,2.915,145,1.424,146,1.973,147,1.619,148,4.427,149,1.973,150,1.27,151,2.915,152,2.915,153,3.06,154,1.973,155,3.06,156,2.915,157,3.831,158,1.973,159,1.654,160,1.943,161,1.973,162,1.576,163,2.329,164,1.576,165,1.973,166,1.973,167,1.314,168,2.915,169,1.973,170,1.576,171,1.973,172,1.973,173,1.973,174,1.973,175,1.973]],["title/injectables/JwtAuthGuard.html",[56,0.36,99,1.305]],["body/injectables/JwtAuthGuard.html",[12,0.056,17,0.572,18,0.485,19,0.485,22,0.989,23,0.485,42,1.633,47,0.93,52,0.572,53,0.485,54,0.036,55,0.036,56,0.459,58,0.897,60,0.572,61,1.247,63,1.247,65,0.897,81,1.439,82,1.439,83,1.439,95,1.958,96,1.035,99,1.663,103,1.958,106,1.633,131,1.633,133,1.39,145,1.197,150,1.247,176,3.128,177,1.958,178,2.27,179,3.407,180,3.407,181,2.451,182,4.604,183,2.451,184,3.407,185,4.232,186,2.451,187,2.451,188,1.633,189,1.633,190,2.721,191,2.451,192,2.451,193,2.451,194,2.451]],["title/injectables/JwtStrategy.html",[56,0.36,121,1.305]],["body/injectables/JwtStrategy.html",[12,0.056,17,0.58,18,0.491,19,0.491,22,0.994,23,0.491,27,2.977,28,1.408,47,0.678,52,0.58,53,0.491,54,0.036,55,0.036,56,0.463,58,0.909,60,0.58,61,1.258,63,1.258,65,0.909,74,1.925,81,1.452,82,1.452,83,1.452,88,1.654,96,1.049,100,1.408,121,1.678,145,1.212,150,1.258,159,1.408,170,1.983,178,2.29,189,1.654,195,1.983,196,2.746,197,2.746,198,3.437,199,2.482,200,3.437,201,2.482,202,2.482,203,1.983,204,1.654,205,1.983,206,2.482,207,2.482,208,2.482,209,1.983,210,2.482,211,2.482,212,2.482,213,2.482,214,2.482]],["title/injectables/LocalStrategy.html",[56,0.36,122,1.305]],["body/injectables/LocalStrategy.html",[12,0.055,17,0.554,18,0.469,19,0.469,22,0.974,23,0.469,47,0.647,52,0.554,53,0.469,54,0.035,55,0.035,56,0.448,58,0.868,60,0.554,61,1.218,63,1.218,65,0.868,66,2.224,74,1.878,81,1.406,82,1.406,83,1.406,96,1.001,97,1.668,98,1.579,106,1.579,122,1.625,133,1.345,145,1.157,150,1.218,155,3.072,159,1.345,160,2.217,164,1.893,167,2.779,178,2.217,189,1.579,196,2.658,197,2.658,203,1.893,204,1.579,205,1.893,215,1.893,216,2.37,217,2.37,218,3.328,219,2.37,220,1.893,221,3.328,222,2.37,223,2.37,224,1.893]],["title/modules/UserModule.html",[0,0.978,13,1.129]],["body/modules/UserModule.html",[0,1.527,2,1.17,3,1.17,4,1.571,5,1.571,6,1.17,7,2.366,8,2.366,12,0.054,13,2.06,14,2.1,15,1.571,16,1.352,17,0.647,18,0.548,19,0.548,21,1.845,22,1.04,23,0.548,24,2.212,25,1.571,29,2.212,30,1.845,52,0.647,53,0.548,54,0.039,55,0.039,147,2.175,225,2.212,226,2.212,227,2.212,228,2.769,229,2.769,230,2.769]],["title/injectables/UserService.html",[56,0.36,147,1.129]],["body/injectables/UserService.html",[12,0.056,17,0.545,18,0.461,19,0.461,22,0.967,23,0.461,25,1.323,47,0.898,52,0.545,53,0.461,54,0.035,55,0.035,56,0.443,58,0.854,60,0.545,61,1.205,63,1.205,65,0.854,66,1.861,74,1.861,81,1.39,82,1.39,83,1.39,145,1.606,147,1.39,150,1.205,153,1.863,159,2.163,160,2.192,162,1.863,163,1.863,167,1.554,209,1.863,231,1.863,232,3.29,233,2.332,234,3.308,235,2.332,236,3.29,237,3.29,238,2.332,239,2.332,240,1.863,241,2.332,242,2.332,243,2.332,244,2.332,245,1.863,246,2.332,247,2.332,248,2.332,249,2.332,250,2.332,251,2.332]],["title/coverage.html",[252,2.409]],["body/coverage.html",[6,1.159,12,0.054,19,0.542,54,0.039,55,0.039,56,0.641,57,1.827,59,2.191,69,1.556,70,1.556,72,2.191,97,1.004,99,1.339,102,1.827,121,1.339,122,1.339,143,2.191,147,1.159,150,1.004,176,2.191,177,2.191,188,1.827,195,2.191,215,2.191,224,2.191,231,2.191,252,1.827,253,2.191,254,2.742,255,2.742,256,2.939,257,3.679,258,5.061,259,4.151,260,2.191,261,2.742,262,2.742,263,3.679,264,4.436,265,2.742,266,2.742]],["title/dependencies.html",[3,1.354,267,1.795]],["body/dependencies.html",[3,1.199,12,0.056,23,0.561,25,1.609,28,1.609,30,1.89,53,0.744,54,0.04,55,0.04,96,1.199,100,1.609,128,1.89,131,1.89,204,2.507,220,2.266,240,2.266,268,3.763,269,4.222,270,2.837,271,3.763,272,2.837,273,2.837,274,2.837,275,2.837,276,2.837,277,2.837,278,2.837,279,2.837,280,2.837,281,2.837,282,2.837,283,2.837,284,2.837,285,2.837,286,2.837,287,2.837,288,2.837,289,2.837,290,2.837,291,2.837,292,2.837,293,2.837]],["title/miscellaneous/functions.html",[294,1.275,295,2.56]],["body/miscellaneous/functions.html",[6,2.061,12,0.048,54,0.048,55,0.048,60,0.909,260,3.108,294,2.207,295,3.108,296,3.891]],["title/index.html",[60,0.525,297,2.247,298,2.247]],["body/index.html",[12,0.051,16,1.884,18,0.3,54,0.025,55,0.025,234,1.211,252,1.01,253,1.905,299,1.516,300,1.516,301,2.948,302,2.385,303,1.516,304,1.516,305,1.516,306,1.516,307,2.385,308,1.211,309,2.948,310,1.516,311,1.516,312,3.342,313,1.516,314,3.342,315,4.182,316,1.516,317,4.037,318,1.516,319,1.516,320,1.516,321,2.385,322,1.516,323,2.385,324,1.516,325,2.948,326,1.516,327,2.385,328,1.516,329,1.516,330,1.516,331,1.516,332,1.516,333,3.342,334,4.182,335,3.859,336,1.516,337,2.385,338,1.516,339,1.516,340,1.516,341,1.516,342,1.516,343,3.859,344,2.385,345,3.342,346,1.516,347,2.385,348,1.516,349,1.516,350,2.385,351,3.859,352,3.342,353,1.516,354,2.385,355,1.516,356,1.516,357,1.516,358,1.516,359,3.342,360,1.516,361,1.516,362,1.516,363,1.516,364,2.385,365,1.516,366,1.516,367,1.516,368,1.516,369,1.516,370,2.385,371,1.516,372,1.516,373,1.516,374,2.385,375,1.516,376,1.516,377,2.67,378,2.385,379,1.516,380,1.516,381,1.516,382,1.516,383,1.516,384,1.516,385,1.516,386,1.516,387,2.385,388,1.516,389,1.516,390,1.516,391,1.516,392,2.948,393,1.516,394,1.516,395,1.516,396,1.516,397,1.516,398,1.516,399,2.385,400,1.516,401,1.516,402,1.516,403,1.516,404,1.516,405,2.385,406,1.516,407,1.516,408,1.516,409,2.385,410,2.385,411,1.516,412,1.516,413,1.516,414,1.516,415,1.516,416,1.516,417,1.516,418,1.516,419,1.516,420,1.516,421,1.516,422,1.211,423,1.516,424,1.516,425,1.516,426,1.516,427,1.516,428,1.516,429,1.211]],["title/modules.html",[2,1.527]],["body/modules.html",[1,2.094,2,1.559,11,1.802,12,0.047,13,1.559,54,0.047,55,0.047,377,3.81,430,4.77,431,4.77,432,4.77]],["title/overview.html",[433,2.888]],["body/overview.html",[0,0.99,1,2.691,2,1.142,3,1.142,4,1.534,5,1.534,6,1.142,7,1.534,8,1.534,9,2.16,10,2.16,11,2.486,12,0.053,13,2.048,14,2.067,15,1.534,16,1.32,54,0.038,55,0.038,58,0.99,69,1.534,97,1.509,118,2.16,119,2.16,121,2.012,122,2.012,147,2.048,225,2.16,226,2.16,227,2.16,245,2.16,433,2.16,434,2.704,435,2.704]],["title/properties.html",[267,1.795,436,2.56]],["body/properties.html",[12,0.054,54,0.048,55,0.048,308,3.046,422,3.046,429,3.046,436,3.046,437,3.813,438,3.813,439,3.813]],["title/miscellaneous/variables.html",[294,1.275,440,2.56]],["body/miscellaneous/variables.html",[12,0.054,42,2.339,54,0.045,55,0.045,60,0.82,66,1.714,102,2.873,150,1.285,188,2.873,190,2.805,256,2.805,294,1.992,440,2.805,441,4.312,442,4.312,443,4.312,444,3.511]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":438,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":245,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["1.0.0",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":434,"title":{},"body":{"overview.html":{}}}],["3.12.0",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":435,"title":{},"body":{"overview.html":{}}}],["60s",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.8.1",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":249,"title":{},"body":{"injectables/UserService.html":{}}}],["allowing",{"_index":365,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":415,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["application",{"_index":335,"title":{},"body":{"index.html":{}}}],["applications",{"_index":307,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":57,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":177,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":186,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":183,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authcontroller",{"_index":70,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard(\"jwt",{"_index":179,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":422,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":248,"title":{},"body":{"injectables/UserService.html":{}}}],["await",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["aws",{"_index":354,"title":{},"body":{"index.html":{}}}],["backers",{"_index":416,"title":{},"body":{"index.html":{}}}],["base",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["based",{"_index":349,"title":{},"body":{"index.html":{}}}],["bill/database",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["bill/database/dist/entities",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["board",{"_index":408,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":432,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":430,"title":{},"body":{"modules.html":{}}}],["building",{"_index":302,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":180,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":184,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["changeme",{"_index":247,"title":{},"body":{"injectables/UserService.html":{}}}],["channel",{"_index":380,"title":{},"body":{"index.html":{}}}],["check",{"_index":343,"title":{},"body":{"index.html":{}}}],["class",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["clicks",{"_index":364,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":348,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":225,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":226,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":227,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":371,"title":{},"body":{"index.html":{}}}],["config",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config.get(\"base",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get(\"database",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["config/base",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get(\"base\").jwtsecret",{"_index":211,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(1111",{"_index":242,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(config.get(\"database",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":216,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(private",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(reflector",{"_index":181,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(userrepo",{"_index":233,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":187,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.getclass",{"_index":193,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":192,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":69,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["cookie",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["courses",{"_index":386,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":252,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["database",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator/public",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["decorators",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":382,"title":{},"body":{"index.html":{}}}],["default",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":333,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":353,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":344,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":363,"title":{},"body":{"index.html":{}}}],["description",{"_index":308,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":318,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":394,"title":{},"body":{"index.html":{}}}],["discord",{"_index":379,"title":{},"body":{"index.html":{}}}],["dive",{"_index":381,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":253,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e2e",{"_index":328,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":303,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":341,"title":{},"body":{"index.html":{}}}],["email",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["ensure",{"_index":339,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":398,"title":{},"body":{"index.html":{}}}],["entities",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["env",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":314,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":185,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["experience",{"_index":384,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":178,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":207,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":209,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["fast",{"_index":357,"title":{},"body":{"index.html":{}}}],["features",{"_index":367,"title":{},"body":{"index.html":{}}}],["few",{"_index":359,"title":{},"body":{"index.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findone",{"_index":232,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(email",{"_index":237,"title":{},"body":{"injectables/UserService.html":{}}}],["focus",{"_index":366,"title":{},"body":{"index.html":{}}}],["follow",{"_index":402,"title":{},"body":{"index.html":{}}}],["framework",{"_index":301,"title":{},"body":{"index.html":{}}}],["full",{"_index":397,"title":{},"body":{"index.html":{}}}],["fullname",{"_index":246,"title":{},"body":{"injectables/UserService.html":{}}}],["function",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":295,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":362,"title":{},"body":{"index.html":{}}}],["get(\"profile",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":297,"title":{"index.html":{}},"body":{}}],["graph",{"_index":389,"title":{},"body":{"index.html":{}}}],["grow",{"_index":412,"title":{},"body":{"index.html":{}}}],["hands",{"_index":383,"title":{},"body":{"index.html":{}}}],["handy",{"_index":372,"title":{},"body":{"index.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":387,"title":{},"body":{"index.html":{}}}],["here",{"_index":420,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":426,"title":{},"body":{"index.html":{}}}],["id",{"_index":244,"title":{},"body":{"injectables/UserService.html":{}}}],["identifier",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":60,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":346,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":369,"title":{},"body":{"index.html":{}}}],["inject",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":239,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(userentity",{"_index":241,"title":{},"body":{"injectables/UserService.html":{}}}],["install",{"_index":361,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":316,"title":{},"body":{"index.html":{}}}],["interact",{"_index":390,"title":{},"body":{"index.html":{}}}],["is_public_key",{"_index":188,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":250,"title":{},"body":{"injectables/UserService.html":{}}}],["isglobal",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":190,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":405,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":407,"title":{},"body":{"index.html":{}}}],["join",{"_index":418,"title":{},"body":{"index.html":{}}}],["js",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":99,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":206,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":121,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":423,"title":{},"body":{"index.html":{}}}],["key",{"_index":336,"title":{},"body":{"index.html":{}}}],["learn",{"_index":375,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":429,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":410,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":404,"title":{},"body":{"index.html":{}}}],["load",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":220,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":122,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@request",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":347,"title":{},"body":{"index.html":{}}}],["loop",{"_index":400,"title":{},"body":{"index.html":{}}}],["makes",{"_index":355,"title":{},"body":{"index.html":{}}}],["managing",{"_index":368,"title":{},"body":{"index.html":{}}}],["matching",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":351,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":294,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":409,"title":{},"body":{"index.html":{}}}],["mode",{"_index":321,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules/user/user.service",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["more",{"_index":345,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":424,"title":{},"body":{"index.html":{}}}],["name",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["need",{"_index":395,"title":{},"body":{"index.html":{}}}],["nest",{"_index":309,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":428,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":334,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":224,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["nick@126.com",{"_index":243,"title":{},"body":{"injectables/UserService.html":{}}}],["node.js",{"_index":300,"title":{},"body":{"index.html":{}}}],["npm",{"_index":315,"title":{},"body":{"index.html":{}}}],["null",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.assign",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["offer",{"_index":406,"title":{},"body":{"index.html":{}}}],["official",{"_index":352,"title":{},"body":{"index.html":{}}}],["open",{"_index":411,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["opts",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["opts.jwtsecret",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":433,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":267,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["parser",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":396,"title":{},"body":{"index.html":{}}}],["pass",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":205,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["path",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":214,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":213,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["platform",{"_index":350,"title":{},"body":{"index.html":{}}}],["please",{"_index":378,"title":{},"body":{"index.html":{}}}],["possible",{"_index":342,"title":{},"body":{"index.html":{}}}],["post",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"auth/logout",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":323,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":299,"title":{},"body":{"index.html":{}}}],["project",{"_index":312,"title":{},"body":{"index.html":{}}}],["promise",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":436,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provide",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@useguards(undefined)@post('login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["questions",{"_index":376,"title":{},"body":{"index.html":{}}}],["read",{"_index":419,"title":{},"body":{"index.html":{}}}],["ready",{"_index":332,"title":{},"body":{"index.html":{}}}],["real",{"_index":391,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":182,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["repository",{"_index":234,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["req.logout",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["requiring",{"_index":358,"title":{},"body":{"index.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":370,"title":{},"body":{"index.html":{}}}],["result",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["run",{"_index":317,"title":{},"body":{"index.html":{}}}],["runs",{"_index":340,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":304,"title":{},"body":{"index.html":{}}}],["secret",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":210,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":305,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":313,"title":{},"body":{"index.html":{}}}],["side",{"_index":306,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":360,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":414,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.ts",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/decorator/public.ts",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/app/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/app/app.service.ts",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/app/app.service.ts:5",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:17",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:23",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:29",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:13",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:25",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:7",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/jwt",{"_index":176,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:16",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:7",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/local.strategy.ts",{"_index":215,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/local.strategy.ts:12",{"_index":219,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/auth/local.strategy.ts:7",{"_index":217,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/user/user.module.ts",{"_index":228,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":231,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:12",{"_index":238,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:7",{"_index":235,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":319,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":322,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":324,"title":{},"body":{"index.html":{}}}],["started",{"_index":298,"title":{"index.html":{}},"body":{}}],["starter",{"_index":311,"title":{},"body":{"index.html":{}}}],["statements",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":399,"title":{},"body":{"index.html":{}}}],["steps",{"_index":337,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":356,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":189,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":194,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":377,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":431,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":338,"title":{},"body":{"index.html":{}}}],["test",{"_index":327,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":330,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":329,"title":{},"body":{"index.html":{}}}],["tests",{"_index":325,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":413,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":222,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign(payload",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":191,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.userrepo.findone",{"_index":251,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersservice.findone(email",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":223,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["time",{"_index":392,"title":{},"body":{"index.html":{}}}],["touch",{"_index":421,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":427,"title":{},"body":{"index.html":{}}}],["type",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":240,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":230,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":310,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":221,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":326,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":439,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":401,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefactory",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["useguards(authguard(\"local",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(undefined)@post('auth/logout",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["user.email",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":229,"title":{},"body":{"modules/UserModule.html":{}}}],["userentity",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":212,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usermodule",{"_index":13,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userrepo",{"_index":236,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":147,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":393,"title":{},"body":{"index.html":{}}}],["validate",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":218,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":440,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":437,"title":{},"body":{"properties.html":{}}}],["video",{"_index":385,"title":{},"body":{"index.html":{}}}],["visit",{"_index":374,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":388,"title":{},"body":{"index.html":{}}}],["watch",{"_index":320,"title":{},"body":{"index.html":{}}}],["website",{"_index":425,"title":{},"body":{"index.html":{}}}],["working",{"_index":373,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":403,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":417,"title":{},"body":{"index.html":{}}}],["you're",{"_index":331,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport entities from \"@bill/database\";\n\nimport database from \"@/config/database\";\nimport base from \"@/config/base\";\nimport { AuthModule } from \"@/modules/auth/auth.module\";\nimport { UserModule } from \"@/modules/user/user.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [\".env\"],\n      load: [database, base],\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: (config: ConfigService) => {\n        console.log(config.get(\"database\"));\n        return Object.assign(\n          {\n            entities: entities || [],\n            synchronize: true,\n          },\n          config.get(\"database\")\n        );\n      },\n      inject: [ConfigService],\n    }),\n    UserModule,\n    AuthModule,\n  ],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/app/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(undefined)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\nimport { AuthService } from \"./auth.service\";\nimport { JwtAuthGuard } from \"./jwt-auth.guard\";\nimport { Public } from \"@/decorator/public\";\n\n@Controller({\n  path: [\"auth\"],\n})\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"login\")\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"auth/logout\")\n  async logout(@Request() req) {\n    return req.logout();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(\"profile\")\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { UserModule } from \"@/modules/user/user.module\";\nimport { PassportModule } from \"@nestjs/passport\";\n\nimport { LocalStrategy } from \"./local.strategy\";\nimport { AuthController } from \"./auth.controller\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { JwtAuthGuard } from \"./jwt-auth.guard\";\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      useFactory: (config: ConfigService) => {\n        const opts = config.get(\"base\") || {};\n\n        return {\n          secret: opts.jwtSecret,\n          signOptions: { expiresIn: \"60s\" },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n  ],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Get, Injectable, Req, UseGuards } from \"@nestjs/common\";\nimport { UserService } from \"@/modules/user/user.service\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { UserEntity } from \"@bill/database/dist/entities\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private jwtService: JwtService\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOne(email);\n\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n\n      return result;\n    }\n\n    return null;\n  }\n\n  async login(user: UserEntity) {\n    const payload = { email: user.email, sub: user.id };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard(\"jwt\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt-auth.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IS_PUBLIC_KEY } from \"@/decorator/public\";\nimport { ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(\"jwt\") {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"base\").jwtSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from \"passport-local\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UserService } from \"./user.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport entities from \"@bill/database\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature(entities)],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserEntity } from \"@bill/database/dist/entities\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserEntity) private userRepo: Repository\n  ) {}\n\n  async findOne(email: string): Promise {\n    console.log(1111);\n    return {\n      email: \"nick@126.com\",\n      id: 1,\n      fullname: \"\",\n      password: \"changeme\",\n      avatar: \"\",\n      address: \"\",\n      isActive: false,\n    };\n\n    // return this.userRepo.findOne({\n    //   where: {\n    //     email,\n    //   },\n    // });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/decorator/public.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/public.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @bill/database : ^1.0.0\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            js-yaml : ^4.1.0\n        \n            mysql2 : ^3.12.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.ts)\n                        \n                        \n                            Public   (src/.../public.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorator/public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"isPublic\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
